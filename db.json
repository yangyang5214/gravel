{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/gallery/0.jpg","path":"medias/gallery/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","path":"medias/reward/alipay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"f3af07fa14a0a9a4119ad2ab7637ecf23568f47a","modified":1594489177721},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1594482020424},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1594482020424},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"5b1334d4b57dd22f199be17fb7190614dde2f5e4","modified":1594489000265},{"_id":"themes/hexo-theme-matery/README.md","hash":"b8556db9886754f8a436eb0166f46d5a847ff714","modified":1594489000264},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"ed3ef555ae49bf28f7e7e0d3890e02f99ff3066f","modified":1594522584311},{"_id":"source/_data/friends.json","hash":"ada91858aaf140e69a0b8463d9a470b16a873554","modified":1594488802321},{"_id":"source/_posts/Effective Java.md","hash":"10d0ec839dfcf8258c56c68a0b92fb3bfb771b4e","modified":1594653022365},{"_id":"source/_posts/TinyURL 的加密与解密.md","hash":"483abcb8697a89fca8af1e566de7eddbec9991d7","modified":1594653022356},{"_id":"source/_posts/finereport.md","hash":"e7ba38eecba098a0ffa7e88a49031f22c7c54636","modified":1594653022358},{"_id":"source/_posts/idea.md","hash":"3f4662df7c7968cf62e0eaadd2114b1048afea24","modified":1594653022371},{"_id":"source/_posts/jenkins.md","hash":"ea3ed8781c8277be6e2227a83151a60b05bcd13e","modified":1594653022361},{"_id":"source/_posts/oauth2.md","hash":"6a5d663b43e898a79ab21ec77734d0937d3df0dd","modified":1594653022370},{"_id":"source/_posts/netty.md","hash":"02262e49eb1d257dcfab5897656caf4474d13433","modified":1594653022363},{"_id":"source/_posts/vim.md","hash":"090533eefc5d0458e8418e3d05951bfb779c909a","modified":1594653022374},{"_id":"source/_posts/xpath.md","hash":"c0f6b483f82a01269d69c0c3a7f026ac190e22c5","modified":1594653022373},{"_id":"source/_posts/宝石与石头.md","hash":"4791b3c76983473048b3b84451aa31e096176882","modified":1594653022359},{"_id":"source/_posts/层数最深叶子节点的和.md","hash":"f33614e91bb6cbd26f354ecb6558a68999d59d4c","modified":1594653022371},{"_id":"source/_posts/统计位数为偶数的数字.md","hash":"01c941100c8cc8246ff168fdfeb1630ec3f9378f","modified":1594653022366},{"_id":"source/_posts/整数的各位积和之差.md","hash":"6863a35ab7c12383063c426dcf4516bba166de63","modified":1594653022367},{"_id":"source/_posts/解压缩编码列表.md","hash":"3634b1bdf39c57210f31d83a4fb3436fc098a919","modified":1594653022375},{"_id":"source/_posts/递归.md","hash":"d7e6bf9642226a5a5307c42acdcbe40b4d641aa7","modified":1594653022375},{"_id":"source/about/index.md","hash":"8c412ce41f88fadf0976a5ab148b56be69042845","modified":1594489258514},{"_id":"source/contact/index.md","hash":"543e39afa39588a1c4cec1a9060dcf19fb8f2c2d","modified":1594489177723},{"_id":"source/tags/index.md","hash":"746484b997d442b539d36dd3e9a7f36d1d39d390","modified":1594488839729},{"_id":"source/friends/index.md","hash":"3fe67c4861c7c1bccc9d7d7b0ebcca2139eacc1c","modified":1594488839732},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1594482020425},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"41849f9300b8dc47048333fcf4a897dd8a2a13ca","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"72fb5af3fc2f8955e2eb10926bbe4532a04ccd1b","modified":1594482020437},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"f5d6459bed0f4ecb214f2dbff5b2207a80c44f66","modified":1594482020437},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"a0de92ad49e2e660be040dde13fa1acb65beee9e","modified":1594482020437},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"22125624381b8d4dd50cb17ffe0631c838557364","modified":1594482020438},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1594482020439},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1594482020438},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1594482020438},{"_id":"themes/hexo-theme-matery/source/.DS_Store","hash":"b1c7e3b9430c0cac2bcea6ed2c8a3dafecc87e59","modified":1594485050235},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1594482020441},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"4b5d5c80d36311bf8e3da2f393c1b40fd633fe9e","modified":1594520237136},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"928315869fce90a72c9e067e1472955e416d0112","modified":1594522517950},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"8d263ebccccd0f9e69539f402955296de6f24a62","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"dc3f8d9faee91ede001407e7cac96590973bc87a","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"5f09386aece8f9cf31f6059bbde79cd6c5171493","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"ff3ceb93a03af5d9d120710347570ecaafc00979","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"d05926e79aa6dfc235193b9d8c6aa03118b0eade","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"2c454daf630a170f1dd7f2b42c3f3012f0c908e5","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"b39db4e38cf230a83e83dbbfae5560519f59abfa","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"0e4c0a6154aa34007849928ca88f05b6185b256e","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1594482020433},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1594482020433},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1594482020434},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"543d835c4c1c24fcac8f84ea094d8e82edeef526","modified":1594482020434},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1594482020435},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1594482020435},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1594482020435},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1594482020439},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1594482020440},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"dd541544372e3cf7c1193ffe690dba8b26d568cd","modified":1594489000267},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"10577fbc30f241b126d1b51b1f56136ecba86b19","modified":1594482020440},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1594482020441},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1594482020441},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1594482020505},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1594482020520},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"af344db58080a9b0e25be9f8ac55352ec92098d4","modified":1594517694218},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1594482020442},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1594482020442},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1594482020443},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1594482020443},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1594482020471},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1594482020473},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1594482020473},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1594482020473},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1594482020474},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1594482020480},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1594482020482},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1594482020483},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1594482020483},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1594482020484},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1594482020490},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1594482020496},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1594482020496},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1594482020508},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1594482020506},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1594482020511},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1594482020511},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1594482020514},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1594482020515},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1594482020515},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1594489000271},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1594489000273},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1594482020518},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1594482020519},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"a64e0039aaf5631c7d44e4d92961421b58a61443","modified":1594517251693},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1594482020442},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1594482020475},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1594482020483},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1594482020484},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1594482020497},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1594482020499},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1594482020501},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1594482020502},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1594482020509},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1594482020509},{"_id":"themes/hexo-theme-matery/source/medias/gallery/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1594489000267},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1594482020509},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1594482020510},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1594482020512},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1594482020513},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1594482020512},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1594482020514},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1594489000272},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1594482020517},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1594482020519},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","hash":"7cbe9b3849386544815e4db5b9973c8118be4728","modified":1594517237285},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1594482020453},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1594482020456},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1594482020456},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1594482020482},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1594482020485},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1594482020485},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1594482020486},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1594482020485},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1594482020486},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1594482020486},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1594482020491},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1594482020495},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1594482020495},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1594482020496},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1594482020498},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1594482020500},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1594482020504},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1594482020505},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1594482020470},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1594482020471},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1594482020444},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1594482020445},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1594482020452},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1594482020453},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1594482020453},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1594482020455},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1594482020470},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1594482020455},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1594482020503},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1594482020458},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"e18c08ccb596833c407315a65fec4d1c5c3ccbcd","modified":1592290832000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"0ad1dc04008c14326b6c208bb2e30d36a58a57ac","modified":1373306800000},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"ef6462e3ee437bbac9ca28c1fb34cf9a69e3daca","modified":1594522106278},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1594482020479},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1594482020451},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1594482020468},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"01159f5bb3b7fef058c482cf6276d50b9cc634d5","modified":1594652414214},{"_id":"public/contact/index.html","hash":"fc408e0943dd3f6700273e15b93c65361c5809bc","modified":1594653024926},{"_id":"public/404.html","hash":"87376b041a486c7009db327841c44709bfa3cf52","modified":1594653024926},{"_id":"public/about/index.html","hash":"20db3cce9294627632f48d8603a4d431d9662cf9","modified":1594653024926},{"_id":"public/tags/index.html","hash":"646c9f4d208dc795ec6c46a406c30a235ac6037d","modified":1594653024926},{"_id":"public/2020/06/07/Effective Java/index.html","hash":"e234d0dbc12a3cbf9ab855e29a0e663a74d7912e","modified":1594653024926},{"_id":"public/friends/index.html","hash":"3362c669ce9bab4849cec82f493ef3e490b737b2","modified":1594653024926},{"_id":"public/2020/03/26/netty/index.html","hash":"3a88421a2b423bfbc03d27ffc67f71a80722e09f","modified":1594653024926},{"_id":"public/2020/02/27/idea/index.html","hash":"2f8dcfea036c56437b434e8ba63fcca577eba896","modified":1594653024926},{"_id":"public/2020/02/26/jenkins/index.html","hash":"2a2b90823a59bb8fa893a5d50345bc1bc9feaf4e","modified":1594653024926},{"_id":"public/2020/02/26/vim/index.html","hash":"988497ddc289f5c7105dede27d8859269587de78","modified":1594653024926},{"_id":"public/2020/02/22/finereport/index.html","hash":"10a062e4329f7fc8eff50692d2449e806aca653a","modified":1594653024926},{"_id":"public/2020/02/14/xpath/index.html","hash":"05f920e3a08e71c9e15776017e855867be2c07f5","modified":1594653024926},{"_id":"public/2020/02/13/oauth2/index.html","hash":"28d67dcaacd03d2de7a2550bcb2f5476d0c35697","modified":1594653024926},{"_id":"public/2020/01/27/TinyURL 的加密与解密/index.html","hash":"61c0016172004a305645eb32ae6081d6b12e493c","modified":1594653024926},{"_id":"public/2020/01/26/递归/index.html","hash":"d44c548d0396abec63b32b92cd721f740bea8b89","modified":1594653024926},{"_id":"public/2020/01/26/层数最深叶子节点的和/index.html","hash":"00ec29d8522f6dc04d61fbca5baacb13d3597ad0","modified":1594653024926},{"_id":"public/2020/01/25/整数的各位积和之差/index.html","hash":"5c8a94a1cd0a67d38b5d70d093fa369ae7f0d883","modified":1594653024926},{"_id":"public/2020/01/25/统计位数为偶数的数字/index.html","hash":"9cb3d94a6827d472b24475f3181392153da7b46f","modified":1594653024926},{"_id":"public/2020/01/24/宝石与石头/index.html","hash":"2edfc096c149e1e650194304ccd2ca765430b33f","modified":1594653024926},{"_id":"public/2020/01/23/解压缩编码列表/index.html","hash":"977cf52779f25d8ea40c45cbfc6d5b35901eb4f8","modified":1594653024926},{"_id":"public/archives/index.html","hash":"0fe291dd4aee67331e91c9a90024cf3026651b0d","modified":1594653024926},{"_id":"public/archives/page/2/index.html","hash":"54b2b02b4e8fb65c51032c8da56df7dc88414fa1","modified":1594653024926},{"_id":"public/archives/2020/index.html","hash":"e263fd7b942922c27dbaa289c89c290c3dd2dedb","modified":1594653024926},{"_id":"public/archives/2020/page/2/index.html","hash":"64198febedb0d67fc841e14c42b262e99cb37b4c","modified":1594653024926},{"_id":"public/archives/2020/01/index.html","hash":"952c99969a4a6212a14288c5767e4395f765602a","modified":1594653024926},{"_id":"public/archives/2020/02/index.html","hash":"34862ba36db56360004082e93a84cf93da014e95","modified":1594653024926},{"_id":"public/archives/2020/03/index.html","hash":"0a442ab417d74f22e79f32d7ed837d3a4a99e53d","modified":1594653024926},{"_id":"public/archives/2020/06/index.html","hash":"be9b13744a3b59cb195e3c857d8f8baca0a93526","modified":1594653024926},{"_id":"public/tags/book/index.html","hash":"fe443571f6741119b307a322af78882c795d2999","modified":1594653024926},{"_id":"public/tags/leetcode/index.html","hash":"55ee587074c5108838a00a4111f8cf64e396a7f5","modified":1594653024926},{"_id":"public/tags/tools/index.html","hash":"af7a1107c125ab8b777d9deb0072640f8aef3fd2","modified":1594653024926},{"_id":"public/tags/java/index.html","hash":"b6bf644432e7d8a0989b1026f6641b014e43a2cc","modified":1594653024926},{"_id":"public/tags/linux/index.html","hash":"aa9302d011f8b1148a3fc41d47493f5fe44fea1a","modified":1594653024926},{"_id":"public/tags/scrapy/index.html","hash":"8ba8c3ed8ffb3117e6a7b5ec4339a463a0cc6793","modified":1594653024926},{"_id":"public/tags/占坑法/index.html","hash":"676bd352ef83934167859211bc69443bd90f162b","modified":1594653024926},{"_id":"public/tags/递归/index.html","hash":"7278640212000ca36183f342b0db9658a3e2414e","modified":1594653024926},{"_id":"public/tags/二叉树/index.html","hash":"3d54367e6e0d249556ffe0d2c0c975f20485b1c5","modified":1594653024926},{"_id":"public/tags/阶乘/index.html","hash":"38c6deca084b56e003f055d5d9cd73fcb7b68b0f","modified":1594653024926},{"_id":"public/index.html","hash":"24a8b79d955a8a7362fda7e410ce70660d8cec27","modified":1594653024926},{"_id":"public/page/2/index.html","hash":"804d3660b4a7d2df718c9277797f25da3d625675","modified":1594653024926},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1594653024926},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1594653024926},{"_id":"public/medias/logo.png","hash":"af344db58080a9b0e25be9f8ac55352ec92098d4","modified":1594653024926},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1594653024926},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1594653024926},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1594653024926},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1594653024926},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1594653024926},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1594653024926},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1594653024926},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1594653024926},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1594653024926},{"_id":"public/medias/reward/wechat.png","hash":"a64e0039aaf5631c7d44e4d92961421b58a61443","modified":1594653024926},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1594653024926},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1594653024926},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1594653024926},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1594653024926},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1594653024926},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1594653024926},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1594653024926},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1594653024926},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1594653024926},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1594653024926},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1594653024926},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1594653024926},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1594653024926},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1594653024926},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1594653024926},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1594653024926},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1594653024926},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1594653024926},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1594653024926},{"_id":"public/medias/gallery/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1594653024926},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1594653024926},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1594653024926},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1594653024926},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1594653024926},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1594653024926},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1594653024926},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1594653024926},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1594653024926},{"_id":"public/medias/reward/alipay.png","hash":"7cbe9b3849386544815e4db5b9973c8118be4728","modified":1594653024926},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1594653024926},{"_id":"public/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1594653024926},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1594653024926},{"_id":"public/css/my.css","hash":"10577fbc30f241b126d1b51b1f56136ecba86b19","modified":1594653024926},{"_id":"public/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1594653024926},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1594653024926},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1594653024926},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1594653024926},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1594653024926},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1594653024926},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1594653024926},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1594653024926},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1594653024926},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1594653024926},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1594653024926},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1594653024926},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1594653024926},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1594653024926},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1594653024926},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1594653024926},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1594653024926},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1594653024926},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1594653024926},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1594653024926},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1594653024926},{"_id":"public/css/matery.css","hash":"dd541544372e3cf7c1193ffe690dba8b26d568cd","modified":1594653024926},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1594653024926},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1594653024926},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1594653024926},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1594653024926},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1594653024926},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1594653024926},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1594653024926},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1594653024926},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1594653024926},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1594653024926},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1594653024926},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1594653024926},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1594653024926},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1594653024926},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1594653024926},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1594653024926},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1594653024926},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1594653024926},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1594653024926},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1594653024926},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1594653024926},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1594653024926},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1594653024926},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1594653024926},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1594653024926},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1594653024926},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1594653024926},{"_id":"public/medias/avatar.jpg","hash":"ef6462e3ee437bbac9ca28c1fb34cf9a69e3daca","modified":1594653024926},{"_id":"public/medias/featureimages/2.jpg","hash":"0ad1dc04008c14326b6c208bb2e30d36a58a57ac","modified":1594653024926},{"_id":"public/medias/featureimages/0.jpg","hash":"e18c08ccb596833c407315a65fec4d1c5c3ccbcd","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1594653024926},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1594653024926},{"_id":"public/medias/featureimages/1.jpg","hash":"01159f5bb3b7fef058c482cf6276d50b9cc634d5","modified":1594653024926}],"Category":[],"Data":[{"_id":"friends","data":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}],"Page":[{"title":"404","date":"2020-05-29T16:00:00.000Z","type":"404","layout":"404","description":"Cannot find the page you want :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2020-05-30 00:00:00\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Cannot find the page you want :(\"\n---","updated":"2020-07-11T17:39:37.721Z","path":"404.html","comments":1,"_id":"ckckn8l6g0000rlsldnfw3dq8","content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"about","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ntype: \"about\"\nlayout: \"about\"\n---\n","date":"2020-07-11T17:40:58.514Z","updated":"2020-07-11T17:40:58.514Z","path":"about/index.html","comments":1,"_id":"ckckn8l8r0002rlsl9wq3auf6","content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"contact","date":"2018-09-30T09:25:30.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2020-07-11T17:39:37.723Z","path":"contact/index.html","comments":1,"_id":"ckckn8l8t0004rlsl53dd0xk0","content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"tags","type":"tags","layout":"tags","date":"2020-07-11T15:46:30.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: \"tags\"\nlayout: \"tags\"\ndate: 2020-07-11 23:46:30\n---\n","updated":"2020-07-11T17:33:59.729Z","path":"tags/index.html","comments":1,"_id":"ckckn8l8y0007rlsl6tshdq2k","content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"friends","type":"friends","layout":"friends","date":"2020-07-11T15:46:44.000Z","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ntype: \"friends\"\nlayout: \"friends\"\ndate: 2020-07-11 23:46:44\n---\n","updated":"2020-07-11T17:33:59.732Z","path":"friends/index.html","comments":1,"_id":"ckckn8l8z0009rlsl4c3ngcok","content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""}],"Post":[{"title":"Effective Java","date":"2020-06-07T15:11:51.000Z","_content":"\n## 创建和销毁对象\n\n### 静态工厂代替构造器\n\n**优势:**\n\n- 有名称。 相对于多个构造器多个参数而言好理解\n- 不必每次都创建新的对象\n\n```\npublic final class Boolean implements java.io.Serializable,\nComparable<Boolean>\n{\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code true}.\n*/\npublic static final Boolean TRUE = new Boolean(true);\n\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code false}.\n*/\npublic static final Boolean FALSE = new Boolean(false);\n\npublic static Boolean valueOf(boolean b) {\nreturn (b ? TRUE : FALSE);\n}\n}\n```\n\n\n\n\n\n","source":"_posts/Effective Java.md","raw":"---\ntitle: Effective Java\ntags: [book]\ndate: 2020-06-07 23:11:51\n---\n\n## 创建和销毁对象\n\n### 静态工厂代替构造器\n\n**优势:**\n\n- 有名称。 相对于多个构造器多个参数而言好理解\n- 不必每次都创建新的对象\n\n```\npublic final class Boolean implements java.io.Serializable,\nComparable<Boolean>\n{\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code true}.\n*/\npublic static final Boolean TRUE = new Boolean(true);\n\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code false}.\n*/\npublic static final Boolean FALSE = new Boolean(false);\n\npublic static Boolean valueOf(boolean b) {\nreturn (b ? TRUE : FALSE);\n}\n}\n```\n\n\n\n\n\n","slug":"Effective Java","published":1,"updated":"2020-07-13T15:10:22.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l8l0001rlsl5hx7c57o","content":"<h2 id=\"创建和销毁对象\"><a href=\"#创建和销毁对象\" class=\"headerlink\" title=\"创建和销毁对象\"></a>创建和销毁对象</h2><h3 id=\"静态工厂代替构造器\"><a href=\"#静态工厂代替构造器\" class=\"headerlink\" title=\"静态工厂代替构造器\"></a>静态工厂代替构造器</h3><p><strong>优势:</strong></p>\n<ul>\n<li>有名称。 相对于多个构造器多个参数而言好理解</li>\n<li>不必每次都创建新的对象</li>\n</ul>\n<figure class=\"highlight zephir\"><table><tr><td class=\"code\"><pre><code class=\"hljs zephir\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Boolean</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">java</span>.<span class=\"hljs-title\">io</span>.<span class=\"hljs-title\">Serializable</span>,</span><br><span class=\"hljs-class\"><span class=\"hljs-title\">Comparable</span>&lt;<span class=\"hljs-title\">Boolean</span>&gt;</span><br><span class=\"hljs-class\"></span>&#123;<br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">* The &#123;<span class=\"hljs-doctag\">@code</span> Boolean&#125; object corresponding to the primitive</span><br><span class=\"hljs-comment\">* value &#123;<span class=\"hljs-doctag\">@code</span> true&#125;.</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">Boolean</span> <span class=\"hljs-keyword\">TRUE</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">Boolean</span>(<span class=\"hljs-keyword\">true</span>);<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">* The &#123;<span class=\"hljs-doctag\">@code</span> Boolean&#125; object corresponding to the primitive</span><br><span class=\"hljs-comment\">* value &#123;<span class=\"hljs-doctag\">@code</span> false&#125;.</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">Boolean</span> <span class=\"hljs-keyword\">FALSE</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">Boolean</span>(<span class=\"hljs-keyword\">false</span>);<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">Boolean</span> valueOf(<span class=\"hljs-keyword\">boolean</span> b) &#123;<br><span class=\"hljs-keyword\">return</span> (b ? <span class=\"hljs-keyword\">TRUE</span> : <span class=\"hljs-keyword\">FALSE</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h2 id=\"创建和销毁对象\"><a href=\"#创建和销毁对象\" class=\"headerlink\" title=\"创建和销毁对象\"></a>创建和销毁对象</h2><h3 id=\"静态工厂代替构造器\"><a href=\"#静态工厂代替构造器\" class=\"headerlink\" title=\"静态工厂代替构造器\"></a>静态工厂代替构造器</h3><p><strong>优势:</strong></p>\n<ul>\n<li>有名称。 相对于多个构造器多个参数而言好理解</li>\n<li>不必每次都创建新的对象</li>\n</ul>\n<figure class=\"highlight zephir\"><table><tr><td class=\"code\"><pre><code class=\"hljs zephir\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Boolean</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">java</span>.<span class=\"hljs-title\">io</span>.<span class=\"hljs-title\">Serializable</span>,</span><br><span class=\"hljs-class\"><span class=\"hljs-title\">Comparable</span>&lt;<span class=\"hljs-title\">Boolean</span>&gt;</span><br><span class=\"hljs-class\"></span>&#123;<br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">* The &#123;<span class=\"hljs-doctag\">@code</span> Boolean&#125; object corresponding to the primitive</span><br><span class=\"hljs-comment\">* value &#123;<span class=\"hljs-doctag\">@code</span> true&#125;.</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">Boolean</span> <span class=\"hljs-keyword\">TRUE</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">Boolean</span>(<span class=\"hljs-keyword\">true</span>);<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">* The &#123;<span class=\"hljs-doctag\">@code</span> Boolean&#125; object corresponding to the primitive</span><br><span class=\"hljs-comment\">* value &#123;<span class=\"hljs-doctag\">@code</span> false&#125;.</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">Boolean</span> <span class=\"hljs-keyword\">FALSE</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">Boolean</span>(<span class=\"hljs-keyword\">false</span>);<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">Boolean</span> valueOf(<span class=\"hljs-keyword\">boolean</span> b) &#123;<br><span class=\"hljs-keyword\">return</span> (b ? <span class=\"hljs-keyword\">TRUE</span> : <span class=\"hljs-keyword\">FALSE</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"TinyURL 的加密与解密","date":"2020-01-27T02:20:39.000Z","_content":"\nhttps://leetcode-cn.com/problems/encode-and-decode-tinyurl/\n\nTinyURL是一种URL简化服务， 比如：当你输入一个URL https://leetcode.com/problems/design-tinyurl 时，它将返回一个简化的URL http://tinyurl.com/4e9iAk.\n\n要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/encode-and-decode-tinyurl\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png)\n\n- 简单 hashMap  计数\n\n```\npublic class TinyURL {\n\npublic static void main(String[] args) {\nTinyURL tinyURL = new TinyURL();\nString longUrl = \"https://leetcode.com/problems/design-tinyurl\";\n//http://tinyurl.com/4e9iAk.\nString shortUrl = tinyURL.encode(longUrl);\nSystem.out.println(shortUrl);\nSystem.out.println(tinyURL.decode(shortUrl));\n}\n\nMap<Integer, String> hashMap = new HashMap<>();\nint i = 0;\n\n// Encodes a URL to a shortened URL.\npublic String encode(String longUrl) {\nhashMap.put(i, longUrl);\nreturn \"http://tinyurl.com/\" + i++;\n}\n\n// Decodes a shortened URL to its original URL.\npublic String decode(String shortUrl) {\nreturn hashMap.get(Integer.valueOf(shortUrl.replace(\"http://tinyurl.com/\", \"\")));\n}\n}\n```\n\n\n\n\n","source":"_posts/TinyURL 的加密与解密.md","raw":"---\ntitle: TinyURL 的加密与解密\ntags: [leetcode]\ndate: 2020-01-27 10:20:39\n---\n\nhttps://leetcode-cn.com/problems/encode-and-decode-tinyurl/\n\nTinyURL是一种URL简化服务， 比如：当你输入一个URL https://leetcode.com/problems/design-tinyurl 时，它将返回一个简化的URL http://tinyurl.com/4e9iAk.\n\n要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/encode-and-decode-tinyurl\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png)\n\n- 简单 hashMap  计数\n\n```\npublic class TinyURL {\n\npublic static void main(String[] args) {\nTinyURL tinyURL = new TinyURL();\nString longUrl = \"https://leetcode.com/problems/design-tinyurl\";\n//http://tinyurl.com/4e9iAk.\nString shortUrl = tinyURL.encode(longUrl);\nSystem.out.println(shortUrl);\nSystem.out.println(tinyURL.decode(shortUrl));\n}\n\nMap<Integer, String> hashMap = new HashMap<>();\nint i = 0;\n\n// Encodes a URL to a shortened URL.\npublic String encode(String longUrl) {\nhashMap.put(i, longUrl);\nreturn \"http://tinyurl.com/\" + i++;\n}\n\n// Decodes a shortened URL to its original URL.\npublic String decode(String shortUrl) {\nreturn hashMap.get(Integer.valueOf(shortUrl.replace(\"http://tinyurl.com/\", \"\")));\n}\n}\n```\n\n\n\n\n","slug":"TinyURL 的加密与解密","published":1,"updated":"2020-07-13T15:10:22.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l8s0003rlsl903ffr02","content":"<p><a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl/</a></p>\n<p>TinyURL是一种URL简化服务， 比如：当你输入一个URL <a href=\"https://leetcode.com/problems/design-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode.com/problems/design-tinyurl</a> 时，它将返回一个简化的URL <a href=\"http://tinyurl.com/4e9iAk\" target=\"_blank\" rel=\"noopener\">http://tinyurl.com/4e9iAk</a>.</p>\n<p>要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png\" alt=\"\"></p>\n<ul>\n<li>简单 hashMap  计数</li>\n</ul>\n<figure class=\"highlight arduino\"><table><tr><td class=\"code\"><pre><code class=\"hljs arduino\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TinyURL</span> &#123;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">String</span>[] args)</span> </span>&#123;<br>TinyURL tinyURL = <span class=\"hljs-keyword\">new</span> TinyURL();<br><span class=\"hljs-keyword\">String</span> longUrl = <span class=\"hljs-string\">\"https://leetcode.com/problems/design-tinyurl\"</span>;<br><span class=\"hljs-comment\">//http://tinyurl.com/4e9iAk.</span><br><span class=\"hljs-keyword\">String</span> shortUrl = tinyURL.encode(longUrl);<br>System.out.<span class=\"hljs-built_in\">println</span>(shortUrl);<br>System.out.<span class=\"hljs-built_in\">println</span>(tinyURL.decode(shortUrl));<br>&#125;<br><br>Map&lt;Integer, <span class=\"hljs-keyword\">String</span>&gt; hashMap = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();<br><span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;<br><br><span class=\"hljs-comment\">// Encodes a URL to a shortened URL.</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">String</span> <span class=\"hljs-title\">encode</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">String</span> longUrl)</span> </span>&#123;<br>hashMap.<span class=\"hljs-built_in\">put</span>(i, longUrl);<br><span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"http://tinyurl.com/\"</span> + i++;<br>&#125;<br><br><span class=\"hljs-comment\">// Decodes a shortened URL to its original URL.</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">String</span> <span class=\"hljs-title\">decode</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">String</span> shortUrl)</span> </span>&#123;<br><span class=\"hljs-keyword\">return</span> hashMap.<span class=\"hljs-built_in\">get</span>(Integer.valueOf(shortUrl.replace(<span class=\"hljs-string\">\"http://tinyurl.com/\"</span>, <span class=\"hljs-string\">\"\"</span>)));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl/</a></p>\n<p>TinyURL是一种URL简化服务， 比如：当你输入一个URL <a href=\"https://leetcode.com/problems/design-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode.com/problems/design-tinyurl</a> 时，它将返回一个简化的URL <a href=\"http://tinyurl.com/4e9iAk\" target=\"_blank\" rel=\"noopener\">http://tinyurl.com/4e9iAk</a>.</p>\n<p>要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png\" alt=\"\"></p>\n<ul>\n<li>简单 hashMap  计数</li>\n</ul>\n<figure class=\"highlight arduino\"><table><tr><td class=\"code\"><pre><code class=\"hljs arduino\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TinyURL</span> &#123;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">String</span>[] args)</span> </span>&#123;<br>TinyURL tinyURL = <span class=\"hljs-keyword\">new</span> TinyURL();<br><span class=\"hljs-keyword\">String</span> longUrl = <span class=\"hljs-string\">\"https://leetcode.com/problems/design-tinyurl\"</span>;<br><span class=\"hljs-comment\">//http://tinyurl.com/4e9iAk.</span><br><span class=\"hljs-keyword\">String</span> shortUrl = tinyURL.encode(longUrl);<br>System.out.<span class=\"hljs-built_in\">println</span>(shortUrl);<br>System.out.<span class=\"hljs-built_in\">println</span>(tinyURL.decode(shortUrl));<br>&#125;<br><br>Map&lt;Integer, <span class=\"hljs-keyword\">String</span>&gt; hashMap = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();<br><span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;<br><br><span class=\"hljs-comment\">// Encodes a URL to a shortened URL.</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">String</span> <span class=\"hljs-title\">encode</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">String</span> longUrl)</span> </span>&#123;<br>hashMap.<span class=\"hljs-built_in\">put</span>(i, longUrl);<br><span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"http://tinyurl.com/\"</span> + i++;<br>&#125;<br><br><span class=\"hljs-comment\">// Decodes a shortened URL to its original URL.</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">String</span> <span class=\"hljs-title\">decode</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">String</span> shortUrl)</span> </span>&#123;<br><span class=\"hljs-keyword\">return</span> hashMap.<span class=\"hljs-built_in\">get</span>(Integer.valueOf(shortUrl.replace(<span class=\"hljs-string\">\"http://tinyurl.com/\"</span>, <span class=\"hljs-string\">\"\"</span>)));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n"},{"title":"finereport","date":"2020-02-22T01:26:08.000Z","_content":"\n---\n吐槽\n\n[支持的数据库](https://help.finereport.com/doc-view-2458.html#3)\n\n> mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本\n\n```\nbrew install mysql@5.7\nbrew services start mysql@5.7\n```\n\n接 [FineReport \\\\| beer](https://www.hexianwei.com/2019/01/06/FineReport-10.0/) ，继续写~~~\n\n\n---\n本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！\n\n### url 动态传参\n\n\n引入原话：\n\n> 网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询\n\n\n其实就是 url 动态传参数，传递到模板。\n\n---\n未解决。没找到解决方案。\n\n\n\n\n","source":"_posts/finereport.md","raw":"---\ntitle: finereport\ntags: [tools]\ndate: 2020-02-22 09:26:08\n---\n\n---\n吐槽\n\n[支持的数据库](https://help.finereport.com/doc-view-2458.html#3)\n\n> mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本\n\n```\nbrew install mysql@5.7\nbrew services start mysql@5.7\n```\n\n接 [FineReport \\\\| beer](https://www.hexianwei.com/2019/01/06/FineReport-10.0/) ，继续写~~~\n\n\n---\n本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！\n\n### url 动态传参\n\n\n引入原话：\n\n> 网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询\n\n\n其实就是 url 动态传参数，传递到模板。\n\n---\n未解决。没找到解决方案。\n\n\n\n\n","slug":"finereport","published":1,"updated":"2020-07-13T15:10:22.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l8x0006rlsl6qpxbjna","content":"<hr>\n<p>吐槽</p>\n<p><a href=\"https://help.finereport.com/doc-view-2458.html#3\" target=\"_blank\" rel=\"noopener\">支持的数据库</a></p>\n<blockquote>\n<p>mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本</p>\n</blockquote>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\">brew install <span class=\"hljs-symbol\">mysql@</span><span class=\"hljs-number\">5.7</span><br>brew services start <span class=\"hljs-symbol\">mysql@</span><span class=\"hljs-number\">5.7</span><br></code></pre></td></tr></table></figure>\n\n<p>接 <a href=\"https://www.hexianwei.com/2019/01/06/FineReport-10.0/\" target=\"_blank\" rel=\"noopener\">FineReport \\| beer</a> ，继续写<del>~</del></p>\n<hr>\n<p>本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！</p>\n<h3 id=\"url-动态传参\"><a href=\"#url-动态传参\" class=\"headerlink\" title=\"url 动态传参\"></a>url 动态传参</h3><p>引入原话：</p>\n<blockquote>\n<p>网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询</p>\n</blockquote>\n<p>其实就是 url 动态传参数，传递到模板。</p>\n<hr>\n<p>未解决。没找到解决方案。</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<hr>\n<p>吐槽</p>\n<p><a href=\"https://help.finereport.com/doc-view-2458.html#3\" target=\"_blank\" rel=\"noopener\">支持的数据库</a></p>\n<blockquote>\n<p>mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本</p>\n</blockquote>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\">brew install <span class=\"hljs-symbol\">mysql@</span><span class=\"hljs-number\">5.7</span><br>brew services start <span class=\"hljs-symbol\">mysql@</span><span class=\"hljs-number\">5.7</span><br></code></pre></td></tr></table></figure>\n\n<p>接 <a href=\"https://www.hexianwei.com/2019/01/06/FineReport-10.0/\" target=\"_blank\" rel=\"noopener\">FineReport \\| beer</a> ，继续写<del>~</del></p>\n<hr>\n<p>本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！</p>\n<h3 id=\"url-动态传参\"><a href=\"#url-动态传参\" class=\"headerlink\" title=\"url 动态传参\"></a>url 动态传参</h3><p>引入原话：</p>\n<blockquote>\n<p>网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询</p>\n</blockquote>\n<p>其实就是 url 动态传参数，传递到模板。</p>\n<hr>\n<p>未解决。没找到解决方案。</p>\n"},{"title":"idea","date":"2020-02-26T18:49:48.000Z","_content":"\n### 打开多个窗口设置\n\n有时候手贱，根据提示，关闭了。再打开！\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png)\n\n\n\n","source":"_posts/idea.md","raw":"---\ntitle: idea\ntags: [tools]\ndate: 2020-02-27 02:49:48\n---\n\n### 打开多个窗口设置\n\n有时候手贱，根据提示，关闭了。再打开！\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png)\n\n\n\n","slug":"idea","published":1,"updated":"2020-07-13T15:10:22.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l8y0008rlsl8qojewrd","content":"<h3 id=\"打开多个窗口设置\"><a href=\"#打开多个窗口设置\" class=\"headerlink\" title=\"打开多个窗口设置\"></a>打开多个窗口设置</h3><p>有时候手贱，根据提示，关闭了。再打开！</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png\" alt=\"\"></p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h3 id=\"打开多个窗口设置\"><a href=\"#打开多个窗口设置\" class=\"headerlink\" title=\"打开多个窗口设置\"></a>打开多个窗口设置</h3><p>有时候手贱，根据提示，关闭了。再打开！</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png\" alt=\"\"></p>\n"},{"title":"jenkins","date":"2020-02-25T17:12:55.000Z","_content":"\n> 记录简单搭建\n\n\n### install\n\n[Debian Repository for Jenkins](https://pkg.jenkins.io/debian/)\n\n\n[安装Jenkins](https://jenkins.io/zh/doc/book/installing/)\n\n\n\n### start\n\n```\nservice jenkins start\n\n\n默认端口为 8080\n\n可修改配置文件：\n\n/etc/default/jenkins\n```\n\n### config\n\n默认上面的 port = 8081\n\n访问： localhost:8081\n\n1. copy 管理员密码\n2.\n\n","source":"_posts/jenkins.md","raw":"---\ntitle: jenkins\ntags: [java]\ndate: 2020-02-26 01:12:55\n---\n\n> 记录简单搭建\n\n\n### install\n\n[Debian Repository for Jenkins](https://pkg.jenkins.io/debian/)\n\n\n[安装Jenkins](https://jenkins.io/zh/doc/book/installing/)\n\n\n\n### start\n\n```\nservice jenkins start\n\n\n默认端口为 8080\n\n可修改配置文件：\n\n/etc/default/jenkins\n```\n\n### config\n\n默认上面的 port = 8081\n\n访问： localhost:8081\n\n1. copy 管理员密码\n2.\n\n","slug":"jenkins","published":1,"updated":"2020-07-13T15:10:22.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l90000arlsl9zfhb9bt","content":"<blockquote>\n<p>记录简单搭建</p>\n</blockquote>\n<h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><p><a href=\"https://pkg.jenkins.io/debian/\" target=\"_blank\" rel=\"noopener\">Debian Repository for Jenkins</a></p>\n<p><a href=\"https://jenkins.io/zh/doc/book/installing/\" target=\"_blank\" rel=\"noopener\">安装Jenkins</a></p>\n<h3 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h3><figure class=\"highlight gradle\"><table><tr><td class=\"code\"><pre><code class=\"hljs gradle\">service jenkins start<br><br><br>默认端口为 <span class=\"hljs-number\">8080</span><br><br>可修改配置文件：<br><br><span class=\"hljs-regexp\">/etc/</span><span class=\"hljs-keyword\">default</span><span class=\"hljs-regexp\">/jenkins</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config\"></a>config</h3><p>默认上面的 port = 8081</p>\n<p>访问： localhost:8081</p>\n<ol>\n<li>copy 管理员密码</li>\n<li></li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<blockquote>\n<p>记录简单搭建</p>\n</blockquote>\n<h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><p><a href=\"https://pkg.jenkins.io/debian/\" target=\"_blank\" rel=\"noopener\">Debian Repository for Jenkins</a></p>\n<p><a href=\"https://jenkins.io/zh/doc/book/installing/\" target=\"_blank\" rel=\"noopener\">安装Jenkins</a></p>\n<h3 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h3><figure class=\"highlight gradle\"><table><tr><td class=\"code\"><pre><code class=\"hljs gradle\">service jenkins start<br><br><br>默认端口为 <span class=\"hljs-number\">8080</span><br><br>可修改配置文件：<br><br><span class=\"hljs-regexp\">/etc/</span><span class=\"hljs-keyword\">default</span><span class=\"hljs-regexp\">/jenkins</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config\"></a>config</h3><p>默认上面的 port = 8081</p>\n<p>访问： localhost:8081</p>\n<ol>\n<li>copy 管理员密码</li>\n<li></li>\n</ol>\n"},{"title":"oauth2","date":"2020-02-13T03:39:02.000Z","_content":"\n[OAuth2 Boot 官方文档](https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/)\n\n> 记录  mysql + oauth2 + springboot\n\n\n[数据库表说明(oauth.ddl)](http://andaily.com/spring-oauth-server/db_table_description.html)\n\n[sql](https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl)\n\n\n### Authorization Server\n\n\n### Resource Server\n\n\n### User\n\n\n\n\n### create token\n\n\norg.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken\n\n\n\n\n\n\n\n","source":"_posts/oauth2.md","raw":"---\ntitle: oauth2\ntags: [java]\ndate: 2020-02-13 11:39:02\n---\n\n[OAuth2 Boot 官方文档](https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/)\n\n> 记录  mysql + oauth2 + springboot\n\n\n[数据库表说明(oauth.ddl)](http://andaily.com/spring-oauth-server/db_table_description.html)\n\n[sql](https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl)\n\n\n### Authorization Server\n\n\n### Resource Server\n\n\n### User\n\n\n\n\n### create token\n\n\norg.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken\n\n\n\n\n\n\n\n","slug":"oauth2","published":1,"updated":"2020-07-13T15:10:22.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l91000drlsl6me628iv","content":"<p><a href=\"https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/\" target=\"_blank\" rel=\"noopener\">OAuth2 Boot 官方文档</a></p>\n<blockquote>\n<p>记录  mysql + oauth2 + springboot</p>\n</blockquote>\n<p><a href=\"http://andaily.com/spring-oauth-server/db_table_description.html\" target=\"_blank\" rel=\"noopener\">数据库表说明(oauth.ddl)</a></p>\n<p><a href=\"https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl\" target=\"_blank\" rel=\"noopener\">sql</a></p>\n<h3 id=\"Authorization-Server\"><a href=\"#Authorization-Server\" class=\"headerlink\" title=\"Authorization Server\"></a>Authorization Server</h3><h3 id=\"Resource-Server\"><a href=\"#Resource-Server\" class=\"headerlink\" title=\"Resource Server\"></a>Resource Server</h3><h3 id=\"User\"><a href=\"#User\" class=\"headerlink\" title=\"User\"></a>User</h3><h3 id=\"create-token\"><a href=\"#create-token\" class=\"headerlink\" title=\"create token\"></a>create token</h3><p>org.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/\" target=\"_blank\" rel=\"noopener\">OAuth2 Boot 官方文档</a></p>\n<blockquote>\n<p>记录  mysql + oauth2 + springboot</p>\n</blockquote>\n<p><a href=\"http://andaily.com/spring-oauth-server/db_table_description.html\" target=\"_blank\" rel=\"noopener\">数据库表说明(oauth.ddl)</a></p>\n<p><a href=\"https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl\" target=\"_blank\" rel=\"noopener\">sql</a></p>\n<h3 id=\"Authorization-Server\"><a href=\"#Authorization-Server\" class=\"headerlink\" title=\"Authorization Server\"></a>Authorization Server</h3><h3 id=\"Resource-Server\"><a href=\"#Resource-Server\" class=\"headerlink\" title=\"Resource Server\"></a>Resource Server</h3><h3 id=\"User\"><a href=\"#User\" class=\"headerlink\" title=\"User\"></a>User</h3><h3 id=\"create-token\"><a href=\"#create-token\" class=\"headerlink\" title=\"create token\"></a>create token</h3><p>org.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken</p>\n"},{"title":"netty","date":"2020-03-26T15:59:52.000Z","_content":"\n### 简介\n\n- 网络应用程序框架\n- 异步  时间驱动\n- 高性能  可维护\n- 服务端和客户端\n\nNetty is an asynchronous event-driven network application framework\nfor rapid development of maintainable high performance protocol servers & clients.\n\n\n\n\n","source":"_posts/netty.md","raw":"---\ntitle: netty\ntags: [java]\ndate: 2020-03-26 23:59:52\n---\n\n### 简介\n\n- 网络应用程序框架\n- 异步  时间驱动\n- 高性能  可维护\n- 服务端和客户端\n\nNetty is an asynchronous event-driven network application framework\nfor rapid development of maintainable high performance protocol servers & clients.\n\n\n\n\n","slug":"netty","published":1,"updated":"2020-07-13T15:10:22.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l92000erlsl6cle9vlu","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><ul>\n<li>网络应用程序框架</li>\n<li>异步  时间驱动</li>\n<li>高性能  可维护</li>\n<li>服务端和客户端</li>\n</ul>\n<p>Netty is an asynchronous event-driven network application framework<br>for rapid development of maintainable high performance protocol servers &amp; clients.</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><ul>\n<li>网络应用程序框架</li>\n<li>异步  时间驱动</li>\n<li>高性能  可维护</li>\n<li>服务端和客户端</li>\n</ul>\n<p>Netty is an asynchronous event-driven network application framework<br>for rapid development of maintainable high performance protocol servers &amp; clients.</p>\n"},{"title":"vim","date":"2020-02-25T16:45:19.000Z","_content":"\n> vim 常用命令\n\n\n### 替换\n\n```\n# 替换当前行所有 a 为 b\n:s/a/b/g\n\n\n# 替换所有 a 为 b\n:%s/a/b/g\n```\n\n\n\n\n","source":"_posts/vim.md","raw":"---\ntitle: vim\ntags: [linux]\ndate: 2020-02-26 00:45:19\n---\n\n> vim 常用命令\n\n\n### 替换\n\n```\n# 替换当前行所有 a 为 b\n:s/a/b/g\n\n\n# 替换所有 a 为 b\n:%s/a/b/g\n```\n\n\n\n\n","slug":"vim","published":1,"updated":"2020-07-13T15:10:22.374Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l94000grlslfqdxamr5","content":"<blockquote>\n<p>vim 常用命令</p>\n</blockquote>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><figure class=\"highlight elixir\"><table><tr><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-comment\"># 替换当前行所有 a 为 b</span><br><span class=\"hljs-symbol\">:s/a/b/g</span><br><br><br><span class=\"hljs-comment\"># 替换所有 a 为 b</span><br><span class=\"hljs-symbol\">:%s/a/b/g</span><br></code></pre></td></tr></table></figure>\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<blockquote>\n<p>vim 常用命令</p>\n</blockquote>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><figure class=\"highlight elixir\"><table><tr><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-comment\"># 替换当前行所有 a 为 b</span><br><span class=\"hljs-symbol\">:s/a/b/g</span><br><br><br><span class=\"hljs-comment\"># 替换所有 a 为 b</span><br><span class=\"hljs-symbol\">:%s/a/b/g</span><br></code></pre></td></tr></table></figure>\n\n\n\n\n"},{"title":"xpath","date":"2020-02-13T23:07:43.000Z","_content":"\n\n### 取前几个\n\nposition()<=n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[position()<=2]\n```\n\n### 取最后一个\n\nlast()\n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()]\n```\n\n类似\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()-1]\n//dl[@class=\"collateral-tabs\"]//dd[last()-2]\n```\n\n### and\n\n```\n<script type=\"text/javascript\">\nvar defaultPageData = {\"page\":{\"country\":\"CN\",\"language\":\"EN\",\"designer\":\"\",\"section\":\"handbags\",\"categories\":[\"handbags\",\"newarrivals\"],\"type\":\"product detail\"},\"products\":[],\"site\":{\"name\":\"saks.com\",\"is_mobile\":\"false\",\"is_production\":\"true\"},\"visitor\":{\"account_id\":\"\",\"currency_code\":\"CNY\",\"email_address\":\"\",\"logged_in\":\"false\",\"loyalty_id\":\"\",\"personalization_id\":\"\",\"session_id\":\"1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh\"}};\nvar visitorData = defaultPageData.visitor || { currency_code : ''};\n\ndefaultPageData.visitor = {\naccount_id: getCookie('AccountId') || '',\ncurrency_code: getCookie('E4X_CURRENCY') || visitorData.currency_code,\nemail_address: getCookie('UserName') || '',\nlogged_in: getCookie('AccountId') ? 'logged in' : 'logged out',\nloyalty_id: getCookie('Loyalty_id') || '',\npersonalization_id: getCookie('saksAnonymousId') || '',\nsession_id: getCookie('sessionID') || '',\nmd5_email_address: getCookie('md5_email_address') || '',\nsha256_email_address: getCookie('sha256_email_address') || ''\n};\n</script>\n```\n\n\n定位到当前的 script\n\n```\n//script[@type=\"text/javascript\" and contains(.,'var defaultPageData =')]\n\n转为 xpath:\nresponse.xpath('//script[@type=\"text/javascript\" and contains(.,\"var defaultPageData =\")]').extract()\n```\n\n\n\n","source":"_posts/xpath.md","raw":"---\ntitle: xpath\ntags: [scrapy]\ndate: 2020-02-14 07:07:43\n---\n\n\n### 取前几个\n\nposition()<=n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[position()<=2]\n```\n\n### 取最后一个\n\nlast()\n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()]\n```\n\n类似\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()-1]\n//dl[@class=\"collateral-tabs\"]//dd[last()-2]\n```\n\n### and\n\n```\n<script type=\"text/javascript\">\nvar defaultPageData = {\"page\":{\"country\":\"CN\",\"language\":\"EN\",\"designer\":\"\",\"section\":\"handbags\",\"categories\":[\"handbags\",\"newarrivals\"],\"type\":\"product detail\"},\"products\":[],\"site\":{\"name\":\"saks.com\",\"is_mobile\":\"false\",\"is_production\":\"true\"},\"visitor\":{\"account_id\":\"\",\"currency_code\":\"CNY\",\"email_address\":\"\",\"logged_in\":\"false\",\"loyalty_id\":\"\",\"personalization_id\":\"\",\"session_id\":\"1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh\"}};\nvar visitorData = defaultPageData.visitor || { currency_code : ''};\n\ndefaultPageData.visitor = {\naccount_id: getCookie('AccountId') || '',\ncurrency_code: getCookie('E4X_CURRENCY') || visitorData.currency_code,\nemail_address: getCookie('UserName') || '',\nlogged_in: getCookie('AccountId') ? 'logged in' : 'logged out',\nloyalty_id: getCookie('Loyalty_id') || '',\npersonalization_id: getCookie('saksAnonymousId') || '',\nsession_id: getCookie('sessionID') || '',\nmd5_email_address: getCookie('md5_email_address') || '',\nsha256_email_address: getCookie('sha256_email_address') || ''\n};\n</script>\n```\n\n\n定位到当前的 script\n\n```\n//script[@type=\"text/javascript\" and contains(.,'var defaultPageData =')]\n\n转为 xpath:\nresponse.xpath('//script[@type=\"text/javascript\" and contains(.,\"var defaultPageData =\")]').extract()\n```\n\n\n\n","slug":"xpath","published":1,"updated":"2020-07-13T15:10:22.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l96000irlsl88z48toc","content":"<h3 id=\"取前几个\"><a href=\"#取前几个\" class=\"headerlink\" title=\"取前几个\"></a>取前几个</h3><p>position()&lt;=n</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[position()&lt;=<span class=\"hljs-number\">2</span>]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"取最后一个\"><a href=\"#取最后一个\" class=\"headerlink\" title=\"取最后一个\"></a>取最后一个</h3><p>last()</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[last()]<br></code></pre></td></tr></table></figure>\n\n<p>类似</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[last()-<span class=\"hljs-number\">1</span>]<br><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[last()-<span class=\"hljs-number\">2</span>]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"and\"><a href=\"#and\" class=\"headerlink\" title=\"and\"></a>and</h3><figure class=\"highlight ruby\"><table><tr><td class=\"code\"><pre><code class=\"hljs ruby\">&lt;script type=<span class=\"hljs-string\">\"text/javascript\"</span>&gt;<br>var defaultPageData = &#123;<span class=\"hljs-string\">\"page\"</span><span class=\"hljs-symbol\">:</span>&#123;<span class=\"hljs-string\">\"country\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"CN\"</span></span>,<span class=\"hljs-string\">\"language\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"EN\"</span></span>,<span class=\"hljs-string\">\"designer\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"section\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"handbags\"</span></span>,<span class=\"hljs-string\">\"categories\"</span><span class=\"hljs-symbol\">:</span>[<span class=\"hljs-string\">\"handbags\"</span>,<span class=\"hljs-string\">\"newarrivals\"</span>],<span class=\"hljs-string\">\"type\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"product detail\"</span></span>&#125;,<span class=\"hljs-string\">\"products\"</span><span class=\"hljs-symbol\">:[]</span>,<span class=\"hljs-string\">\"site\"</span><span class=\"hljs-symbol\">:</span>&#123;<span class=\"hljs-string\">\"name\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"saks.com\"</span></span>,<span class=\"hljs-string\">\"is_mobile\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"false\"</span></span>,<span class=\"hljs-string\">\"is_production\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"true\"</span></span>&#125;,<span class=\"hljs-string\">\"visitor\"</span><span class=\"hljs-symbol\">:</span>&#123;<span class=\"hljs-string\">\"account_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"currency_code\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"CNY\"</span></span>,<span class=\"hljs-string\">\"email_address\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"logged_in\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"false\"</span></span>,<span class=\"hljs-string\">\"loyalty_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"personalization_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"session_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh\"</span></span>&#125;&#125;;<br>var visitorData = defaultPageData.visitor <span class=\"hljs-params\">||</span> &#123; currency_code : <span class=\"hljs-string\">''</span>&#125;;<br><br>defaultPageData.visitor = &#123;<br><span class=\"hljs-symbol\">account_id:</span> getCookie(<span class=\"hljs-string\">'AccountId'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">currency_code:</span> getCookie(<span class=\"hljs-string\">'E4X_CURRENCY'</span>) <span class=\"hljs-params\">||</span> visitorData.currency_code,<br><span class=\"hljs-symbol\">email_address:</span> getCookie(<span class=\"hljs-string\">'UserName'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">logged_in:</span> getCookie(<span class=\"hljs-string\">'AccountId'</span>) ? <span class=\"hljs-string\">'logged in'</span> : <span class=\"hljs-string\">'logged out'</span>,<br><span class=\"hljs-symbol\">loyalty_id:</span> getCookie(<span class=\"hljs-string\">'Loyalty_id'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">personalization_id:</span> getCookie(<span class=\"hljs-string\">'saksAnonymousId'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">session_id:</span> getCookie(<span class=\"hljs-string\">'sessionID'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">md5_email_address:</span> getCookie(<span class=\"hljs-string\">'md5_email_address'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">sha256_email_address:</span> getCookie(<span class=\"hljs-string\">'sha256_email_address'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span><br>&#125;;<br>&lt;<span class=\"hljs-regexp\">/script&gt;</span><br></code></pre></td></tr></table></figure>\n\n\n<p>定位到当前的 script</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"code\"><pre><code class=\"hljs ada\">//script[@<span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-keyword\">and</span> contains(.,<span class=\"hljs-symbol\">'var</span> defaultPageData =')]<br><br>转为 xpath:<br>response.xpath('//script[@<span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-keyword\">and</span> contains(.,<span class=\"hljs-string\">\"var defaultPageData =\"</span>)]').extract()<br></code></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h3 id=\"取前几个\"><a href=\"#取前几个\" class=\"headerlink\" title=\"取前几个\"></a>取前几个</h3><p>position()&lt;=n</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[position()&lt;=<span class=\"hljs-number\">2</span>]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"取最后一个\"><a href=\"#取最后一个\" class=\"headerlink\" title=\"取最后一个\"></a>取最后一个</h3><p>last()</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[last()]<br></code></pre></td></tr></table></figure>\n\n<p>类似</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[last()-<span class=\"hljs-number\">1</span>]<br><span class=\"hljs-regexp\">//</span>dl[@class=<span class=\"hljs-string\">\"collateral-tabs\"</span>]<span class=\"hljs-regexp\">//</span>dd[last()-<span class=\"hljs-number\">2</span>]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"and\"><a href=\"#and\" class=\"headerlink\" title=\"and\"></a>and</h3><figure class=\"highlight ruby\"><table><tr><td class=\"code\"><pre><code class=\"hljs ruby\">&lt;script type=<span class=\"hljs-string\">\"text/javascript\"</span>&gt;<br>var defaultPageData = &#123;<span class=\"hljs-string\">\"page\"</span><span class=\"hljs-symbol\">:</span>&#123;<span class=\"hljs-string\">\"country\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"CN\"</span></span>,<span class=\"hljs-string\">\"language\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"EN\"</span></span>,<span class=\"hljs-string\">\"designer\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"section\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"handbags\"</span></span>,<span class=\"hljs-string\">\"categories\"</span><span class=\"hljs-symbol\">:</span>[<span class=\"hljs-string\">\"handbags\"</span>,<span class=\"hljs-string\">\"newarrivals\"</span>],<span class=\"hljs-string\">\"type\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"product detail\"</span></span>&#125;,<span class=\"hljs-string\">\"products\"</span><span class=\"hljs-symbol\">:[]</span>,<span class=\"hljs-string\">\"site\"</span><span class=\"hljs-symbol\">:</span>&#123;<span class=\"hljs-string\">\"name\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"saks.com\"</span></span>,<span class=\"hljs-string\">\"is_mobile\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"false\"</span></span>,<span class=\"hljs-string\">\"is_production\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"true\"</span></span>&#125;,<span class=\"hljs-string\">\"visitor\"</span><span class=\"hljs-symbol\">:</span>&#123;<span class=\"hljs-string\">\"account_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"currency_code\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"CNY\"</span></span>,<span class=\"hljs-string\">\"email_address\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"logged_in\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"false\"</span></span>,<span class=\"hljs-string\">\"loyalty_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"personalization_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"\"</span></span>,<span class=\"hljs-string\">\"session_id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh\"</span></span>&#125;&#125;;<br>var visitorData = defaultPageData.visitor <span class=\"hljs-params\">||</span> &#123; currency_code : <span class=\"hljs-string\">''</span>&#125;;<br><br>defaultPageData.visitor = &#123;<br><span class=\"hljs-symbol\">account_id:</span> getCookie(<span class=\"hljs-string\">'AccountId'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">currency_code:</span> getCookie(<span class=\"hljs-string\">'E4X_CURRENCY'</span>) <span class=\"hljs-params\">||</span> visitorData.currency_code,<br><span class=\"hljs-symbol\">email_address:</span> getCookie(<span class=\"hljs-string\">'UserName'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">logged_in:</span> getCookie(<span class=\"hljs-string\">'AccountId'</span>) ? <span class=\"hljs-string\">'logged in'</span> : <span class=\"hljs-string\">'logged out'</span>,<br><span class=\"hljs-symbol\">loyalty_id:</span> getCookie(<span class=\"hljs-string\">'Loyalty_id'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">personalization_id:</span> getCookie(<span class=\"hljs-string\">'saksAnonymousId'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">session_id:</span> getCookie(<span class=\"hljs-string\">'sessionID'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">md5_email_address:</span> getCookie(<span class=\"hljs-string\">'md5_email_address'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span>,<br><span class=\"hljs-symbol\">sha256_email_address:</span> getCookie(<span class=\"hljs-string\">'sha256_email_address'</span>) <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">''</span><br>&#125;;<br>&lt;<span class=\"hljs-regexp\">/script&gt;</span><br></code></pre></td></tr></table></figure>\n\n\n<p>定位到当前的 script</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"code\"><pre><code class=\"hljs ada\">//script[@<span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-keyword\">and</span> contains(.,<span class=\"hljs-symbol\">'var</span> defaultPageData =')]<br><br>转为 xpath:<br>response.xpath('//script[@<span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-keyword\">and</span> contains(.,<span class=\"hljs-string\">\"var defaultPageData =\"</span>)]').extract()<br></code></pre></td></tr></table></figure>\n\n\n\n"},{"title":"宝石与石头","date":"2020-01-24T01:15:45.000Z","_content":"\nhttps://leetcode-cn.com/problems/jewels-and-stones/\n\n 给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。\n\nJ 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此\"a\"和\"A\"是不同类型的石头。\n\n示例 1:\n\n输入: J = \"aA\", S = \"aAAbbbb\"\n输出: 3\n示例 2:\n\n输入: J = \"z\", S = \"ZZ\"\n输出: 0\n注意:\n\nS 和 J 最多含有50个字母。\n J 中的字符不重复。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/jewels-and-stones\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png)\n\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<String> jewelsSet = new HashSet<>(J.length());\nchar[] jewelsArray = J.toCharArray();\nfor (int i = 0; i < jewelsArray.length; i++) {\njewelsSet.add(String.valueOf(jewelsArray[i]));\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (jewelsSet.contains(String.valueOf(c))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n呵呵，肯定是浪费为   String.valueOf 方法的转换上了\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png)\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<Character> jewelsSet = new HashSet<>(J.length());\nfor (int i = 0; i < J.length(); i++) {\njewelsSet.add(J.charAt(i));\n}\nint count = 0;\nfor (int i = 0; i < S.length(); i++) {\nif (jewelsSet.contains(S.charAt(i))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n转为 char 类型操作，好像也没省多少空间。。。\n\n\n- 第三次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png)\n\n\n```\npublic int numJewelsInStones3(String J, String S) {\n// A~Z : 65~90  a~z:97~122\nint[] ints = new int[58];\nfor (char c : J.toCharArray()) {\nints[c - 65] = 1;\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (ints[c - 65] == 1) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n占坑法。参考的。\n\n\n\n\n\n\n","source":"_posts/宝石与石头.md","raw":"---\ntitle: 宝石与石头\ntags: [占坑法,leetcode]\ndate: 2020-01-24 09:15:45\n---\n\nhttps://leetcode-cn.com/problems/jewels-and-stones/\n\n 给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。\n\nJ 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此\"a\"和\"A\"是不同类型的石头。\n\n示例 1:\n\n输入: J = \"aA\", S = \"aAAbbbb\"\n输出: 3\n示例 2:\n\n输入: J = \"z\", S = \"ZZ\"\n输出: 0\n注意:\n\nS 和 J 最多含有50个字母。\n J 中的字符不重复。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/jewels-and-stones\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png)\n\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<String> jewelsSet = new HashSet<>(J.length());\nchar[] jewelsArray = J.toCharArray();\nfor (int i = 0; i < jewelsArray.length; i++) {\njewelsSet.add(String.valueOf(jewelsArray[i]));\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (jewelsSet.contains(String.valueOf(c))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n呵呵，肯定是浪费为   String.valueOf 方法的转换上了\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png)\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<Character> jewelsSet = new HashSet<>(J.length());\nfor (int i = 0; i < J.length(); i++) {\njewelsSet.add(J.charAt(i));\n}\nint count = 0;\nfor (int i = 0; i < S.length(); i++) {\nif (jewelsSet.contains(S.charAt(i))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n转为 char 类型操作，好像也没省多少空间。。。\n\n\n- 第三次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png)\n\n\n```\npublic int numJewelsInStones3(String J, String S) {\n// A~Z : 65~90  a~z:97~122\nint[] ints = new int[58];\nfor (char c : J.toCharArray()) {\nints[c - 65] = 1;\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (ints[c - 65] == 1) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n占坑法。参考的。\n\n\n\n\n\n\n","slug":"宝石与石头","published":1,"updated":"2020-07-13T15:10:22.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l98000krlsl1sk202nr","content":"<p><a href=\"https://leetcode-cn.com/problems/jewels-and-stones/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones/</a></p>\n<p> 给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。</p>\n<p>J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此”a”和”A”是不同类型的石头。</p>\n<p>示例 1:</p>\n<p>输入: J = “aA”, S = “aAAbbbb”<br>输出: 3<br>示例 2:</p>\n<p>输入: J = “z”, S = “ZZ”<br>输出: 0<br>注意:</p>\n<p>S 和 J 最多含有50个字母。<br> J 中的字符不重复。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/jewels-and-stones\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> num<span class=\"hljs-constructor\">JewelsInStones(String J, String S)</span> &#123;<br>Set&lt;String&gt; jewelsSet = <span class=\"hljs-keyword\">new</span> HashSet&lt;&gt;(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span>length<span class=\"hljs-literal\">()</span>);<br><span class=\"hljs-built_in\">char</span><span class=\"hljs-literal\">[]</span> jewelsArray = <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>;<br>for (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; jewelsArray.length; i++) &#123;<br>jewelsSet.add(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">String</span>.</span></span>value<span class=\"hljs-constructor\">Of(<span class=\"hljs-params\">jewelsArray</span>[<span class=\"hljs-params\">i</span>])</span>);<br>&#125;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">char</span> c : <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>) &#123;<br><span class=\"hljs-keyword\">if</span> (jewelsSet.contains(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">String</span>.</span></span>value<span class=\"hljs-constructor\">Of(<span class=\"hljs-params\">c</span>)</span>)) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<p>呵呵，肯定是浪费为   String.valueOf 方法的转换上了</p>\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> num<span class=\"hljs-constructor\">JewelsInStones(String J, String S)</span> &#123;<br>Set&lt;Character&gt; jewelsSet = <span class=\"hljs-keyword\">new</span> HashSet&lt;&gt;(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span>length<span class=\"hljs-literal\">()</span>);<br>for (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span>length<span class=\"hljs-literal\">()</span>; i++) &#123;<br>jewelsSet.add(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span><span class=\"hljs-built_in\">char</span><span class=\"hljs-constructor\">At(<span class=\"hljs-params\">i</span>)</span>);<br>&#125;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span>length<span class=\"hljs-literal\">()</span>; i++) &#123;<br><span class=\"hljs-keyword\">if</span> (jewelsSet.contains(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span><span class=\"hljs-built_in\">char</span><span class=\"hljs-constructor\">At(<span class=\"hljs-params\">i</span>)</span>)) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>转为 char 类型操作，好像也没省多少空间。。。</p>\n<ul>\n<li>第三次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> num<span class=\"hljs-constructor\">JewelsInStones3(String J, String S)</span> &#123;<br><span class=\"hljs-comment\">// A~Z : 65~90  a~z:97~122</span><br><span class=\"hljs-built_in\">int</span><span class=\"hljs-literal\">[]</span> ints = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span><span class=\"hljs-literal\">[<span class=\"hljs-number\">58</span>]</span>;<br>for (<span class=\"hljs-built_in\">char</span> c : <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>) &#123;<br>ints<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">c</span> - <span class=\"hljs-number\">65</span>]</span> = <span class=\"hljs-number\">1</span>;<br>&#125;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">char</span> c : <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>) &#123;<br><span class=\"hljs-keyword\">if</span> (ints<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">c</span> - <span class=\"hljs-number\">65</span>]</span><span class=\"hljs-operator\"> == </span><span class=\"hljs-number\">1</span>) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<p>占坑法。参考的。</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/jewels-and-stones/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones/</a></p>\n<p> 给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。</p>\n<p>J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此”a”和”A”是不同类型的石头。</p>\n<p>示例 1:</p>\n<p>输入: J = “aA”, S = “aAAbbbb”<br>输出: 3<br>示例 2:</p>\n<p>输入: J = “z”, S = “ZZ”<br>输出: 0<br>注意:</p>\n<p>S 和 J 最多含有50个字母。<br> J 中的字符不重复。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/jewels-and-stones\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> num<span class=\"hljs-constructor\">JewelsInStones(String J, String S)</span> &#123;<br>Set&lt;String&gt; jewelsSet = <span class=\"hljs-keyword\">new</span> HashSet&lt;&gt;(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span>length<span class=\"hljs-literal\">()</span>);<br><span class=\"hljs-built_in\">char</span><span class=\"hljs-literal\">[]</span> jewelsArray = <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>;<br>for (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; jewelsArray.length; i++) &#123;<br>jewelsSet.add(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">String</span>.</span></span>value<span class=\"hljs-constructor\">Of(<span class=\"hljs-params\">jewelsArray</span>[<span class=\"hljs-params\">i</span>])</span>);<br>&#125;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">char</span> c : <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>) &#123;<br><span class=\"hljs-keyword\">if</span> (jewelsSet.contains(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">String</span>.</span></span>value<span class=\"hljs-constructor\">Of(<span class=\"hljs-params\">c</span>)</span>)) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<p>呵呵，肯定是浪费为   String.valueOf 方法的转换上了</p>\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> num<span class=\"hljs-constructor\">JewelsInStones(String J, String S)</span> &#123;<br>Set&lt;Character&gt; jewelsSet = <span class=\"hljs-keyword\">new</span> HashSet&lt;&gt;(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span>length<span class=\"hljs-literal\">()</span>);<br>for (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span>length<span class=\"hljs-literal\">()</span>; i++) &#123;<br>jewelsSet.add(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span><span class=\"hljs-built_in\">char</span><span class=\"hljs-constructor\">At(<span class=\"hljs-params\">i</span>)</span>);<br>&#125;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span>length<span class=\"hljs-literal\">()</span>; i++) &#123;<br><span class=\"hljs-keyword\">if</span> (jewelsSet.contains(<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span><span class=\"hljs-built_in\">char</span><span class=\"hljs-constructor\">At(<span class=\"hljs-params\">i</span>)</span>)) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>转为 char 类型操作，好像也没省多少空间。。。</p>\n<ul>\n<li>第三次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> num<span class=\"hljs-constructor\">JewelsInStones3(String J, String S)</span> &#123;<br><span class=\"hljs-comment\">// A~Z : 65~90  a~z:97~122</span><br><span class=\"hljs-built_in\">int</span><span class=\"hljs-literal\">[]</span> ints = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span><span class=\"hljs-literal\">[<span class=\"hljs-number\">58</span>]</span>;<br>for (<span class=\"hljs-built_in\">char</span> c : <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">J</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>) &#123;<br>ints<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">c</span> - <span class=\"hljs-number\">65</span>]</span> = <span class=\"hljs-number\">1</span>;<br>&#125;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">char</span> c : <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">S</span>.</span></span><span class=\"hljs-keyword\">to</span><span class=\"hljs-constructor\">CharArray()</span>) &#123;<br><span class=\"hljs-keyword\">if</span> (ints<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">c</span> - <span class=\"hljs-number\">65</span>]</span><span class=\"hljs-operator\"> == </span><span class=\"hljs-number\">1</span>) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<p>占坑法。参考的。</p>\n"},{"title":"层数最深叶子节点的和","date":"2020-01-25T21:13:40.000Z","_content":"\n\nhttps://leetcode-cn.com/problems/deepest-leaves-sum/\n\n\n给你一棵二叉树，请你返回层数最深的叶子节点的和。\n\n![1483_ex1.png](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png)\n\n```\n输入：root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\n输出：15\n```\n\n\n### java\n\n看了一遍递归，但是还是没思路😑最后参考的。。。\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png)\n\n\n```\npublic class DeepestLeavesSum {\n\n\npublic static void main(String[] args) {\nDeepestLeavesSum deepestLeavesSum = new DeepestLeavesSum();\nSystem.out.println(deepestLeavesSum.deepestLeavesSum(deepestLeavesSum.buildData()));\n}\n\npublic int deepestLeavesSum(TreeNode root) {\nreturn dfs(root, 1, getMaxDeep(root));\n}\n\npublic TreeNode buildData() {\nTreeNode root = new TreeNode(1);\n\nTreeNode l4 = new TreeNode(4);\nl4.left = new TreeNode(7);\n\nTreeNode l2 = new TreeNode(2);\nl2.left = l4;\nl2.right = new TreeNode(5);\n\nTreeNode r3 = new TreeNode(3);\nTreeNode r6 = new TreeNode(6);\nTreeNode r8 = new TreeNode(8);\nr3.right = r6;\nr6.right = r8;\n\nroot.left = l2;\nroot.right = r3;\n\nreturn root;\n}\n\n\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n}\n\n```\n","source":"_posts/层数最深叶子节点的和.md","raw":"---\ntitle: 层数最深叶子节点的和\ntags: [leetcode]\ndate: 2020-01-26 05:13:40\n---\n\n\nhttps://leetcode-cn.com/problems/deepest-leaves-sum/\n\n\n给你一棵二叉树，请你返回层数最深的叶子节点的和。\n\n![1483_ex1.png](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png)\n\n```\n输入：root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\n输出：15\n```\n\n\n### java\n\n看了一遍递归，但是还是没思路😑最后参考的。。。\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png)\n\n\n```\npublic class DeepestLeavesSum {\n\n\npublic static void main(String[] args) {\nDeepestLeavesSum deepestLeavesSum = new DeepestLeavesSum();\nSystem.out.println(deepestLeavesSum.deepestLeavesSum(deepestLeavesSum.buildData()));\n}\n\npublic int deepestLeavesSum(TreeNode root) {\nreturn dfs(root, 1, getMaxDeep(root));\n}\n\npublic TreeNode buildData() {\nTreeNode root = new TreeNode(1);\n\nTreeNode l4 = new TreeNode(4);\nl4.left = new TreeNode(7);\n\nTreeNode l2 = new TreeNode(2);\nl2.left = l4;\nl2.right = new TreeNode(5);\n\nTreeNode r3 = new TreeNode(3);\nTreeNode r6 = new TreeNode(6);\nTreeNode r8 = new TreeNode(8);\nr3.right = r6;\nr6.right = r8;\n\nroot.left = l2;\nroot.right = r3;\n\nreturn root;\n}\n\n\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n}\n\n```\n","slug":"层数最深叶子节点的和","published":1,"updated":"2020-07-13T15:10:22.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l99000mrlsl4fhwgnbi","content":"<p><a href=\"https://leetcode-cn.com/problems/deepest-leaves-sum/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/deepest-leaves-sum/</a></p>\n<p>给你一棵二叉树，请你返回层数最深的叶子节点的和。</p>\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png\" alt=\"1483_ex1.png\"></p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\">输入：root = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">8</span>]<br>输出：<span class=\"hljs-number\">15</span><br></code></pre></td></tr></table></figure>\n\n\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p>看了一遍递归，但是还是没思路😑最后参考的。。。</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-keyword\">class</span> DeepestLeavesSum &#123;<br><br><br>public static void main(String<span class=\"hljs-literal\">[]</span> args) &#123;<br>DeepestLeavesSum deepestLeavesSum = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">DeepestLeavesSum()</span>;<br><span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">System</span>.</span></span>out.println(deepestLeavesSum.deepest<span class=\"hljs-constructor\">LeavesSum(<span class=\"hljs-params\">deepestLeavesSum</span>.<span class=\"hljs-params\">buildData</span>()</span>));<br>&#125;<br><br>public <span class=\"hljs-built_in\">int</span> deepest<span class=\"hljs-constructor\">LeavesSum(TreeNode <span class=\"hljs-params\">root</span>)</span> &#123;<br>return dfs(root, <span class=\"hljs-number\">1</span>, get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">root</span>)</span>);<br>&#125;<br><br>public TreeNode build<span class=\"hljs-constructor\">Data()</span> &#123;<br>TreeNode root = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(1)</span>;<br><br>TreeNode l4 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(4)</span>;<br>l4.left = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(7)</span>;<br><br>TreeNode l2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(2)</span>;<br>l2.left = l4;<br>l2.right = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(5)</span>;<br><br>TreeNode r3 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(3)</span>;<br>TreeNode r6 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(6)</span>;<br>TreeNode r8 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(8)</span>;<br>r3.right = r6;<br>r6.right = r8;<br><br>root.left = l2;<br>root.right = r3;<br><br>return root;<br>&#125;<br><br><br>public <span class=\"hljs-built_in\">int</span> dfs(TreeNode treeNode, <span class=\"hljs-built_in\">int</span> currentH, <span class=\"hljs-built_in\">int</span> h) &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode<span class=\"hljs-operator\"> == </span>null) &#123;<br>return <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-keyword\">if</span> (currentH<span class=\"hljs-operator\"> == </span>h) &#123;<br>return treeNode.<span class=\"hljs-keyword\">val</span>;<br>&#125;<br>return dfs(treeNode.left, currentH + <span class=\"hljs-number\">1</span>, h) + dfs(treeNode.right, currentH + <span class=\"hljs-number\">1</span>, h);<br>&#125;<br><br><br>public <span class=\"hljs-built_in\">int</span> get<span class=\"hljs-constructor\">MaxDeep(TreeNode <span class=\"hljs-params\">treeNode</span>)</span> &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode<span class=\"hljs-operator\"> == </span>null) &#123;<br>return <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-built_in\">int</span> left = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">left</span>)</span>;<br><span class=\"hljs-built_in\">int</span> right = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">right</span>)</span>;<br>return <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Math</span>.</span></span>max(left, right) + <span class=\"hljs-number\">1</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/deepest-leaves-sum/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/deepest-leaves-sum/</a></p>\n<p>给你一棵二叉树，请你返回层数最深的叶子节点的和。</p>\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png\" alt=\"1483_ex1.png\"></p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\">输入：root = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">8</span>]<br>输出：<span class=\"hljs-number\">15</span><br></code></pre></td></tr></table></figure>\n\n\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p>看了一遍递归，但是还是没思路😑最后参考的。。。</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-keyword\">class</span> DeepestLeavesSum &#123;<br><br><br>public static void main(String<span class=\"hljs-literal\">[]</span> args) &#123;<br>DeepestLeavesSum deepestLeavesSum = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">DeepestLeavesSum()</span>;<br><span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">System</span>.</span></span>out.println(deepestLeavesSum.deepest<span class=\"hljs-constructor\">LeavesSum(<span class=\"hljs-params\">deepestLeavesSum</span>.<span class=\"hljs-params\">buildData</span>()</span>));<br>&#125;<br><br>public <span class=\"hljs-built_in\">int</span> deepest<span class=\"hljs-constructor\">LeavesSum(TreeNode <span class=\"hljs-params\">root</span>)</span> &#123;<br>return dfs(root, <span class=\"hljs-number\">1</span>, get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">root</span>)</span>);<br>&#125;<br><br>public TreeNode build<span class=\"hljs-constructor\">Data()</span> &#123;<br>TreeNode root = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(1)</span>;<br><br>TreeNode l4 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(4)</span>;<br>l4.left = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(7)</span>;<br><br>TreeNode l2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(2)</span>;<br>l2.left = l4;<br>l2.right = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(5)</span>;<br><br>TreeNode r3 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(3)</span>;<br>TreeNode r6 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(6)</span>;<br>TreeNode r8 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-constructor\">TreeNode(8)</span>;<br>r3.right = r6;<br>r6.right = r8;<br><br>root.left = l2;<br>root.right = r3;<br><br>return root;<br>&#125;<br><br><br>public <span class=\"hljs-built_in\">int</span> dfs(TreeNode treeNode, <span class=\"hljs-built_in\">int</span> currentH, <span class=\"hljs-built_in\">int</span> h) &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode<span class=\"hljs-operator\"> == </span>null) &#123;<br>return <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-keyword\">if</span> (currentH<span class=\"hljs-operator\"> == </span>h) &#123;<br>return treeNode.<span class=\"hljs-keyword\">val</span>;<br>&#125;<br>return dfs(treeNode.left, currentH + <span class=\"hljs-number\">1</span>, h) + dfs(treeNode.right, currentH + <span class=\"hljs-number\">1</span>, h);<br>&#125;<br><br><br>public <span class=\"hljs-built_in\">int</span> get<span class=\"hljs-constructor\">MaxDeep(TreeNode <span class=\"hljs-params\">treeNode</span>)</span> &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode<span class=\"hljs-operator\"> == </span>null) &#123;<br>return <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-built_in\">int</span> left = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">left</span>)</span>;<br><span class=\"hljs-built_in\">int</span> right = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">right</span>)</span>;<br>return <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Math</span>.</span></span>max(left, right) + <span class=\"hljs-number\">1</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n"},{"title":"统计位数为偶数的数字","date":"2020-01-24T22:40:17.000Z","_content":"\n\nhttps://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\n\n给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。\n\n \n\n示例 1：\n\n输入：nums = [12,345,2,6,7896]\n输出：2\n解释：\n12 是 2 位数字（位数为偶数） \n345 是 3 位数字（位数为奇数）  \n2 是 1 位数字（位数为奇数） \n6 是 1 位数字 位数为奇数） \n7896 是 4 位数字（位数为偶数）  \n因此只有 12 和 7896 是位数为偶数的数字\n示例 2：\n\n输入：nums = [555,901,482,1771]\n输出：1\n解释：\n只有 1771 是位数为偶数的数字。\n \n\n提示：\n\n1 <= nums.length <= 500\n1 <= nums[i] <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png)\n\n```\npublic int findNumbers(int[] nums) {\nint result = 0;\nfor (int num : nums) {\nint count = 1;\nwhile (true) {\nint x = num / 10;\nif (x != 0) {\nnum = x;\ncount++;\n} else {\nbreak;\n}\n}\nif (count % 2 == 0) {\nresult++;\n}\n}\nreturn result;\n}\n```\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png)\n\n```\npublic int findNumbers(int[] nums) {\nint count = 0;\nfor (int num : nums) {\nif (String.valueOf(num).length() % 2 == 0) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n### 总结\n\n1. 判断一个数有多少位数\n2. 判断一个数是奇数还是偶数\n\n\n","source":"_posts/统计位数为偶数的数字.md","raw":"---\ntitle: 统计位数为偶数的数字\ntags: [leetcode]\ndate: 2020-01-25 06:40:17\n---\n\n\nhttps://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\n\n给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。\n\n \n\n示例 1：\n\n输入：nums = [12,345,2,6,7896]\n输出：2\n解释：\n12 是 2 位数字（位数为偶数） \n345 是 3 位数字（位数为奇数）  \n2 是 1 位数字（位数为奇数） \n6 是 1 位数字 位数为奇数） \n7896 是 4 位数字（位数为偶数）  \n因此只有 12 和 7896 是位数为偶数的数字\n示例 2：\n\n输入：nums = [555,901,482,1771]\n输出：1\n解释：\n只有 1771 是位数为偶数的数字。\n \n\n提示：\n\n1 <= nums.length <= 500\n1 <= nums[i] <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png)\n\n```\npublic int findNumbers(int[] nums) {\nint result = 0;\nfor (int num : nums) {\nint count = 1;\nwhile (true) {\nint x = num / 10;\nif (x != 0) {\nnum = x;\ncount++;\n} else {\nbreak;\n}\n}\nif (count % 2 == 0) {\nresult++;\n}\n}\nreturn result;\n}\n```\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png)\n\n```\npublic int findNumbers(int[] nums) {\nint count = 0;\nfor (int num : nums) {\nif (String.valueOf(num).length() % 2 == 0) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n### 总结\n\n1. 判断一个数有多少位数\n2. 判断一个数是奇数还是偶数\n\n\n","slug":"统计位数为偶数的数字","published":1,"updated":"2020-07-13T15:10:22.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l9a000orlsl8tredims","content":"<p><a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/</a></p>\n<p>给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。</p>\n<p>示例 1：</p>\n<p>输入：nums = [12,345,2,6,7896]<br>输出：2<br>解释：<br>12 是 2 位数字（位数为偶数）<br>345 是 3 位数字（位数为奇数）<br>2 是 1 位数字（位数为奇数）<br>6 是 1 位数字 位数为奇数）<br>7896 是 4 位数字（位数为偶数）<br>因此只有 12 和 7896 是位数为偶数的数字<br>示例 2：</p>\n<p>输入：nums = [555,901,482,1771]<br>输出：1<br>解释：<br>只有 1771 是位数为偶数的数字。</p>\n<p>提示：</p>\n<p>1 &lt;= nums.length &lt;= 500<br>1 &lt;= nums[i] &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png\" alt=\"\"></p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> findNumbers(<span class=\"hljs-built_in\">int</span>[] nums) &#123;<br><span class=\"hljs-built_in\">int</span> result = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> num : nums) &#123;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>) &#123;<br><span class=\"hljs-built_in\">int</span> x = num / <span class=\"hljs-number\">10</span>;<br><span class=\"hljs-keyword\">if</span> (x != <span class=\"hljs-number\">0</span>) &#123;<br>num = x;<br>count++;<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br><span class=\"hljs-keyword\">break</span>;<br>&#125;<br>&#125;<br><span class=\"hljs-keyword\">if</span> (count % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>) &#123;<br>result++;<br>&#125;<br>&#125;<br><span class=\"hljs-keyword\">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> find<span class=\"hljs-constructor\">Numbers(<span class=\"hljs-params\">int</span>[] <span class=\"hljs-params\">nums</span>)</span> &#123;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">int</span> num : nums) &#123;<br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">String</span>.</span></span>value<span class=\"hljs-constructor\">Of(<span class=\"hljs-params\">num</span>)</span>.length<span class=\"hljs-literal\">()</span> % <span class=\"hljs-number\">2</span><span class=\"hljs-operator\"> == </span><span class=\"hljs-number\">0</span>) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>判断一个数有多少位数</li>\n<li>判断一个数是奇数还是偶数</li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/</a></p>\n<p>给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。</p>\n<p>示例 1：</p>\n<p>输入：nums = [12,345,2,6,7896]<br>输出：2<br>解释：<br>12 是 2 位数字（位数为偶数）<br>345 是 3 位数字（位数为奇数）<br>2 是 1 位数字（位数为奇数）<br>6 是 1 位数字 位数为奇数）<br>7896 是 4 位数字（位数为偶数）<br>因此只有 12 和 7896 是位数为偶数的数字<br>示例 2：</p>\n<p>输入：nums = [555,901,482,1771]<br>输出：1<br>解释：<br>只有 1771 是位数为偶数的数字。</p>\n<p>提示：</p>\n<p>1 &lt;= nums.length &lt;= 500<br>1 &lt;= nums[i] &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png\" alt=\"\"></p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> findNumbers(<span class=\"hljs-built_in\">int</span>[] nums) &#123;<br><span class=\"hljs-built_in\">int</span> result = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> num : nums) &#123;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>) &#123;<br><span class=\"hljs-built_in\">int</span> x = num / <span class=\"hljs-number\">10</span>;<br><span class=\"hljs-keyword\">if</span> (x != <span class=\"hljs-number\">0</span>) &#123;<br>num = x;<br>count++;<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br><span class=\"hljs-keyword\">break</span>;<br>&#125;<br>&#125;<br><span class=\"hljs-keyword\">if</span> (count % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>) &#123;<br>result++;<br>&#125;<br>&#125;<br><span class=\"hljs-keyword\">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png\" alt=\"\"></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> find<span class=\"hljs-constructor\">Numbers(<span class=\"hljs-params\">int</span>[] <span class=\"hljs-params\">nums</span>)</span> &#123;<br><span class=\"hljs-built_in\">int</span> count = <span class=\"hljs-number\">0</span>;<br>for (<span class=\"hljs-built_in\">int</span> num : nums) &#123;<br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">String</span>.</span></span>value<span class=\"hljs-constructor\">Of(<span class=\"hljs-params\">num</span>)</span>.length<span class=\"hljs-literal\">()</span> % <span class=\"hljs-number\">2</span><span class=\"hljs-operator\"> == </span><span class=\"hljs-number\">0</span>) &#123;<br>count++;<br>&#125;<br>&#125;<br>return count;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>判断一个数有多少位数</li>\n<li>判断一个数是奇数还是偶数</li>\n</ol>\n"},{"title":"整数的各位积和之差","date":"2020-01-25T05:27:19.000Z","_content":"\nhttps://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\n\n\n给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。\n\n \n\n示例 1：\n\n输入：n = 234\n输出：15\n解释：\n各位数之积 = 2 * 3 * 4 = 24\n各位数之和 = 2 + 3 + 4 = 9\n结果 = 24 - 9 = 15\n示例 2：\n\n输入：n = 4421\n输出：21\n解释：\n各位数之积 = 4 * 4 * 2 * 1 = 32\n各位数之和 = 4 + 4 + 2 + 1 = 11\n结果 = 32 - 11 = 21\n \n\n提示：\n\n1 <= n <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png)\n\n\n```\npublic int subtractProductAndSum(int n) {\nint sum = 0;\nint product = 1;\nwhile (true) {\nif (n / 10 != 0) {\nint y = n % 10;\nsum = sum + y;\nproduct = product * y;\nn = (n - y) / 10;\n} else {\nbreak;\n}\n}\nreturn product * n - (sum + n);\n}\n```\n\n\n\n\n\n\n","source":"_posts/整数的各位积和之差.md","raw":"---\ntitle: 整数的各位积和之差\ntags: [leetcode]\ndate: 2020-01-25 13:27:19\n---\n\nhttps://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\n\n\n给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。\n\n \n\n示例 1：\n\n输入：n = 234\n输出：15\n解释：\n各位数之积 = 2 * 3 * 4 = 24\n各位数之和 = 2 + 3 + 4 = 9\n结果 = 24 - 9 = 15\n示例 2：\n\n输入：n = 4421\n输出：21\n解释：\n各位数之积 = 4 * 4 * 2 * 1 = 32\n各位数之和 = 4 + 4 + 2 + 1 = 11\n结果 = 32 - 11 = 21\n \n\n提示：\n\n1 <= n <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png)\n\n\n```\npublic int subtractProductAndSum(int n) {\nint sum = 0;\nint product = 1;\nwhile (true) {\nif (n / 10 != 0) {\nint y = n % 10;\nsum = sum + y;\nproduct = product * y;\nn = (n - y) / 10;\n} else {\nbreak;\n}\n}\nreturn product * n - (sum + n);\n}\n```\n\n\n\n\n\n\n","slug":"整数的各位积和之差","published":1,"updated":"2020-07-13T15:10:22.367Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l9a000qrlslfkmphxsj","content":"<p><a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/</a></p>\n<p>给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。</p>\n<p>示例 1：</p>\n<p>输入：n = 234<br>输出：15<br>解释：<br>各位数之积 = 2 * 3 * 4 = 24<br>各位数之和 = 2 + 3 + 4 = 9<br>结果 = 24 - 9 = 15<br>示例 2：</p>\n<p>输入：n = 4421<br>输出：21<br>解释：<br>各位数之积 = 4 * 4 * 2 * 1 = 32<br>各位数之和 = 4 + 4 + 2 + 1 = 11<br>结果 = 32 - 11 = 21</p>\n<p>提示：</p>\n<p>1 &lt;= n &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png\" alt=\"\"></p>\n<figure class=\"highlight excel\"><table><tr><td class=\"code\"><pre><code class=\"hljs excel\">public <span class=\"hljs-built_in\">int</span> subtractProductAndSum(<span class=\"hljs-built_in\">int</span> <span class=\"hljs-built_in\">n</span>) &#123;<br><span class=\"hljs-built_in\">int</span> <span class=\"hljs-built_in\">sum</span> = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-built_in\">int</span> <span class=\"hljs-built_in\">product</span> = <span class=\"hljs-number\">1</span>;<br>while (<span class=\"hljs-built_in\">true</span>) &#123;<br><span class=\"hljs-built_in\">if</span> (<span class=\"hljs-built_in\">n</span> / <span class=\"hljs-number\">10</span> != <span class=\"hljs-number\">0</span>) &#123;<br><span class=\"hljs-built_in\">int</span> y = <span class=\"hljs-built_in\">n</span> % <span class=\"hljs-number\">10</span>;<br><span class=\"hljs-built_in\">sum</span> = <span class=\"hljs-built_in\">sum</span> + y;<br><span class=\"hljs-built_in\">product</span> = <span class=\"hljs-built_in\">product</span> * y;<br><span class=\"hljs-built_in\">n</span> = (<span class=\"hljs-built_in\">n</span> - y) / <span class=\"hljs-number\">10</span>;<br>&#125; else &#123;<br>break;<br>&#125;<br>&#125;<br>return <span class=\"hljs-built_in\">product</span> * <span class=\"hljs-built_in\">n</span> - (<span class=\"hljs-built_in\">sum</span> + <span class=\"hljs-built_in\">n</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/</a></p>\n<p>给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。</p>\n<p>示例 1：</p>\n<p>输入：n = 234<br>输出：15<br>解释：<br>各位数之积 = 2 * 3 * 4 = 24<br>各位数之和 = 2 + 3 + 4 = 9<br>结果 = 24 - 9 = 15<br>示例 2：</p>\n<p>输入：n = 4421<br>输出：21<br>解释：<br>各位数之积 = 4 * 4 * 2 * 1 = 32<br>各位数之和 = 4 + 4 + 2 + 1 = 11<br>结果 = 32 - 11 = 21</p>\n<p>提示：</p>\n<p>1 &lt;= n &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png\" alt=\"\"></p>\n<figure class=\"highlight excel\"><table><tr><td class=\"code\"><pre><code class=\"hljs excel\">public <span class=\"hljs-built_in\">int</span> subtractProductAndSum(<span class=\"hljs-built_in\">int</span> <span class=\"hljs-built_in\">n</span>) &#123;<br><span class=\"hljs-built_in\">int</span> <span class=\"hljs-built_in\">sum</span> = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-built_in\">int</span> <span class=\"hljs-built_in\">product</span> = <span class=\"hljs-number\">1</span>;<br>while (<span class=\"hljs-built_in\">true</span>) &#123;<br><span class=\"hljs-built_in\">if</span> (<span class=\"hljs-built_in\">n</span> / <span class=\"hljs-number\">10</span> != <span class=\"hljs-number\">0</span>) &#123;<br><span class=\"hljs-built_in\">int</span> y = <span class=\"hljs-built_in\">n</span> % <span class=\"hljs-number\">10</span>;<br><span class=\"hljs-built_in\">sum</span> = <span class=\"hljs-built_in\">sum</span> + y;<br><span class=\"hljs-built_in\">product</span> = <span class=\"hljs-built_in\">product</span> * y;<br><span class=\"hljs-built_in\">n</span> = (<span class=\"hljs-built_in\">n</span> - y) / <span class=\"hljs-number\">10</span>;<br>&#125; else &#123;<br>break;<br>&#125;<br>&#125;<br>return <span class=\"hljs-built_in\">product</span> * <span class=\"hljs-built_in\">n</span> - (<span class=\"hljs-built_in\">sum</span> + <span class=\"hljs-built_in\">n</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n\n"},{"title":"解压缩编码列表","date":"2020-01-23T04:49:14.000Z","_content":"\nhttps://leetcode-cn.com/problems/decompress-run-length-encoded-list/\n\n给你一个以行程长度编码压缩的整数列表 nums 。\n\n考虑每相邻两个元素 [a, b] = [nums[2*i], nums[2*i+1]] （其中 i >= 0 ），每一对都表示解压后有 a 个值为 b 的元素。\n\n请你返回解压后的列表。\n\n \n\n示例：\n\n输入：nums = [1,2,3,4]\n输出：[2,4,4,4]\n \n\n提示：\n\n2 <= nums.length <= 100\nnums.length % 2 == 0\n1 <= nums[i] <= 100\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/decompress-run-length-encoded-list\n\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n```\npublic int[] decompressRLElist(int[] nums) {\nint length = nums.length;\nint resultLen = 0;\nfor (int i = 0; i < length; i = i + 2) {\nresultLen = resultLen + nums[i];\n}\nint[] results = new int[resultLen];\nint index = 0;\nfor (int i = 0; i < length; i = i + 2) {\nfor (int j = 0; j < nums[i]; j++) {\nresults[index++] = nums[i + 1];\n}\n}\nreturn results;\n}\n```\n\n### summary\n\n总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。\n\n例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]\n\n如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。\n\n\n\n\n","source":"_posts/解压缩编码列表.md","raw":"---\ntitle: 解压缩编码列表\ntags: [leetcode]\ndate: 2020-01-23 12:49:14\n---\n\nhttps://leetcode-cn.com/problems/decompress-run-length-encoded-list/\n\n给你一个以行程长度编码压缩的整数列表 nums 。\n\n考虑每相邻两个元素 [a, b] = [nums[2*i], nums[2*i+1]] （其中 i >= 0 ），每一对都表示解压后有 a 个值为 b 的元素。\n\n请你返回解压后的列表。\n\n \n\n示例：\n\n输入：nums = [1,2,3,4]\n输出：[2,4,4,4]\n \n\n提示：\n\n2 <= nums.length <= 100\nnums.length % 2 == 0\n1 <= nums[i] <= 100\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/decompress-run-length-encoded-list\n\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n```\npublic int[] decompressRLElist(int[] nums) {\nint length = nums.length;\nint resultLen = 0;\nfor (int i = 0; i < length; i = i + 2) {\nresultLen = resultLen + nums[i];\n}\nint[] results = new int[resultLen];\nint index = 0;\nfor (int i = 0; i < length; i = i + 2) {\nfor (int j = 0; j < nums[i]; j++) {\nresults[index++] = nums[i + 1];\n}\n}\nreturn results;\n}\n```\n\n### summary\n\n总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。\n\n例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]\n\n如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。\n\n\n\n\n","slug":"解压缩编码列表","published":1,"updated":"2020-07-13T15:10:22.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l9c000trlsl9xhi31lu","content":"<p><a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list/</a></p>\n<p>给你一个以行程长度编码压缩的整数列表 nums 。</p>\n<p>考虑每相邻两个元素 [a, b] = [nums[2<em>i], nums[2</em>i+1]] （其中 i &gt;= 0 ），每一对都表示解压后有 a 个值为 b 的元素。</p>\n<p>请你返回解压后的列表。</p>\n<p>示例：</p>\n<p>输入：nums = [1,2,3,4]<br>输出：[2,4,4,4]</p>\n<p>提示：</p>\n<p>2 &lt;= nums.length &lt;= 100<br>nums.length % 2 == 0<br>1 &lt;= nums[i] &lt;= 100</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list</a></p>\n<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span>[] decompressRLElist(<span class=\"hljs-built_in\">int</span>[] nums) &#123;<br><span class=\"hljs-built_in\">int</span> length = nums.length;<br><span class=\"hljs-built_in\">int</span> resultLen = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; length; i = i + <span class=\"hljs-number\">2</span>) &#123;<br>resultLen = resultLen + nums[i];<br>&#125;<br><span class=\"hljs-built_in\">int</span>[] results = new <span class=\"hljs-built_in\">int</span>[resultLen];<br><span class=\"hljs-built_in\">int</span> index = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; length; i = i + <span class=\"hljs-number\">2</span>) &#123;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; nums[i]; j++) &#123;<br>results[index++] = nums[i + <span class=\"hljs-number\">1</span>];<br>&#125;<br>&#125;<br><span class=\"hljs-keyword\">return</span> results;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"summary\"><a href=\"#summary\" class=\"headerlink\" title=\"summary\"></a>summary</h3><p>总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。</p>\n<p>例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]</p>\n<p>如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list/</a></p>\n<p>给你一个以行程长度编码压缩的整数列表 nums 。</p>\n<p>考虑每相邻两个元素 [a, b] = [nums[2<em>i], nums[2</em>i+1]] （其中 i &gt;= 0 ），每一对都表示解压后有 a 个值为 b 的元素。</p>\n<p>请你返回解压后的列表。</p>\n<p>示例：</p>\n<p>输入：nums = [1,2,3,4]<br>输出：[2,4,4,4]</p>\n<p>提示：</p>\n<p>2 &lt;= nums.length &lt;= 100<br>nums.length % 2 == 0<br>1 &lt;= nums[i] &lt;= 100</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list</a></p>\n<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span>[] decompressRLElist(<span class=\"hljs-built_in\">int</span>[] nums) &#123;<br><span class=\"hljs-built_in\">int</span> length = nums.length;<br><span class=\"hljs-built_in\">int</span> resultLen = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; length; i = i + <span class=\"hljs-number\">2</span>) &#123;<br>resultLen = resultLen + nums[i];<br>&#125;<br><span class=\"hljs-built_in\">int</span>[] results = new <span class=\"hljs-built_in\">int</span>[resultLen];<br><span class=\"hljs-built_in\">int</span> index = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; length; i = i + <span class=\"hljs-number\">2</span>) &#123;<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; nums[i]; j++) &#123;<br>results[index++] = nums[i + <span class=\"hljs-number\">1</span>];<br>&#125;<br>&#125;<br><span class=\"hljs-keyword\">return</span> results;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"summary\"><a href=\"#summary\" class=\"headerlink\" title=\"summary\"></a>summary</h3><p>总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。</p>\n<p>例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]</p>\n<p>如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。</p>\n"},{"title":"递归","date":"2020-01-26T02:52:05.000Z","_content":"\n> 在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。\n\n\n1. 优点\n\n比较直观\n\n2. 缺点\n\n方法调用是栈操作，嵌太多，会栈溢出。\n\n### 阶乘\n\n\n```\npublic int fun1(int n) {\nif (n == 1) {\nreturn 1;\n}\nreturn n * fun1(n - 1);\n}\n```\n\n### 获取二叉树的最大深度\n\n- TreeNode\n\n```\npublic class TreeNode {\n\npublic int val;\npublic TreeNode left;\npublic TreeNode right;\n\npublic TreeNode(int x) {\nval = x;\n}\n}\n```\n\n- 获取树的最大深度\n\n```\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n```\n\n- 获取指定深度的和\n\n```\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n```\n\n\n\n\n\n\n\n","source":"_posts/递归.md","raw":"---\ntitle: 递归\ntags: [递归,二叉树,阶乘,java]\ndate: 2020-01-26 10:52:05\n---\n\n> 在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。\n\n\n1. 优点\n\n比较直观\n\n2. 缺点\n\n方法调用是栈操作，嵌太多，会栈溢出。\n\n### 阶乘\n\n\n```\npublic int fun1(int n) {\nif (n == 1) {\nreturn 1;\n}\nreturn n * fun1(n - 1);\n}\n```\n\n### 获取二叉树的最大深度\n\n- TreeNode\n\n```\npublic class TreeNode {\n\npublic int val;\npublic TreeNode left;\npublic TreeNode right;\n\npublic TreeNode(int x) {\nval = x;\n}\n}\n```\n\n- 获取树的最大深度\n\n```\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n```\n\n- 获取指定深度的和\n\n```\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n```\n\n\n\n\n\n\n\n","slug":"递归","published":1,"updated":"2020-07-13T15:10:22.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckckn8l9d000vrlslh66jeenu","content":"<blockquote>\n<p>在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。</p>\n</blockquote>\n<ol>\n<li>优点</li>\n</ol>\n<p>比较直观</p>\n<ol start=\"2\">\n<li>缺点</li>\n</ol>\n<p>方法调用是栈操作，嵌太多，会栈溢出。</p>\n<h3 id=\"阶乘\"><a href=\"#阶乘\" class=\"headerlink\" title=\"阶乘\"></a>阶乘</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> fun1(<span class=\"hljs-built_in\">int</span> n) &#123;<br><span class=\"hljs-keyword\">if</span> (n == <span class=\"hljs-number\">1</span>) &#123;<br><span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br>&#125;<br><span class=\"hljs-keyword\">return</span> n * fun1(n - <span class=\"hljs-number\">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"获取二叉树的最大深度\"><a href=\"#获取二叉树的最大深度\" class=\"headerlink\" title=\"获取二叉树的最大深度\"></a>获取二叉树的最大深度</h3><ul>\n<li>TreeNode</li>\n</ul>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-symbol\">TreeNode</span> &#123;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> val;<br><span class=\"hljs-keyword\">public</span> TreeNode left;<br><span class=\"hljs-keyword\">public</span> TreeNode right;<br><br><span class=\"hljs-keyword\">public</span> TreeNode(<span class=\"hljs-built_in\">int</span> x) &#123;<br>val = x;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>获取树的最大深度</li>\n</ul>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> get<span class=\"hljs-constructor\">MaxDeep(TreeNode <span class=\"hljs-params\">treeNode</span>)</span> &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode<span class=\"hljs-operator\"> == </span>null) &#123;<br>return <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-built_in\">int</span> left = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">left</span>)</span>;<br><span class=\"hljs-built_in\">int</span> right = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">right</span>)</span>;<br>return <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Math</span>.</span></span>max(left, right) + <span class=\"hljs-number\">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>获取指定深度的和</li>\n</ul>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dfs(TreeNode treeNode, <span class=\"hljs-built_in\">int</span> currentH, <span class=\"hljs-built_in\">int</span> h) &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode == <span class=\"hljs-literal\">null</span>) &#123;<br><span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-keyword\">if</span> (currentH == h) &#123;<br><span class=\"hljs-keyword\">return</span> treeNode.val;<br>&#125;<br><span class=\"hljs-keyword\">return</span> dfs(treeNode.left, currentH + <span class=\"hljs-number\">1</span>, h) + dfs(treeNode.right, currentH + <span class=\"hljs-number\">1</span>, h);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<blockquote>\n<p>在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。</p>\n</blockquote>\n<ol>\n<li>优点</li>\n</ol>\n<p>比较直观</p>\n<ol start=\"2\">\n<li>缺点</li>\n</ol>\n<p>方法调用是栈操作，嵌太多，会栈溢出。</p>\n<h3 id=\"阶乘\"><a href=\"#阶乘\" class=\"headerlink\" title=\"阶乘\"></a>阶乘</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> fun1(<span class=\"hljs-built_in\">int</span> n) &#123;<br><span class=\"hljs-keyword\">if</span> (n == <span class=\"hljs-number\">1</span>) &#123;<br><span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br>&#125;<br><span class=\"hljs-keyword\">return</span> n * fun1(n - <span class=\"hljs-number\">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"获取二叉树的最大深度\"><a href=\"#获取二叉树的最大深度\" class=\"headerlink\" title=\"获取二叉树的最大深度\"></a>获取二叉树的最大深度</h3><ul>\n<li>TreeNode</li>\n</ul>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-symbol\">TreeNode</span> &#123;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> val;<br><span class=\"hljs-keyword\">public</span> TreeNode left;<br><span class=\"hljs-keyword\">public</span> TreeNode right;<br><br><span class=\"hljs-keyword\">public</span> TreeNode(<span class=\"hljs-built_in\">int</span> x) &#123;<br>val = x;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>获取树的最大深度</li>\n</ul>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><code class=\"hljs reasonml\">public <span class=\"hljs-built_in\">int</span> get<span class=\"hljs-constructor\">MaxDeep(TreeNode <span class=\"hljs-params\">treeNode</span>)</span> &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode<span class=\"hljs-operator\"> == </span>null) &#123;<br>return <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-built_in\">int</span> left = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">left</span>)</span>;<br><span class=\"hljs-built_in\">int</span> right = get<span class=\"hljs-constructor\">MaxDeep(<span class=\"hljs-params\">treeNode</span>.<span class=\"hljs-params\">right</span>)</span>;<br>return <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Math</span>.</span></span>max(left, right) + <span class=\"hljs-number\">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>获取指定深度的和</li>\n</ul>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dfs(TreeNode treeNode, <span class=\"hljs-built_in\">int</span> currentH, <span class=\"hljs-built_in\">int</span> h) &#123;<br><span class=\"hljs-keyword\">if</span> (treeNode == <span class=\"hljs-literal\">null</span>) &#123;<br><span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-keyword\">if</span> (currentH == h) &#123;<br><span class=\"hljs-keyword\">return</span> treeNode.val;<br>&#125;<br><span class=\"hljs-keyword\">return</span> dfs(treeNode.left, currentH + <span class=\"hljs-number\">1</span>, h) + dfs(treeNode.right, currentH + <span class=\"hljs-number\">1</span>, h);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckckn8l8l0001rlsl5hx7c57o","tag_id":"ckckn8l8v0005rlslfyh001ea","_id":"ckckn8l91000crlsl35a28hwr"},{"post_id":"ckckn8l8s0003rlsl903ffr02","tag_id":"ckckn8l90000brlsl3fhvhmim","_id":"ckckn8l95000hrlsl38x4hvj4"},{"post_id":"ckckn8l8x0006rlsl6qpxbjna","tag_id":"ckckn8l93000frlsl2yuh7hhf","_id":"ckckn8l98000lrlsl3hba4o8m"},{"post_id":"ckckn8l8y0008rlsl8qojewrd","tag_id":"ckckn8l93000frlsl2yuh7hhf","_id":"ckckn8l9a000prlslceaaewod"},{"post_id":"ckckn8l99000mrlsl4fhwgnbi","tag_id":"ckckn8l90000brlsl3fhvhmim","_id":"ckckn8l9c000rrlsl59jz3sfe"},{"post_id":"ckckn8l9a000orlsl8tredims","tag_id":"ckckn8l90000brlsl3fhvhmim","_id":"ckckn8l9d000urlslcqu1cnj3"},{"post_id":"ckckn8l90000arlsl9zfhb9bt","tag_id":"ckckn8l99000nrlsl6bwz9s2s","_id":"ckckn8l9d000wrlsladl2aiu6"},{"post_id":"ckckn8l9a000qrlslfkmphxsj","tag_id":"ckckn8l90000brlsl3fhvhmim","_id":"ckckn8l9e000yrlsl45xa8rfa"},{"post_id":"ckckn8l9c000trlsl9xhi31lu","tag_id":"ckckn8l90000brlsl3fhvhmim","_id":"ckckn8l9e000zrlslb8jxbn3h"},{"post_id":"ckckn8l91000drlsl6me628iv","tag_id":"ckckn8l99000nrlsl6bwz9s2s","_id":"ckckn8l9f0011rlsl2vvk9h9z"},{"post_id":"ckckn8l92000erlsl6cle9vlu","tag_id":"ckckn8l99000nrlsl6bwz9s2s","_id":"ckckn8l9f0012rlslgeof81i0"},{"post_id":"ckckn8l94000grlslfqdxamr5","tag_id":"ckckn8l9e0010rlsl7jkt63ri","_id":"ckckn8l9f0014rlsl605f5mjc"},{"post_id":"ckckn8l96000irlsl88z48toc","tag_id":"ckckn8l9f0013rlslgena20xp","_id":"ckckn8l9f0016rlsldash2y8u"},{"post_id":"ckckn8l98000krlsl1sk202nr","tag_id":"ckckn8l9f0015rlsla1oqgqfs","_id":"ckckn8l9g0018rlslcrzj2bll"},{"post_id":"ckckn8l98000krlsl1sk202nr","tag_id":"ckckn8l90000brlsl3fhvhmim","_id":"ckckn8l9g0019rlsl3eilex16"},{"post_id":"ckckn8l9d000vrlslh66jeenu","tag_id":"ckckn8l9g0017rlsl6tfjdliw","_id":"ckckn8l9l001crlslgeda25c7"},{"post_id":"ckckn8l9d000vrlslh66jeenu","tag_id":"ckckn8l9g001arlsl5e5a1pt6","_id":"ckckn8l9l001drlsl73ge0hqi"},{"post_id":"ckckn8l9d000vrlslh66jeenu","tag_id":"ckckn8l9l001brlsl9cqz9tyh","_id":"ckckn8l9l001erlsl8w65cbmr"},{"post_id":"ckckn8l9d000vrlslh66jeenu","tag_id":"ckckn8l99000nrlsl6bwz9s2s","_id":"ckckn8l9l001frlsl1h9wcueh"}],"Tag":[{"name":"book","_id":"ckckn8l8v0005rlslfyh001ea"},{"name":"leetcode","_id":"ckckn8l90000brlsl3fhvhmim"},{"name":"tools","_id":"ckckn8l93000frlsl2yuh7hhf"},{"name":"java","_id":"ckckn8l99000nrlsl6bwz9s2s"},{"name":"linux","_id":"ckckn8l9e0010rlsl7jkt63ri"},{"name":"scrapy","_id":"ckckn8l9f0013rlslgena20xp"},{"name":"占坑法","_id":"ckckn8l9f0015rlsla1oqgqfs"},{"name":"递归","_id":"ckckn8l9g0017rlsl6tfjdliw"},{"name":"二叉树","_id":"ckckn8l9g001arlsl5e5a1pt6"},{"name":"阶乘","_id":"ckckn8l9l001brlsl9cqz9tyh"}]}}