{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","path":"medias/reward/alipay.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1594479649216},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1594479649216},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1594479649217},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1594479649217},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1594479649217},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1594479649224},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1594479635150},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1594479649217},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1594479649217},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1594479649217},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1594479649217},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1594479649217},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1594479649218},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1594479649218},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1594479649218},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1594479649218},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1594479649218},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1594479649218},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1594479649219},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1594479649222},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1594479649222},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1594479649223},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1594479649223},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1594479649223},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1594479649223},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1594479649223},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1594479649224},{"_id":"source/_posts/beef/.md","hash":"cf3ba084e8f22984a46c52c6012ab1098e424830","modified":1594479976129},{"_id":"source/_posts/beef/Effective Java.md","hash":"ed918f68fb2c312f594c2c4e46766031d0d30d9a","modified":1594479976132},{"_id":"source/_posts/beef/TODO.md","hash":"bb643c5b3251500ea8a8c229abfec9b336f8b52d","modified":1594479976130},{"_id":"source/_posts/beef/TinyURL 的加密与解密.md","hash":"8ef5c6b63a193e72579c6cc10af6d51087d68440","modified":1594479976128},{"_id":"source/_posts/beef/finereport.md","hash":"75ce5e7f03fcdbb312a2655b4c02085fe63f249d","modified":1594479976128},{"_id":"source/_posts/beef/idea.md","hash":"b6f058d4fec6541227aa113e5b53c71d9a7c74ea","modified":1594479976139},{"_id":"source/_posts/beef/jenkins.md","hash":"4da7550867ba7643b0d9a808c9e424eb4e75bfed","modified":1594479976131},{"_id":"source/_posts/beef/netty.md","hash":"c5138815c1c2e248238d5e6bdfcbdf380a3bbf7e","modified":1594479976131},{"_id":"source/_posts/beef/oauth2.md","hash":"325869bfb242c47e43a04345ce76b89a3b1de883","modified":1594479976138},{"_id":"source/_posts/beef/postgresql.md","hash":"9ea13bf3e8f75fd936b8b05a42cdd1b6416adb69","modified":1594479976142},{"_id":"source/_posts/beef/vim.md","hash":"5e0fec9dcf3df2ecbd89dec2524e3aa11ac5ee51","modified":1594479976141},{"_id":"source/_posts/beef/xpath.md","hash":"3953126e38cb32b6b0e3e586a6e804b1df22bf08","modified":1594479976140},{"_id":"source/_posts/beef/宝石与石头.md","hash":"aa9ff99549599f0ea4970f9e6e0c103e90711c47","modified":1594479976129},{"_id":"source/_posts/beef/层数最深叶子节点的和.md","hash":"c60b3b3ab981e1dce6747b1e2d33c5a44b8954a9","modified":1594479976139},{"_id":"source/_posts/beef/整数的各位积和之差.md","hash":"174b47bc7781a20b2e735b4c1884722cf76ccb20","modified":1594479976137},{"_id":"source/_posts/beef/统计位数为偶数的数字.md","hash":"d966a7e9535014a204fe5fc463776383c23fc4e3","modified":1594479976134},{"_id":"source/_posts/beef/解压缩编码列表.md","hash":"13c3051d0fd5d7ae8a6c45f349f6a5989050e9c3","modified":1594479976142},{"_id":"source/_posts/beef/递归.md","hash":"18c2077e06828c6f07a67dc5b60eec62a06c7048","modified":1594479976143},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1594479649219},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1594479649219},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1594479649219},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1594479649219},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1594479649220},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1594479649220},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1594479649220},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1594479649220},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1594479649220},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1594479649220},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1594479649221},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1594479649221},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1594479649222},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1594479649222},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1594479649222},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1594479649222},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1594479649224},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1594479649227},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1594479649234},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1594479649234},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1594479649234},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1594479649235},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1594479649235},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1594479649235},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1594479649235},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1594479649237},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1594479649237},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1594479649238},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1594479649238},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1594479649221},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1594479649220},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1594479649221},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1594479649221},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1594479649221},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1594479649221},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1594479649227},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1594479649227},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1594479649225},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1594479649225},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1594479649225},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1594479649225},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1594479649226},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1594479649226},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1594479649226},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1594479649226},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1594479649226},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1594479649227},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1594479649228},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1594479649229},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1594479649231},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1594479649236},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1594479649236},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1594479649236},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1594479649236},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1594479649237},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1594479649237},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1594479649231},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1594479649230},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1594479649233},{"_id":"source/_posts/beef/node-v12.18.2-linux-armv7l.tar.xz","hash":"f4bc23162077ef86ae1adb31fc0bb8e7f612da8c","modified":1593513238000},{"_id":"source/_posts/beef/node-v12.18.2-linux-x64.tar.xz","hash":"51031b4b68308eef1e27ebf306d1ca818113fdd0","modified":1593515608000},{"_id":"public/2020/07/11/hello-world/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/06/10/beef/TODO/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/06/07/beef/Effective Java/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/03/26/beef/netty/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/02/27/beef/idea/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/02/26/beef/jenkins/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/02/26/beef/vim/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/02/22/beef/finereport/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/02/14/beef/xpath/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/02/13/beef/oauth2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/27/beef/TinyURL 的加密与解密/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/26/beef/递归/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/26/beef/层数最深叶子节点的和/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/25/beef/整数的各位积和之差/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/25/beef/统计位数为偶数的数字/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/24/beef/宝石与石头/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/23/beef/解压缩编码列表/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/2020/01/20/beef/postgresql/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/archives/index.html","hash":"89c2e1c100406bfb1d8b29cc12c0d739a661e26a","modified":1594487466305},{"_id":"public/archives/page/2/index.html","hash":"3b8e65a58e02eeb65d8a653c204d225f9b44ff55","modified":1594487466305},{"_id":"public/archives/2020/index.html","hash":"7fe9ff5c7f940f03952748289c0936b3f6f34a79","modified":1594487466305},{"_id":"public/archives/2020/page/2/index.html","hash":"400e421729c02ec7c443b1e0634536da404fa69c","modified":1594487466305},{"_id":"public/archives/2020/01/index.html","hash":"07930709a356495a3d929bd640c71c08db49cf90","modified":1594487466305},{"_id":"public/archives/2020/02/index.html","hash":"d21dce0937b22d938d4c524882680146cf654a79","modified":1594487466305},{"_id":"public/archives/2020/03/index.html","hash":"ff34c45cf791c650e5c8683a4e41151d44e3323f","modified":1594487466305},{"_id":"public/archives/2020/06/index.html","hash":"2606f0a3092b2afef9d4674fd90d74d59ef73b68","modified":1594487466305},{"_id":"public/archives/2020/07/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/index.html","hash":"ca72049cb6fc5edfb8b849eadeedd5b2d7214de4","modified":1594487466305},{"_id":"public/page/2/index.html","hash":"746bb6a6de1a0f7aeea8c5b50f49ece8cc557dc9","modified":1594487466305},{"_id":"public/tags/book/index.html","hash":"44f29e2ca13365e2542c7b14f1771dd3f5f18e32","modified":1594487466305},{"_id":"public/tags/sql/index.html","hash":"8226398dab3015628ed20e77954b52576d8df6b9","modified":1594482249191},{"_id":"public/tags/leetcode/index.html","hash":"fab561a891d4f5ceda70c8fffaf9b7cf3361c8dd","modified":1594487466305},{"_id":"public/tags/tools/index.html","hash":"ece2a61cbc2e8fe93fc02bb9e31c8edeb6b82b4a","modified":1594487466305},{"_id":"public/tags/java/index.html","hash":"b15e218cf985f8a9d97c41e7a7ca5007a06596ee","modified":1594487466305},{"_id":"public/tags/postgresql/index.html","hash":"79fa386c4952b2829d6c6dced11e5aae9beaf823","modified":1594482249191},{"_id":"public/tags//index.html","hash":"25e20dd91004dcd10e6bc399e7ec0f9cc8ec0533","modified":1594482249191},{"_id":"public/tags/content/index.html","hash":"0a348535756aa67640ce5bdd8d37caf6c81f989c","modified":1594482249191},{"_id":"public/tags/linesHighlighted/index.html","hash":"ad482c5c9aa028470964d1319335f2d0efc99744","modified":1594482249191},{"_id":"public/tags/isStarred-false/index.html","hash":"b82fa0cbc659f1b08d48f104e66d8e809b823794","modified":1594482249191},{"_id":"public/tags/linux/index.html","hash":"83485145ab4f7b4eddfd15079541f1fab0475dc8","modified":1594487466305},{"_id":"public/tags/scrapy/index.html","hash":"3d9c3d85329548fbb8cb062c0c4c0dc6f35f237f","modified":1594487466305},{"_id":"public/tags/占坑法/index.html","hash":"fcbbf179543298c27d4ee3188c7ca3d4eb264cb9","modified":1594487466305},{"_id":"public/tags/宝石与石头/index.html","hash":"dd27bb0efefe801bdfbfbf465e04f369cd5fa54a","modified":1594482249191},{"_id":"public/tags/2020-1-24/index.html","hash":"298e546293589be35ed78e087fb8a71299f0be2e","modified":1594482249191},{"_id":"public/tags/https-leetcode-cn-com-problems-jewels-and-stones/index.html","hash":"ec7a3e66db72974e0c04bcbe1048a299b05f900c","modified":1594482249191},{"_id":"public/tags/给定字符串J-xa0代表石头中宝石的类型，和字符串-xa0S代表你拥有的石头。-xa0S-xa0中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。/index.html","hash":"af00f42df313bf93f1dbadc00e6430621adaeb14","modified":1594482249191},{"_id":"public/tags/J-xa0中的字母不重复，J-xa0和-xa0S中的所有字符都是字母。字母区分大小写，因此a和A是不同类型的石头。/index.html","hash":"87bebaf660049d971b22a98cc4c3efc4af54d321","modified":1594482249191},{"_id":"public/tags/示例-1/index.html","hash":"ceaacb427e3b7cb303ea79b8fad3df1b92f86beb","modified":1594482249191},{"_id":"public/tags/输入-J-aA-S-aAAbbbb/index.html","hash":"9f3a0b02cac5718535c8b0f45a340de4011963a4","modified":1594482249191},{"_id":"public/tags/输出-3/index.html","hash":"bc47d6f5f604d6212028b0b04a51ed2d8952b509","modified":1594482249191},{"_id":"public/tags/示例-2/index.html","hash":"b43ddfa2cb7a4ab09cdc3bf870308bf71b91e15b","modified":1594482249191},{"_id":"public/tags/输入-J-z-S-ZZ/index.html","hash":"3d911a9059b7f55211a4a71ade9d4cde6ba7f8a2","modified":1594482249191},{"_id":"public/tags/输出-0/index.html","hash":"675762086b6bea85d359496decd4a1f0ff2766f6","modified":1594482249191},{"_id":"public/tags/注意/index.html","hash":"fee77f662ec9ffc87b87034a514c80b18cf5ef21","modified":1594482249191},{"_id":"public/tags/S-xa0和-xa0J-xa0最多含有50个字母。/index.html","hash":"9755feb19609a16e036dbcf33cae1bd4b33927c0","modified":1594482249191},{"_id":"public/tags/J-xa0中的字符不重复。/index.html","hash":"f0f50edff3d7532f51a97ad5bae6b8c1034ef939","modified":1594482249191},{"_id":"public/tags/来源：力扣（LeetCode）/index.html","hash":"237118a517d827c486325260c1ba2511d4bc0e38","modified":1594482249191},{"_id":"public/tags/链接：https-leetcode-cn-com-problems-jewels-and-stones/index.html","hash":"37614ddc9b673dc65f7dfa5e585d973da1ee3309","modified":1594482249191},{"_id":"public/tags/著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。/index.html","hash":"90341291c0b63e737401d6d330c4fbf8c5ffb0bf","modified":1594482249191},{"_id":"public/tags/第一次/index.html","hash":"91995d54437caef658b41c731e4aae5e5f819285","modified":1594482249191},{"_id":"public/tags/https-beer-1256523277-cos-ap-shanghai-myqcloud-com-blog-20200124182356-png/index.html","hash":"e039b8596dbed26cdc52c74721ea8a12cf480be7","modified":1594482249191},{"_id":"public/tags/public-int-numJewelsInStones-String-J-String-S/index.html","hash":"fff178c7a0ac06b04c9cc7173bb9442332a8ac26","modified":1594482249191},{"_id":"public/tags/Set-String-jewelsSet-new-HashSet-J-length/index.html","hash":"f1578d1997622c02ddd492b748acaa198fb5b703","modified":1594482249191},{"_id":"public/tags/char-jewelsArray-J-toCharArray/index.html","hash":"c03c0857938c3d0af5d71290811af676b7e66521","modified":1594482249191},{"_id":"public/tags/for-int-i-0-i-jewelsArray-length-i/index.html","hash":"00c9206c25b07e5821cef3e44a8467fad9905b2b","modified":1594482249191},{"_id":"public/tags/jewelsSet-add-String-valueOf-jewelsArray-i/index.html","hash":"348263aaad1f0b7ef159f52b88126397f21ab7bc","modified":1594482249191},{"_id":"public/tags/int-count-0/index.html","hash":"2e573b73806e7384428afe202190023b60389e95","modified":1594482249191},{"_id":"public/tags/for-char-c-S-toCharArray/index.html","hash":"24abe0565df9a7d5ce661478fc81427ff7309c6c","modified":1594482249191},{"_id":"public/tags/if-jewelsSet-contains-String-valueOf-c/index.html","hash":"fbf7a999643cc2bf173e82dfbc652e416ec4d53f","modified":1594482249191},{"_id":"public/tags/count/index.html","hash":"ee51f5097991104a009b20ec92dcab5177feb1a4","modified":1594482249191},{"_id":"public/tags/return-count/index.html","hash":"09e6c7cc23016ce3fe71a5f9e918abad5c1ae671","modified":1594482249191},{"_id":"public/tags/呵呵，肯定是浪费为-String-valueOf-方法的转换上了/index.html","hash":"df2ab1f1a00f745a44dbe0c388c503bf948a0add","modified":1594482249191},{"_id":"public/tags/第二次/index.html","hash":"f9035d800a074cc8b7e55dd376917e6c2d2a9ef1","modified":1594482249191},{"_id":"public/tags/https-beer-1256523277-cos-ap-shanghai-myqcloud-com-blog-20200124182927-png/index.html","hash":"1a184b17d168abd919fa2a399ecb122aa6f917f1","modified":1594482249191},{"_id":"public/tags/Set-Character-jewelsSet-new-HashSet-J-length/index.html","hash":"a6b44f182d19b20e8de95000be39bc0803fbc773","modified":1594482249191},{"_id":"public/tags/for-int-i-0-i-J-length-i/index.html","hash":"78aaaf9ee2dccadb385882aaa07dd66331ffe3d5","modified":1594482249191},{"_id":"public/tags/jewelsSet-add-J-charAt-i/index.html","hash":"6193ba56f6400a641b77e0eddb3b3300c20fb581","modified":1594482249191},{"_id":"public/tags/for-int-i-0-i-S-length-i/index.html","hash":"69a2b386ea0144db7f2d469d05eb58a1237d0e2d","modified":1594482249191},{"_id":"public/tags/if-jewelsSet-contains-S-charAt-i/index.html","hash":"61dae535f68d689628203bc32c74a2c3cf80fafc","modified":1594482249191},{"_id":"public/tags/转为-char-类型操作，好像也没省多少空间。。。/index.html","hash":"80f4adb1c1d04a5c4f1adb845ffee5eb6e526f92","modified":1594482249191},{"_id":"public/tags/第三次/index.html","hash":"a28c6861dba9bbe5649f66118cfdaca62fe0e3db","modified":1594482249191},{"_id":"public/tags/https-beer-1256523277-cos-ap-shanghai-myqcloud-com-blog-20200124191914-png/index.html","hash":"09ce8978c3258e671114eab1f8b829457dc14e8b","modified":1594482249191},{"_id":"public/tags/public-int-numJewelsInStones3-String-J-String-S/index.html","hash":"0b8bc626102417c8e63cb5644a3c962a80323437","modified":1594482249191},{"_id":"public/tags/A-Z-65-90-a-z-97-122/index.html","hash":"c83da5412a27084d6603ac4f14251dc422bbd089","modified":1594482249191},{"_id":"public/tags/int-ints-new-int-58/index.html","hash":"ad973ea7d7a9c83bb84bfb9baf8fbfda4ecddb54","modified":1594482249191},{"_id":"public/tags/for-char-c-J-toCharArray/index.html","hash":"2e2ec6d606b1ecd8c61a01888058bc52304402cd","modified":1594482249191},{"_id":"public/tags/ints-c-65-1/index.html","hash":"ce7b3e69ae171ed3af972a4d269771b0f67563d3","modified":1594482249191},{"_id":"public/tags/if-ints-c-65-1/index.html","hash":"29ca5f538637705ddaa31bb5b1cc6b63713c5071","modified":1594482249191},{"_id":"public/tags/占坑法。参考的。/index.html","hash":"4e9f56d3e612875d1f870584f67ef23c790ef560","modified":1594482249191},{"_id":"public/tags/统计位数为偶数的数字/index.html","hash":"0173e79f201e02e4ae0913bd2c58a8cfc1798877","modified":1594482249191},{"_id":"public/tags/https-leetcode-cn-com-problems-find-numbers-with-even-number-of-digits/index.html","hash":"c64530e236e2e98e507a2ad37158e17d6d4c8aef","modified":1594482249191},{"_id":"public/tags/给你一个整数数组-xa0nums，请你返回其中位数为-xa0偶数-xa0的数字的个数。/index.html","hash":"cbd52e86328d865810eb2a43c1410d177ae99d85","modified":1594482249191},{"_id":"public/tags/示例-1：/index.html","hash":"a426376109c94ab754926b3e1a952bd9de79e307","modified":1594482249191},{"_id":"public/tags/输入：nums-12-345-2-6-7896/index.html","hash":"47bf53f02037dc0c756a5b7f73676689efb7e319","modified":1594482249191},{"_id":"public/tags/输出：2/index.html","hash":"927e1dcab6e5754d0d1ba28115b7372e8eb52730","modified":1594482249191},{"_id":"public/tags/解释：/index.html","hash":"b95da42636b12992b2e145f1a550034163ad37f3","modified":1594482249191},{"_id":"public/tags/12-是-2-位数字（位数为偶数）/index.html","hash":"b56e5134fd65a43c5206eb5e4c5557636adea597","modified":1594482249191},{"_id":"public/tags/345-是-3-位数字（位数为奇数）/index.html","hash":"afb027aa1ab255682cfe6be49431e3f5be3bc646","modified":1594482249191},{"_id":"public/tags/2-是-1-位数字（位数为奇数）/index.html","hash":"1fd0f2250546a9fa5864a448b0ad821f8c180179","modified":1594482249191},{"_id":"public/tags/6-是-1-位数字-位数为奇数）/index.html","hash":"ed76eaa90086c777128cedcfaac961a079a0dd06","modified":1594482249191},{"_id":"public/tags/7896-是-4-位数字（位数为偶数）/index.html","hash":"eb81a96efb124017e3e2af4831c740a68bbd9712","modified":1594482249191},{"_id":"public/tags/因此只有-12-和-7896-是位数为偶数的数字/index.html","hash":"d1056638c4aa46b16f14c0d598227e22d43cc39c","modified":1594482249191},{"_id":"public/tags/示例-2：/index.html","hash":"e42640e9559359ef8c3dc630745c2c365c1ba96c","modified":1594482249191},{"_id":"public/tags/输入：nums-555-901-482-1771/index.html","hash":"b8b76dfbd91a00032088c95a86ad25ab312dfa19","modified":1594482249191},{"_id":"public/tags/输出：1/index.html","hash":"144e27b4ad2b56968bc27f4c0b123ac3dd16ddc9","modified":1594482249191},{"_id":"public/tags/只有-1771-是位数为偶数的数字。/index.html","hash":"b5a3b05c4d8fedf758f09249d865e09d611661de","modified":1594482249191},{"_id":"public/tags/提示：/index.html","hash":"28ad5f3b9b0377a8edad6ed0e2404ab2556a2310","modified":1594482249191},{"_id":"public/tags/1-nums-length-500/index.html","hash":"019ec3af068a55a9e372043e4dd044b1d861deb2","modified":1594482249191},{"_id":"public/tags/1-nums-i-10-5/index.html","hash":"c8065e822ddbb6e7975ea34d46ab42998949548e","modified":1594482249191},{"_id":"public/tags/链接：https-leetcode-cn-com-problems-find-numbers-with-even-number-of-digits/index.html","hash":"debe6127f18368f994bb468c2cb733c620f8f3f4","modified":1594482249191},{"_id":"public/tags/https-beer-1256523277-cos-ap-shanghai-myqcloud-com-blog-20200125150215-png/index.html","hash":"0ef7a71386b9eac7aacb725a72bce7bd6ac966fa","modified":1594482249191},{"_id":"public/tags/public-int-findNumbers-int-nums/index.html","hash":"7b8ac0437577b053930a29500b4fd49d83dd305c","modified":1594482249191},{"_id":"public/tags/int-result-0/index.html","hash":"fcee2461dd691e343edd48ad20730040964f5cd0","modified":1594482249191},{"_id":"public/tags/for-int-num-nums/index.html","hash":"43cc365e561a71f80ca817c77836aa97b6c82a5b","modified":1594482249191},{"_id":"public/tags/int-count-1/index.html","hash":"f5c7844067e38bff1daccf0f86864ba1f232720d","modified":1594482249191},{"_id":"public/tags/while-true/index.html","hash":"4e8e251d533c2d842d703375c3e2c79d04acd930","modified":1594482249191},{"_id":"public/tags/int-x-num-10/index.html","hash":"5640258c9c3572ccc9a4a4792fcae8e6d6955c5b","modified":1594482249191},{"_id":"public/tags/if-x-0/index.html","hash":"87fd5797da2e3b64eb0efde7fa0fc65f4b0e2972","modified":1594482249191},{"_id":"public/tags/num-x/index.html","hash":"1e3ee13d552984571cb12976f5ed16575c3d7b3a","modified":1594482249191},{"_id":"public/tags/else/index.html","hash":"cd6182ddd10244303118bc70514e77f5e39e5197","modified":1594482249191},{"_id":"public/tags/break/index.html","hash":"f1aee37359f40f32d9ca8fb6c151247d48378212","modified":1594482249191},{"_id":"public/tags/if-count-2-0/index.html","hash":"2d6c1fcd82416dfd8b5e7c7443790a67a8977913","modified":1594482249191},{"_id":"public/tags/result/index.html","hash":"6c58ca2a0e32133157b745ae3ee2b1a42e373097","modified":1594482249191},{"_id":"public/tags/return-result/index.html","hash":"d337ac1c13674916904e39272f186314272a6470","modified":1594482249191},{"_id":"public/tags/https-beer-1256523277-cos-ap-shanghai-myqcloud-com-blog-20200125150752-png/index.html","hash":"d6d3db6aafe51895c8863227c3f334c6c9c36c38","modified":1594482249191},{"_id":"public/tags/if-String-valueOf-num-length-2-0/index.html","hash":"aca5f659fba2eea292e5e994ff7c4d68ed79dbe1","modified":1594482249191},{"_id":"public/tags/总结/index.html","hash":"ef6babb9540f894d0cad747abcae4891e20d06d8","modified":1594482249191},{"_id":"public/tags/1-判断一个数有多少位数/index.html","hash":"003d583fce01b4cebd8840fef705e0c83b699100","modified":1594482249191},{"_id":"public/tags/2-判断一个数是奇数还是偶数/index.html","hash":"c20afca029ca4c38144b4618e9e8f9709cea8cff","modified":1594482249191},{"_id":"public/tags/递归/index.html","hash":"67799a12413d3a5cde9e6279e0f4dcbf3138f98a","modified":1594487466305},{"_id":"public/tags/二叉树/index.html","hash":"bff29dd0dfce2312cfea76a967459a02a7810f39","modified":1594487466305},{"_id":"public/tags/阶乘/index.html","hash":"9a84b9e625ede7f60a7f6d782cd59d21094d19e6","modified":1594487466305},{"_id":"public/tags/在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。/index.html","hash":"c09e6f57ebf125fd688256bb254540fb4845abc0","modified":1594482249191},{"_id":"public/tags/1-优点/index.html","hash":"6d787ab29a8a37d4e55e812786625c2babffc454","modified":1594482249191},{"_id":"public/tags/比较直观/index.html","hash":"f0227780a7a52b2525315e9aaff6ca43a6d94e27","modified":1594482249191},{"_id":"public/tags/2-缺点/index.html","hash":"644186dce0f984df07efdb57920c585505680739","modified":1594482249191},{"_id":"public/tags/方法调用是栈操作，嵌太多，会栈溢出。/index.html","hash":"b407c6fb146a3516ad8748b0823a88e5a74db5ce","modified":1594482249191},{"_id":"public/tags/public-int-fun1-int-n/index.html","hash":"1c6f772fc69e8e59e830be9b790db035d7b1388d","modified":1594482249191},{"_id":"public/tags/if-n-1/index.html","hash":"cd8f0fac3f9205fae191eda1662916c16b9a78bf","modified":1594482249191},{"_id":"public/tags/return-1/index.html","hash":"a77498465cfd215a4391e943b3124f3cb9e782e8","modified":1594482249191},{"_id":"public/tags/return-n-fun1-n-1/index.html","hash":"ec671ff5bb0595c5cb2e4f8e7afd9534fdf9491c","modified":1594482249191},{"_id":"public/tags/获取二叉树的最大深度/index.html","hash":"15c9b54e6b72df7e0d9cc40188293661d5d95764","modified":1594482249191},{"_id":"public/tags/TreeNode/index.html","hash":"662dacee523782a6aa138d8f7c5f5ed26cfd858b","modified":1594482249191},{"_id":"public/tags/public-class-TreeNode/index.html","hash":"c69a403989177c5ccf28b78a86b6c7759bd1ebc6","modified":1594482249191},{"_id":"public/tags/public-int-val/index.html","hash":"424378c3531e2ab0bd8669c267607a878c44d0ff","modified":1594482249191},{"_id":"public/tags/public-TreeNode-left/index.html","hash":"7c72df9f472a32344f72b65b9e56d6aa6245a688","modified":1594482249191},{"_id":"public/tags/public-TreeNode-right/index.html","hash":"2772aaf1bff9480cba45fd422c5a984c0f412000","modified":1594482249191},{"_id":"public/tags/public-TreeNode-int-x/index.html","hash":"deea7773f3d1108c857597e2cbc352e27197138f","modified":1594482249191},{"_id":"public/tags/val-x/index.html","hash":"91143dcc903617470f5310f5a1cbb340c133615a","modified":1594482249191},{"_id":"public/tags/获取树的最大深度/index.html","hash":"17830dbc6394770e3fde9ae842c5729da5488556","modified":1594482249191},{"_id":"public/tags/public-int-getMaxDeep-TreeNode-treeNode/index.html","hash":"5d0b1cda57d1a1f722cecc03027c755389d2cdd4","modified":1594482249191},{"_id":"public/tags/if-treeNode-null/index.html","hash":"ce838aa23daea313493dd7419f71c4dd992162bb","modified":1594482249191},{"_id":"public/tags/return-0/index.html","hash":"865f4b0b72506c59e25f92997da37c153fed5e1d","modified":1594482249191},{"_id":"public/tags/int-left-getMaxDeep-treeNode-left/index.html","hash":"ae32309f529295754f0d3b68b9be6b922c3dee59","modified":1594482249191},{"_id":"public/tags/int-right-getMaxDeep-treeNode-right/index.html","hash":"23b36fc09f6e9e2b1ebf0efb3964f223c0900d31","modified":1594482249191},{"_id":"public/tags/return-Math-max-left-right-1/index.html","hash":"62f32ff3e8c893f14d5f56ed25ca699fca5c9ce3","modified":1594482249191},{"_id":"public/tags/获取指定深度的和/index.html","hash":"7a4f828b69a21f5020176560d43887f914f35010","modified":1594482249191},{"_id":"public/tags/public-int-dfs-TreeNode-treeNode-int-currentH-int-h/index.html","hash":"174c5588e2acbb934b440f0da43e24227a213f50","modified":1594482249191},{"_id":"public/tags/if-currentH-h/index.html","hash":"71cb5a037b1ab7bd9b9708b05eea855d9e5a2352","modified":1594482249191},{"_id":"public/tags/return-treeNode-val/index.html","hash":"d24b93969758a7fb22029913aaf868506dd2195b","modified":1594482249191},{"_id":"public/tags/return-dfs-treeNode-left-currentH-1-h-dfs-treeNode-right-currentH-1-h/index.html","hash":"8a7b3aa19f0c522c0c1cc5088cb0a4a6d5d41983","modified":1594482249191},{"_id":"public/tags/解压缩编码列表/index.html","hash":"d31394c8b37028a4f8bb12b1178a98db4b4ae61e","modified":1594482249191},{"_id":"public/tags/2020-1-23/index.html","hash":"2ced441490105754646b074a4439cb4fdd56f5f9","modified":1594482249191},{"_id":"public/tags/https-leetcode-cn-com-problems-decompress-run-length-encoded-list/index.html","hash":"82041585069cda5522aa2a8a811c83377f3029b4","modified":1594482249191},{"_id":"public/tags/给你一个以行程长度编码压缩的整数列表-xa0nums-xa0。/index.html","hash":"fbf736b1178cce3aee37411d78b2c073731cf166","modified":1594482249191},{"_id":"public/tags/考虑每相邻两个元素-a-b-nums-2-i-nums-2-i-1-xa0（其中-xa0i-0-xa0），每一对都表示解压后有-a-xa0个值为-xa0b-xa0的元素。/index.html","hash":"8b54cc4c2483e329442a288633dfd2584aa29297","modified":1594482249191},{"_id":"public/tags/请你返回解压后的列表。/index.html","hash":"5f2fbe5752b6758c5c8563b7f138522bdaddd5b1","modified":1594482249191},{"_id":"public/tags/示例：/index.html","hash":"c413008639dae1ca35ecffd8637d03b45aaff059","modified":1594482249191},{"_id":"public/tags/输入：nums-1-2-3-4/index.html","hash":"f08db04cce133d90b26a032bf199c024a4165e8b","modified":1594482249191},{"_id":"public/tags/输出：-2-4-4-4/index.html","hash":"55652adf1d6e5f680a0d53cf38909e0a748b6bb6","modified":1594482249191},{"_id":"public/tags/2-nums-length-100/index.html","hash":"96609f6e4e3307c8fd1b478f287607c702bab477","modified":1594482249191},{"_id":"public/tags/nums-length-2-0/index.html","hash":"e1932d4eaff55c166850877bde574926ae972fb1","modified":1594482249191},{"_id":"public/tags/1-nums-i-100/index.html","hash":"ae30b2ae9ce1a5b0cb4504b8fc5f8cddda1c71f5","modified":1594482249191},{"_id":"public/tags/链接：https-leetcode-cn-com-problems-decompress-run-length-encoded-list/index.html","hash":"35773c96663c65c6a67985bdb418e6f213eaad23","modified":1594482249191},{"_id":"public/tags/public-int-decompressRLElist-int-nums/index.html","hash":"db7020449e47b82aa83e657e65a9120cf5d907b9","modified":1594482249191},{"_id":"public/tags/int-length-nums-length/index.html","hash":"6d399bff485eda0f989ae07a23745a030f714266","modified":1594482249191},{"_id":"public/tags/int-resultLen-0/index.html","hash":"9ff38d6079c6ed9db3f448abc061345dc676b4ab","modified":1594482249191},{"_id":"public/tags/for-int-i-0-i-length-i-i-2/index.html","hash":"e0ac5dd05dc15643f8e6e2f47b4c96984d3a311b","modified":1594482249191},{"_id":"public/tags/resultLen-resultLen-nums-i/index.html","hash":"b0536ba43221f0d72901ceee106b1027f7474a6b","modified":1594482249191},{"_id":"public/tags/int-results-new-int-resultLen/index.html","hash":"2a809a077824666d50dcbc4de223949002a921e7","modified":1594482249191},{"_id":"public/tags/int-index-0/index.html","hash":"ec6a8b3dd0a2b788d2fc1c8a159a14990eeafcff","modified":1594482249191},{"_id":"public/tags/for-int-j-0-j-nums-i-j/index.html","hash":"00da175a9b7a537bc7e983e3174573bacb64db00","modified":1594482249191},{"_id":"public/tags/results-index-nums-i-1/index.html","hash":"78a773dae2a7703643eab82eea29094e13a554fc","modified":1594482249191},{"_id":"public/tags/return-results/index.html","hash":"3fe31e3ea0f2ed5a8469eff35ef7bbb2f993dad1","modified":1594482249191},{"_id":"public/tags/summary/index.html","hash":"e1ebe447a913f436cc783d7ad4d49a100fa2fd13","modified":1594482249191},{"_id":"public/tags/总结题目意思就是：数组是满足条件-：-a-b-nums-2-i-，解压之后-是-a-个-b。/index.html","hash":"4aabb4471c177b55bd37a52926ed673b27805a57","modified":1594482249191},{"_id":"public/tags/例如：-a-b-6，7-，则加压之后是-7-7-7-7-7-7-7/index.html","hash":"9e25dfb197afaa8566e39e3841808811b72e31c1","modified":1594482249191},{"_id":"public/tags/如果是-nums-1-2-3-4-，则分割为-a-b-格式处理。/index.html","hash":"800eee29cbef7e75f473414c44baa37525414dba","modified":1594482249191},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1594487466305},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1594487466305},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1594487466305},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1594487466305},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1594487466305},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1594487466305},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1594487466305},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1594487466305},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1594487466305},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1594487466305},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1594487466305},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1594487466305},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1594487466305},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1594487466305},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1594487466305},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1594487466305},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1594487466305},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1594487466305},{"_id":"public/css/style.css","hash":"d4cfa90089c78a8b791252afae9fafa3b5658900","modified":1594487466305},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1594487466305},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1594487466305},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1594487466305},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1594487466305},{"_id":"source/_posts/Effective Java.md","hash":"ed918f68fb2c312f594c2c4e46766031d0d30d9a","modified":1594480211668},{"_id":"source/_posts/.md","hash":"cf3ba084e8f22984a46c52c6012ab1098e424830","modified":1594480211662},{"_id":"source/_posts/TODO.md","hash":"bb643c5b3251500ea8a8c229abfec9b336f8b52d","modified":1594480211665},{"_id":"source/_posts/TinyURL 的加密与解密.md","hash":"8ef5c6b63a193e72579c6cc10af6d51087d68440","modified":1594480211661},{"_id":"source/_posts/finereport.md","hash":"75ce5e7f03fcdbb312a2655b4c02085fe63f249d","modified":1594480211662},{"_id":"source/_posts/idea.md","hash":"b6f058d4fec6541227aa113e5b53c71d9a7c74ea","modified":1594480211674},{"_id":"source/_posts/netty.md","hash":"c5138815c1c2e248238d5e6bdfcbdf380a3bbf7e","modified":1594480211667},{"_id":"source/_posts/oauth2.md","hash":"325869bfb242c47e43a04345ce76b89a3b1de883","modified":1594480211673},{"_id":"source/_posts/jenkins.md","hash":"4da7550867ba7643b0d9a808c9e424eb4e75bfed","modified":1594480211666},{"_id":"source/_posts/postgresql.md","hash":"9ea13bf3e8f75fd936b8b05a42cdd1b6416adb69","modified":1594480211679},{"_id":"source/_posts/vim.md","hash":"5e0fec9dcf3df2ecbd89dec2524e3aa11ac5ee51","modified":1594480211678},{"_id":"source/_posts/xpath.md","hash":"3953126e38cb32b6b0e3e586a6e804b1df22bf08","modified":1594480211677},{"_id":"source/_posts/层数最深叶子节点的和.md","hash":"c60b3b3ab981e1dce6747b1e2d33c5a44b8954a9","modified":1594480211676},{"_id":"source/_posts/宝石与石头.md","hash":"0bff655cf8fe96dbd2d60d014695eb31fbd43bcc","modified":1594487465742},{"_id":"source/_posts/整数的各位积和之差.md","hash":"174b47bc7781a20b2e735b4c1884722cf76ccb20","modified":1594480211672},{"_id":"source/_posts/统计位数为偶数的数字.md","hash":"82d0b6c2e796cd439f6d1f4c46bd6d46734524bc","modified":1594487465747},{"_id":"source/_posts/递归.md","hash":"00934244c4b561c08470764a890bfa1b37309588","modified":1594487465760},{"_id":"source/_posts/解压缩编码列表.md","hash":"d1e448d4a9729a712abef25fbcef8b191dbe1ab4","modified":1594487465759},{"_id":"public/2020/06/10/TODO/index.html","hash":"89aab1bff53b920eff2eb51019dd218d4942fd38","modified":1594482249191},{"_id":"public/2020/06/07/Effective Java/index.html","hash":"7a8919074c4c86f4945b5c6ec5464a34d2395107","modified":1594487466305},{"_id":"public/2020/03/26/netty/index.html","hash":"65d7643aedcaa62e5a5f5fd869b0576ab7f9fa99","modified":1594487466305},{"_id":"public/2020/02/27/idea/index.html","hash":"6ba47df02205c6bc8be52694f0b266a29cb0662f","modified":1594487466305},{"_id":"public/2020/02/26/jenkins/index.html","hash":"b16bb6aacc9464a8134131709fd09d67657ad079","modified":1594487466305},{"_id":"public/2020/02/26/vim/index.html","hash":"402cca2c0eee584d6df7211d30ea0aee2c0b2df1","modified":1594487466305},{"_id":"public/2020/02/22/finereport/index.html","hash":"8d27df2e1c3d46c237925e9afab457eea84c3f50","modified":1594487466305},{"_id":"public/2020/02/14/xpath/index.html","hash":"e494d8f80e0ab365058c007d2f6ac15ed7bf5017","modified":1594487466305},{"_id":"public/2020/02/13/oauth2/index.html","hash":"291008bba0d7909f2c28c5f3a6b4d6699ad85004","modified":1594487466305},{"_id":"public/2020/01/27/TinyURL 的加密与解密/index.html","hash":"23c7c8534e059f6d471d7e57ac47fde5d72a5de4","modified":1594487466305},{"_id":"public/2020/01/26/递归/index.html","hash":"06afde5920db6a429bfefbbecc6183f7e931f967","modified":1594487466305},{"_id":"public/2020/01/26/层数最深叶子节点的和/index.html","hash":"1eb12352f4826ae2892e57e06817e0f9ac3e6766","modified":1594487466305},{"_id":"public/2020/01/25/整数的各位积和之差/index.html","hash":"5248bf2d8cc6c65490df41c9ae9ac78ba2cbfcfb","modified":1594487466305},{"_id":"public/2020/01/25/统计位数为偶数的数字/index.html","hash":"f830b78b700a35afead71dcf1b74a68c556b11a8","modified":1594487466305},{"_id":"public/2020/01/24/宝石与石头/index.html","hash":"fefbcbb15a21e8b6e8a6e6639ac9ed60f3434cf4","modified":1594487466305},{"_id":"public/2020/01/23/解压缩编码列表/index.html","hash":"42544291e682935c9d42edbdf99e70ae7933fa9a","modified":1594487466305},{"_id":"public/2020/01/20/postgresql/index.html","hash":"d859ea4cda857f0473069eab0a6007eeb1169f0c","modified":1594482249191},{"_id":"public/archives/page/3/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/archives/page/4/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/archives/2020/page/3/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/archives/2020/page/4/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/archives/2020/01/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/archives/2020/02/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/page/3/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/page/4/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"public/tags/leetcode/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594481503072},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1594482020424},{"_id":"themes/hexo-theme-matery/README.md","hash":"d9e06e2107775f29eca4593cb2c8b1bad9c737a8","modified":1594482020425},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1594482020424},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"02382d9214760b7bd7270efe0c25576e67c393a5","modified":1594482020425},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"0e1ef5ad1969eb23d75d4e4af01665d1e09716f8","modified":1594483349827},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1594482020425},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"41849f9300b8dc47048333fcf4a897dd8a2a13ca","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1594482020436},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"72fb5af3fc2f8955e2eb10926bbe4532a04ccd1b","modified":1594482020437},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"f5d6459bed0f4ecb214f2dbff5b2207a80c44f66","modified":1594482020437},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"a0de92ad49e2e660be040dde13fa1acb65beee9e","modified":1594482020437},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"22125624381b8d4dd50cb17ffe0631c838557364","modified":1594482020438},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1594482020438},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1594482020438},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1594482020439},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1594482020441},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"28617bf2a35a4269eba6df466acd174e416d2d1e","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1594482020426},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"4b5476478ba12183b7c97a33d5545fc53be362a8","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"8d263ebccccd0f9e69539f402955296de6f24a62","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1594482020427},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"dc3f8d9faee91ede001407e7cac96590973bc87a","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"5f09386aece8f9cf31f6059bbde79cd6c5171493","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1594482020428},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"ff3ceb93a03af5d9d120710347570ecaafc00979","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"d05926e79aa6dfc235193b9d8c6aa03118b0eade","modified":1594482020429},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"b39db4e38cf230a83e83dbbfae5560519f59abfa","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"2c454daf630a170f1dd7f2b42c3f3012f0c908e5","modified":1594482020430},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"0e4c0a6154aa34007849928ca88f05b6185b256e","modified":1594482020431},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1594482020432},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1594482020433},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1594482020433},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1594482020434},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"543d835c4c1c24fcac8f84ea094d8e82edeef526","modified":1594482020434},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1594482020435},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1594482020435},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1594482020435},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"8c6b13865ba94e76e247ef2979725d6150c18249","modified":1594482020439},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1594482020440},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"10577fbc30f241b126d1b51b1f56136ecba86b19","modified":1594482020440},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1594482020439},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1594482020441},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1594482020441},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1594482020499},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1594482020505},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1594482020520},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1594482020520},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1594482020442},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1594482020442},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1594482020442},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1594482020443},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1594482020471},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1594482020473},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1594482020472},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1594482020473},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1594482020473},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1594482020474},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1594482020480},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1594482020482},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1594482020483},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1594482020484},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1594482020483},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1594482020490},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1594482020496},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1594482020496},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1594482020506},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1594482020508},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1594482020511},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"37343e94598f988b227cc40690f3ebb5badad81a","modified":1594199066000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1594482020514},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1594482020515},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1594482020515},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"176c415bc7d0dcea6bdc9c955d82619cb2aa994e","modified":1567409026000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"9c4e5f31060a7ff7596001ff12aec1e5a67ba7ae","modified":1564560186000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1594482020518},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1594482020519},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"a64e0039aaf5631c7d44e4d92961421b58a61443","modified":1594484195191},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1594482020520},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1594482020443},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1594482020475},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1594482020483},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1594482020484},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1594482020497},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1594482020499},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1594482020501},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1594482020502},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"aa356beb4758cd97349e367e8804208ddc0f6270","modified":1594484767637},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"8d7f00070324f22f39e8416eb3b696dcd39e437a","modified":1594284502000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1594482020509},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1594482020509},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1594482020509},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1594482020511},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1594482020512},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1594482020513},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1594482020514},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"0f5eacc96a970f5438b424297131fab21971c299","modified":1516095280000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1594482020517},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1594482020519},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1594482020512},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1594482020453},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1594482020455},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1594482020456},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1594482020456},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1594482020482},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1594482020485},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1594482020485},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1594482020485},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1594482020486},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1594482020486},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1594482020486},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1594482020487},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1594482020491},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1594482020493},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1594482020494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1594482020495},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1594482020495},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1594482020496},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1594482020498},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1594482020500},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1594482020504},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1594482020505},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1594482020510},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1594482020444},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1594482020453},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1594482020453},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1594482020470},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1594482020471},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1594482020445},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1594482020455},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1594482020452},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1594482020458},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1594482020470},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1594482020503},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1594482020479},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1594482020451},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1594482020468},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1594482249191},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1594482249191},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1594482249191},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1594482249191},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1594482249191},{"_id":"public/medias/reward/wechat.png","hash":"a64e0039aaf5631c7d44e4d92961421b58a61443","modified":1594487466305},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1594482249191},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1594482249191},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1594482249191},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1594482249191},{"_id":"public/medias/featureimages/2.jpg","hash":"37343e94598f988b227cc40690f3ebb5badad81a","modified":1594487466305},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1594482249191},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1594482249191},{"_id":"public/medias/featureimages/3.jpg","hash":"176c415bc7d0dcea6bdc9c955d82619cb2aa994e","modified":1594487466305},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1594482249191},{"_id":"public/medias/featureimages/5.jpg","hash":"9c4e5f31060a7ff7596001ff12aec1e5a67ba7ae","modified":1594487466305},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1594482249191},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1594482249191},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1594482249191},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1594482249191},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1594482249191},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1594482249191},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1594482249191},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1594482249191},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1594482249191},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1594482249191},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1594482249191},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1594482249191},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1594482249191},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1594482249191},{"_id":"public/medias/featureimages/0.jpg","hash":"aa356beb4758cd97349e367e8804208ddc0f6270","modified":1594487466305},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1594482249191},{"_id":"public/medias/featureimages/1.jpg","hash":"8d7f00070324f22f39e8416eb3b696dcd39e437a","modified":1594487466305},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1594482249191},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1594482249191},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1594482249191},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1594482249191},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1594482249191},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1594482249191},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1594482249191},{"_id":"public/medias/featureimages/4.jpg","hash":"0f5eacc96a970f5438b424297131fab21971c299","modified":1594487466305},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1594482249191},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1594482249191},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1594482249191},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1594482249191},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1594482249191},{"_id":"public/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1594482249191},{"_id":"public/css/my.css","hash":"10577fbc30f241b126d1b51b1f56136ecba86b19","modified":1594482249191},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1594482249191},{"_id":"public/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1594482249191},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1594482249191},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1594482249191},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1594482249191},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1594482249191},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1594482249191},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1594482249191},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1594482249191},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1594482249191},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1594482249191},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1594482249191},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1594482249191},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1594482249191},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1594482249191},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1594482249191},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1594482249191},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1594482249191},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1594482249191},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1594482249191},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1594482249191},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1594482249191},{"_id":"public/css/matery.css","hash":"8c6b13865ba94e76e247ef2979725d6150c18249","modified":1594482249191},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1594482249191},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1594482249191},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1594482249191},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1594482249191},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1594482249191},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1594482249191},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1594482249191},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1594482249191},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1594482249191},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1594482249191},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1594482249191},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1594482249191},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1594482249191},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1594482249191},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1594482249191},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1594482249191},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1594482249191},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1594482249191},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1594482249191},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1594482249191},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1594482249191},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1594482249191},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1594482249191},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1594482249191},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1594482249191},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1594482249191},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1594482249191},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1594482249191},{"_id":"source/tags/index.md","hash":"746484b997d442b539d36dd3e9a7f36d1d39d390","modified":1594482956970},{"_id":"source/about/index.md","hash":"8c412ce41f88fadf0976a5ab148b56be69042845","modified":1594482846975},{"_id":"source/contact/index.md","hash":"543e39afa39588a1c4cec1a9060dcf19fb8f2c2d","modified":1594482833320},{"_id":"source/friends/index.md","hash":"3fe67c4861c7c1bccc9d7d7b0ebcca2139eacc1c","modified":1594482551772},{"_id":"source/404.md","hash":"f3af07fa14a0a9a4119ad2ab7637ecf23568f47a","modified":1594482803370},{"_id":"source/_data/friends.json","hash":"ada91858aaf140e69a0b8463d9a470b16a873554","modified":1594482742971},{"_id":"themes/hexo-theme-matery/source/.DS_Store","hash":"b1c7e3b9430c0cac2bcea6ed2c8a3dafecc87e59","modified":1594485050235},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1594482020520},{"_id":"public/contact/index.html","hash":"fa93fe738de48e6bd74db847f9db107f53128865","modified":1594487466305},{"_id":"public/404.html","hash":"c17c3d61438269499de9be76daeaa3c682e6b281","modified":1594487466305},{"_id":"public/about/index.html","hash":"bbdae78664f1a5d8a11ee620888531fcb37c6d19","modified":1594487466305},{"_id":"public/friends/index.html","hash":"86a465b2382143c0975787eb5ac358777fead990","modified":1594487466305},{"_id":"public/tags/index.html","hash":"8df33d9ef78f845c5815be1bbb183bd56f6c199a","modified":1594487466305},{"_id":"public/medias/reward/alipay.png","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1594487466305}],"Category":[],"Data":[{"_id":"friends","data":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}],"Page":[{"title":"tags","type":"tags","layout":"tags","date":"2020-07-11T15:46:30.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: \"tags\"\nlayout: \"tags\"\ndate: 2020-07-11 23:46:30\n---\n","updated":"2020-07-11T15:55:56.970Z","path":"tags/index.html","_id":"ckchtnads0000u5sl3gjl3z9l","comments":1,"content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"about","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ntype: \"about\"\nlayout: \"about\"\n---\n","date":"2020-07-11T15:54:06.975Z","updated":"2020-07-11T15:54:06.975Z","path":"about/index.html","_id":"ckchtne8r0001u5sl0zl1f36i","comments":1,"content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"contact","date":"2018-09-30T09:25:30.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2020-07-11T15:53:53.320Z","path":"contact/index.html","_id":"ckchtni9e0002u5sl26zj7l14","comments":1,"content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"friends","type":"friends","layout":"friends","date":"2020-07-11T15:46:44.000Z","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ntype: \"friends\"\nlayout: \"friends\"\ndate: 2020-07-11 23:46:44\n---\n","updated":"2020-07-11T15:49:11.772Z","path":"friends/index.html","_id":"ckchtnlem0003u5sl1cwa3wcl","comments":1,"content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""},{"title":"404","date":"2020-05-29T16:00:00.000Z","type":"404","layout":"404","description":"Cannot find the page you want :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2020-05-30 00:00:00\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Cannot find the page you want :(\"\n---","updated":"2020-07-11T15:53:23.370Z","path":"404.html","_id":"ckchtw1wq0004u5sl4d0b87t9","comments":1,"content":"","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":""}],"Post":[{"title":"netty","date":"2020-03-26T15:59:52.000Z","_content":"\n### 简介\n\n- 网络应用程序框架\n- 异步  时间驱动\n- 高性能  可维护\n- 服务端和客户端\n\nNetty is an asynchronous event-driven network application framework\nfor rapid development of maintainable high performance protocol servers & clients.\n\n\n\n\n","source":"_posts/netty.md","raw":"---\ntitle: netty\ntags: ['java']\ndate: 2020-03-26 23:59:52\n---\n\n### 简介\n\n- 网络应用程序框架\n- 异步  时间驱动\n- 高性能  可维护\n- 服务端和客户端\n\nNetty is an asynchronous event-driven network application framework\nfor rapid development of maintainable high performance protocol servers & clients.\n\n\n\n\n","slug":"netty","published":1,"updated":"2020-07-11T17:03:39.067Z","_id":"ckchuci1c0000q1sl1bxo6l1f","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><ul>\n<li>网络应用程序框架</li>\n<li>异步  时间驱动</li>\n<li>高性能  可维护</li>\n<li>服务端和客户端</li>\n</ul>\n<p>Netty is an asynchronous event-driven network application framework<br>for rapid development of maintainable high performance protocol servers &amp; clients.</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><ul>\n<li>网络应用程序框架</li>\n<li>异步  时间驱动</li>\n<li>高性能  可维护</li>\n<li>服务端和客户端</li>\n</ul>\n<p>Netty is an asynchronous event-driven network application framework<br>for rapid development of maintainable high performance protocol servers &amp; clients.</p>\n"},{"title":"Effective Java","date":"2020-06-07T15:11:51.000Z","_content":"\n## 创建和销毁对象\n\n### 静态工厂代替构造器\n\n**优势:**\n\n- 有名称。 相对于多个构造器多个参数而言好理解\n- 不必每次都创建新的对象\n\n```\npublic final class Boolean implements java.io.Serializable,\nComparable<Boolean>\n{\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code true}.\n*/\npublic static final Boolean TRUE = new Boolean(true);\n\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code false}.\n*/\npublic static final Boolean FALSE = new Boolean(false);\n\npublic static Boolean valueOf(boolean b) {\nreturn (b ? TRUE : FALSE);\n}\n}\n```\n\n\n\n\n\n","source":"_posts/Effective Java.md","raw":"---\ntitle: Effective Java\ntags: ['book']\ndate: 2020-06-07 23:11:51\n---\n\n## 创建和销毁对象\n\n### 静态工厂代替构造器\n\n**优势:**\n\n- 有名称。 相对于多个构造器多个参数而言好理解\n- 不必每次都创建新的对象\n\n```\npublic final class Boolean implements java.io.Serializable,\nComparable<Boolean>\n{\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code true}.\n*/\npublic static final Boolean TRUE = new Boolean(true);\n\n/**\n* The {@code Boolean} object corresponding to the primitive\n* value {@code false}.\n*/\npublic static final Boolean FALSE = new Boolean(false);\n\npublic static Boolean valueOf(boolean b) {\nreturn (b ? TRUE : FALSE);\n}\n}\n```\n\n\n\n\n\n","slug":"Effective Java","published":1,"updated":"2020-07-11T17:03:39.070Z","_id":"ckchuci1f0001q1sl6tvs8802","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"创建和销毁对象\"><a href=\"#创建和销毁对象\" class=\"headerlink\" title=\"创建和销毁对象\"></a>创建和销毁对象</h2><h3 id=\"静态工厂代替构造器\"><a href=\"#静态工厂代替构造器\" class=\"headerlink\" title=\"静态工厂代替构造器\"></a>静态工厂代替构造器</h3><p><strong>优势:</strong></p>\n<ul>\n<li>有名称。 相对于多个构造器多个参数而言好理解</li>\n<li>不必每次都创建新的对象</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public final class Boolean implements java.io.Serializable,</span><br><span class=\"line\">Comparable&lt;Boolean&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#x2F;**</span><br><span class=\"line\">* The &#123;@code Boolean&#125; object corresponding to the primitive</span><br><span class=\"line\">* value &#123;@code true&#125;.</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">public static final Boolean TRUE &#x3D; new Boolean(true);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;**</span><br><span class=\"line\">* The &#123;@code Boolean&#125; object corresponding to the primitive</span><br><span class=\"line\">* value &#123;@code false&#125;.</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">public static final Boolean FALSE &#x3D; new Boolean(false);</span><br><span class=\"line\"></span><br><span class=\"line\">public static Boolean valueOf(boolean b) &#123;</span><br><span class=\"line\">return (b ? TRUE : FALSE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h2 id=\"创建和销毁对象\"><a href=\"#创建和销毁对象\" class=\"headerlink\" title=\"创建和销毁对象\"></a>创建和销毁对象</h2><h3 id=\"静态工厂代替构造器\"><a href=\"#静态工厂代替构造器\" class=\"headerlink\" title=\"静态工厂代替构造器\"></a>静态工厂代替构造器</h3><p><strong>优势:</strong></p>\n<ul>\n<li>有名称。 相对于多个构造器多个参数而言好理解</li>\n<li>不必每次都创建新的对象</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public final class Boolean implements java.io.Serializable,</span><br><span class=\"line\">Comparable&lt;Boolean&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#x2F;**</span><br><span class=\"line\">* The &#123;@code Boolean&#125; object corresponding to the primitive</span><br><span class=\"line\">* value &#123;@code true&#125;.</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">public static final Boolean TRUE &#x3D; new Boolean(true);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;**</span><br><span class=\"line\">* The &#123;@code Boolean&#125; object corresponding to the primitive</span><br><span class=\"line\">* value &#123;@code false&#125;.</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">public static final Boolean FALSE &#x3D; new Boolean(false);</span><br><span class=\"line\"></span><br><span class=\"line\">public static Boolean valueOf(boolean b) &#123;</span><br><span class=\"line\">return (b ? TRUE : FALSE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"统计位数为偶数的数字","date":"2020-01-24T22:40:17.000Z","_content":"\n\nhttps://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\n\n给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。\n\n\n\n示例 1：\n\n输入：nums = [12,345,2,6,7896]\n输出：2\n解释：\n12 是 2 位数字（位数为偶数）\n345 是 3 位数字（位数为奇数）\n2 是 1 位数字（位数为奇数）\n6 是 1 位数字 位数为奇数）\n7896 是 4 位数字（位数为偶数）\n因此只有 12 和 7896 是位数为偶数的数字\n示例 2：\n\n输入：nums = [555,901,482,1771]\n输出：1\n解释：\n只有 1771 是位数为偶数的数字。\n\n\n提示：\n\n1 <= nums.length <= 500\n1 <= nums[i] <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png)\n\n```\npublic int findNumbers(int[] nums) {\nint result = 0;\nfor (int num : nums) {\nint count = 1;\nwhile (true) {\nint x = num / 10;\nif (x != 0) {\nnum = x;\ncount++;\n} else {\nbreak;\n}\n}\nif (count % 2 == 0) {\nresult++;\n}\n}\nreturn result;\n}\n```\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png)\n\n```\npublic int findNumbers(int[] nums) {\nint count = 0;\nfor (int num : nums) {\nif (String.valueOf(num).length() % 2 == 0) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n### 总结\n\n1. 判断一个数有多少位数\n2. 判断一个数是奇数还是偶数\n\n\n","source":"_posts/统计位数为偶数的数字.md","raw":"---\ntitle: 统计位数为偶数的数字\ntags: ['leetcode']\ndate: 2020-01-25 06:40:17\n---\n\n\nhttps://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\n\n给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。\n\n\n\n示例 1：\n\n输入：nums = [12,345,2,6,7896]\n输出：2\n解释：\n12 是 2 位数字（位数为偶数）\n345 是 3 位数字（位数为奇数）\n2 是 1 位数字（位数为奇数）\n6 是 1 位数字 位数为奇数）\n7896 是 4 位数字（位数为偶数）\n因此只有 12 和 7896 是位数为偶数的数字\n示例 2：\n\n输入：nums = [555,901,482,1771]\n输出：1\n解释：\n只有 1771 是位数为偶数的数字。\n\n\n提示：\n\n1 <= nums.length <= 500\n1 <= nums[i] <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png)\n\n```\npublic int findNumbers(int[] nums) {\nint result = 0;\nfor (int num : nums) {\nint count = 1;\nwhile (true) {\nint x = num / 10;\nif (x != 0) {\nnum = x;\ncount++;\n} else {\nbreak;\n}\n}\nif (count % 2 == 0) {\nresult++;\n}\n}\nreturn result;\n}\n```\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png)\n\n```\npublic int findNumbers(int[] nums) {\nint count = 0;\nfor (int num : nums) {\nif (String.valueOf(num).length() % 2 == 0) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n### 总结\n\n1. 判断一个数有多少位数\n2. 判断一个数是奇数还是偶数\n\n\n","slug":"统计位数为偶数的数字","published":1,"updated":"2020-07-11T17:11:05.747Z","_id":"ckchuci1h0003q1slfj7yb7x0","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/</a></p>\n<p>给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。</p>\n<p>示例 1：</p>\n<p>输入：nums = [12,345,2,6,7896]<br>输出：2<br>解释：<br>12 是 2 位数字（位数为偶数）<br>345 是 3 位数字（位数为奇数）<br>2 是 1 位数字（位数为奇数）<br>6 是 1 位数字 位数为奇数）<br>7896 是 4 位数字（位数为偶数）<br>因此只有 12 和 7896 是位数为偶数的数字<br>示例 2：</p>\n<p>输入：nums = [555,901,482,1771]<br>输出：1<br>解释：<br>只有 1771 是位数为偶数的数字。</p>\n<p>提示：</p>\n<p>1 &lt;= nums.length &lt;= 500<br>1 &lt;= nums[i] &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int findNumbers(int[] nums) &#123;</span><br><span class=\"line\">int result &#x3D; 0;</span><br><span class=\"line\">for (int num : nums) &#123;</span><br><span class=\"line\">int count &#x3D; 1;</span><br><span class=\"line\">while (true) &#123;</span><br><span class=\"line\">int x &#x3D; num &#x2F; 10;</span><br><span class=\"line\">if (x !&#x3D; 0) &#123;</span><br><span class=\"line\">num &#x3D; x;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (count % 2 &#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">result++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int findNumbers(int[] nums) &#123;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (int num : nums) &#123;</span><br><span class=\"line\">if (String.valueOf(num).length() % 2 &#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>判断一个数有多少位数</li>\n<li>判断一个数是奇数还是偶数</li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/</a></p>\n<p>给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。</p>\n<p>示例 1：</p>\n<p>输入：nums = [12,345,2,6,7896]<br>输出：2<br>解释：<br>12 是 2 位数字（位数为偶数）<br>345 是 3 位数字（位数为奇数）<br>2 是 1 位数字（位数为奇数）<br>6 是 1 位数字 位数为奇数）<br>7896 是 4 位数字（位数为偶数）<br>因此只有 12 和 7896 是位数为偶数的数字<br>示例 2：</p>\n<p>输入：nums = [555,901,482,1771]<br>输出：1<br>解释：<br>只有 1771 是位数为偶数的数字。</p>\n<p>提示：</p>\n<p>1 &lt;= nums.length &lt;= 500<br>1 &lt;= nums[i] &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int findNumbers(int[] nums) &#123;</span><br><span class=\"line\">int result &#x3D; 0;</span><br><span class=\"line\">for (int num : nums) &#123;</span><br><span class=\"line\">int count &#x3D; 1;</span><br><span class=\"line\">while (true) &#123;</span><br><span class=\"line\">int x &#x3D; num &#x2F; 10;</span><br><span class=\"line\">if (x !&#x3D; 0) &#123;</span><br><span class=\"line\">num &#x3D; x;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (count % 2 &#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">result++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int findNumbers(int[] nums) &#123;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (int num : nums) &#123;</span><br><span class=\"line\">if (String.valueOf(num).length() % 2 &#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>判断一个数有多少位数</li>\n<li>判断一个数是奇数还是偶数</li>\n</ol>\n"},{"title":"整数的各位积和之差","date":"2020-01-25T05:27:19.000Z","_content":"\nhttps://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\n\n\n给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。\n\n\n\n示例 1：\n\n输入：n = 234\n输出：15\n解释：\n各位数之积 = 2 * 3 * 4 = 24\n各位数之和 = 2 + 3 + 4 = 9\n结果 = 24 - 9 = 15\n示例 2：\n\n输入：n = 4421\n输出：21\n解释：\n各位数之积 = 4 * 4 * 2 * 1 = 32\n各位数之和 = 4 + 4 + 2 + 1 = 11\n结果 = 32 - 11 = 21\n\n\n提示：\n\n1 <= n <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png)\n\n\n```\npublic int subtractProductAndSum(int n) {\nint sum = 0;\nint product = 1;\nwhile (true) {\nif (n / 10 != 0) {\nint y = n % 10;\nsum = sum + y;\nproduct = product * y;\nn = (n - y) / 10;\n} else {\nbreak;\n}\n}\nreturn product * n - (sum + n);\n}\n```\n\n\n\n\n\n\n","source":"_posts/整数的各位积和之差.md","raw":"---\ntitle: 整数的各位积和之差\ntags: ['leetcode']\ndate: 2020-01-25 13:27:19\n---\n\nhttps://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\n\n\n给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。\n\n\n\n示例 1：\n\n输入：n = 234\n输出：15\n解释：\n各位数之积 = 2 * 3 * 4 = 24\n各位数之和 = 2 + 3 + 4 = 9\n结果 = 24 - 9 = 15\n示例 2：\n\n输入：n = 4421\n输出：21\n解释：\n各位数之积 = 4 * 4 * 2 * 1 = 32\n各位数之和 = 4 + 4 + 2 + 1 = 11\n结果 = 32 - 11 = 21\n\n\n提示：\n\n1 <= n <= 10^5\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n\n### java\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png)\n\n\n```\npublic int subtractProductAndSum(int n) {\nint sum = 0;\nint product = 1;\nwhile (true) {\nif (n / 10 != 0) {\nint y = n % 10;\nsum = sum + y;\nproduct = product * y;\nn = (n - y) / 10;\n} else {\nbreak;\n}\n}\nreturn product * n - (sum + n);\n}\n```\n\n\n\n\n\n\n","slug":"整数的各位积和之差","published":1,"updated":"2020-07-11T17:03:39.074Z","_id":"ckchuci1i0005q1slbzvi8wul","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/</a></p>\n<p>给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。</p>\n<p>示例 1：</p>\n<p>输入：n = 234<br>输出：15<br>解释：<br>各位数之积 = 2 * 3 * 4 = 24<br>各位数之和 = 2 + 3 + 4 = 9<br>结果 = 24 - 9 = 15<br>示例 2：</p>\n<p>输入：n = 4421<br>输出：21<br>解释：<br>各位数之积 = 4 * 4 * 2 * 1 = 32<br>各位数之和 = 4 + 4 + 2 + 1 = 11<br>结果 = 32 - 11 = 21</p>\n<p>提示：</p>\n<p>1 &lt;= n &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int subtractProductAndSum(int n) &#123;</span><br><span class=\"line\">int sum &#x3D; 0;</span><br><span class=\"line\">int product &#x3D; 1;</span><br><span class=\"line\">while (true) &#123;</span><br><span class=\"line\">if (n &#x2F; 10 !&#x3D; 0) &#123;</span><br><span class=\"line\">int y &#x3D; n % 10;</span><br><span class=\"line\">sum &#x3D; sum + y;</span><br><span class=\"line\">product &#x3D; product * y;</span><br><span class=\"line\">n &#x3D; (n - y) &#x2F; 10;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return product * n - (sum + n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/</a></p>\n<p>给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。</p>\n<p>示例 1：</p>\n<p>输入：n = 234<br>输出：15<br>解释：<br>各位数之积 = 2 * 3 * 4 = 24<br>各位数之和 = 2 + 3 + 4 = 9<br>结果 = 24 - 9 = 15<br>示例 2：</p>\n<p>输入：n = 4421<br>输出：21<br>解释：<br>各位数之积 = 4 * 4 * 2 * 1 = 32<br>各位数之和 = 4 + 4 + 2 + 1 = 11<br>结果 = 32 - 11 = 21</p>\n<p>提示：</p>\n<p>1 &lt;= n &lt;= 10^5</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125214830.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int subtractProductAndSum(int n) &#123;</span><br><span class=\"line\">int sum &#x3D; 0;</span><br><span class=\"line\">int product &#x3D; 1;</span><br><span class=\"line\">while (true) &#123;</span><br><span class=\"line\">if (n &#x2F; 10 !&#x3D; 0) &#123;</span><br><span class=\"line\">int y &#x3D; n % 10;</span><br><span class=\"line\">sum &#x3D; sum + y;</span><br><span class=\"line\">product &#x3D; product * y;</span><br><span class=\"line\">n &#x3D; (n - y) &#x2F; 10;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return product * n - (sum + n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n"},{"title":"oauth2","date":"2020-02-13T03:39:02.000Z","_content":"\n[OAuth2 Boot 官方文档](https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/)\n\n> 记录  mysql + oauth2 + springboot\n\n\n[数据库表说明(oauth.ddl)](http://andaily.com/spring-oauth-server/db_table_description.html)\n\n[sql](https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl)\n\n\n### Authorization Server\n\n\n### Resource Server\n\n\n### User\n\n\n\n\n### create token\n\n\norg.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken\n\n\n\n\n\n\n\n","source":"_posts/oauth2.md","raw":"---\ntitle: oauth2\ntags: ['java']\ndate: 2020-02-13 11:39:02\n---\n\n[OAuth2 Boot 官方文档](https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/)\n\n> 记录  mysql + oauth2 + springboot\n\n\n[数据库表说明(oauth.ddl)](http://andaily.com/spring-oauth-server/db_table_description.html)\n\n[sql](https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl)\n\n\n### Authorization Server\n\n\n### Resource Server\n\n\n### User\n\n\n\n\n### create token\n\n\norg.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken\n\n\n\n\n\n\n\n","slug":"oauth2","published":1,"updated":"2020-07-11T17:03:39.075Z","_id":"ckchuci1x0007q1sl6fmq6ca0","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/\" target=\"_blank\" rel=\"noopener\">OAuth2 Boot 官方文档</a></p>\n<blockquote>\n<p>记录  mysql + oauth2 + springboot</p>\n</blockquote>\n<p><a href=\"http://andaily.com/spring-oauth-server/db_table_description.html\" target=\"_blank\" rel=\"noopener\">数据库表说明(oauth.ddl)</a></p>\n<p><a href=\"https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl\" target=\"_blank\" rel=\"noopener\">sql</a></p>\n<h3 id=\"Authorization-Server\"><a href=\"#Authorization-Server\" class=\"headerlink\" title=\"Authorization Server\"></a>Authorization Server</h3><h3 id=\"Resource-Server\"><a href=\"#Resource-Server\" class=\"headerlink\" title=\"Resource Server\"></a>Resource Server</h3><h3 id=\"User\"><a href=\"#User\" class=\"headerlink\" title=\"User\"></a>User</h3><h3 id=\"create-token\"><a href=\"#create-token\" class=\"headerlink\" title=\"create token\"></a>create token</h3><p>org.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/\" target=\"_blank\" rel=\"noopener\">OAuth2 Boot 官方文档</a></p>\n<blockquote>\n<p>记录  mysql + oauth2 + springboot</p>\n</blockquote>\n<p><a href=\"http://andaily.com/spring-oauth-server/db_table_description.html\" target=\"_blank\" rel=\"noopener\">数据库表说明(oauth.ddl)</a></p>\n<p><a href=\"https://gitee.com/shengzhao/spring-oauth-server/blob/config/others/database/oauth.ddl\" target=\"_blank\" rel=\"noopener\">sql</a></p>\n<h3 id=\"Authorization-Server\"><a href=\"#Authorization-Server\" class=\"headerlink\" title=\"Authorization Server\"></a>Authorization Server</h3><h3 id=\"Resource-Server\"><a href=\"#Resource-Server\" class=\"headerlink\" title=\"Resource Server\"></a>Resource Server</h3><h3 id=\"User\"><a href=\"#User\" class=\"headerlink\" title=\"User\"></a>User</h3><h3 id=\"create-token\"><a href=\"#create-token\" class=\"headerlink\" title=\"create token\"></a>create token</h3><p>org.springframework.security.oauth2.provider.token.DefaultTokenServices#createAccessToken</p>\n"},{"title":"idea","date":"2020-02-26T18:49:48.000Z","_content":"\n### 打开多个窗口设置\n\n有时候手贱，根据提示，关闭了。再打开！\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png)\n\n\n\n","source":"_posts/idea.md","raw":"---\ntitle: idea\ntags: ['tools']\ndate: 2020-02-27 02:49:48\n---\n\n### 打开多个窗口设置\n\n有时候手贱，根据提示，关闭了。再打开！\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png)\n\n\n\n","slug":"idea","published":1,"updated":"2020-07-11T17:03:39.076Z","_id":"ckchuci1y0009q1sl69peg12t","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"打开多个窗口设置\"><a href=\"#打开多个窗口设置\" class=\"headerlink\" title=\"打开多个窗口设置\"></a>打开多个窗口设置</h3><p>有时候手贱，根据提示，关闭了。再打开！</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png\" alt=\"\"></p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h3 id=\"打开多个窗口设置\"><a href=\"#打开多个窗口设置\" class=\"headerlink\" title=\"打开多个窗口设置\"></a>打开多个窗口设置</h3><p>有时候手贱，根据提示，关闭了。再打开！</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200227105052.png\" alt=\"\"></p>\n"},{"title":"层数最深叶子节点的和","date":"2020-01-25T21:13:40.000Z","_content":"\n\nhttps://leetcode-cn.com/problems/deepest-leaves-sum/\n\n\n给你一棵二叉树，请你返回层数最深的叶子节点的和。\n\n![1483_ex1.png](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png)\n\n```\n输入：root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\n输出：15\n```\n\n\n### java\n\n看了一遍递归，但是还是没思路😑最后参考的。。。\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png)\n\n\n```\npublic class DeepestLeavesSum {\n\n\npublic static void main(String[] args) {\nDeepestLeavesSum deepestLeavesSum = new DeepestLeavesSum();\nSystem.out.println(deepestLeavesSum.deepestLeavesSum(deepestLeavesSum.buildData()));\n}\n\npublic int deepestLeavesSum(TreeNode root) {\nreturn dfs(root, 1, getMaxDeep(root));\n}\n\npublic TreeNode buildData() {\nTreeNode root = new TreeNode(1);\n\nTreeNode l4 = new TreeNode(4);\nl4.left = new TreeNode(7);\n\nTreeNode l2 = new TreeNode(2);\nl2.left = l4;\nl2.right = new TreeNode(5);\n\nTreeNode r3 = new TreeNode(3);\nTreeNode r6 = new TreeNode(6);\nTreeNode r8 = new TreeNode(8);\nr3.right = r6;\nr6.right = r8;\n\nroot.left = l2;\nroot.right = r3;\n\nreturn root;\n}\n\n\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n}\n\n```\n","source":"_posts/层数最深叶子节点的和.md","raw":"---\ntitle: 层数最深叶子节点的和\ntags: ['leetcode']\ndate: 2020-01-26 05:13:40\n---\n\n\nhttps://leetcode-cn.com/problems/deepest-leaves-sum/\n\n\n给你一棵二叉树，请你返回层数最深的叶子节点的和。\n\n![1483_ex1.png](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png)\n\n```\n输入：root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\n输出：15\n```\n\n\n### java\n\n看了一遍递归，但是还是没思路😑最后参考的。。。\n\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png)\n\n\n```\npublic class DeepestLeavesSum {\n\n\npublic static void main(String[] args) {\nDeepestLeavesSum deepestLeavesSum = new DeepestLeavesSum();\nSystem.out.println(deepestLeavesSum.deepestLeavesSum(deepestLeavesSum.buildData()));\n}\n\npublic int deepestLeavesSum(TreeNode root) {\nreturn dfs(root, 1, getMaxDeep(root));\n}\n\npublic TreeNode buildData() {\nTreeNode root = new TreeNode(1);\n\nTreeNode l4 = new TreeNode(4);\nl4.left = new TreeNode(7);\n\nTreeNode l2 = new TreeNode(2);\nl2.left = l4;\nl2.right = new TreeNode(5);\n\nTreeNode r3 = new TreeNode(3);\nTreeNode r6 = new TreeNode(6);\nTreeNode r8 = new TreeNode(8);\nr3.right = r6;\nr6.right = r8;\n\nroot.left = l2;\nroot.right = r3;\n\nreturn root;\n}\n\n\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n}\n\n```\n","slug":"层数最深叶子节点的和","published":1,"updated":"2020-07-11T17:03:39.076Z","_id":"ckchuci1z000bq1slaq279yqb","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://leetcode-cn.com/problems/deepest-leaves-sum/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/deepest-leaves-sum/</a></p>\n<p>给你一棵二叉树，请你返回层数最深的叶子节点的和。</p>\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png\" alt=\"1483_ex1.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：root &#x3D; [1,2,3,4,5,null,6,7,null,null,null,null,8]</span><br><span class=\"line\">输出：15</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p>看了一遍递归，但是还是没思路😑最后参考的。。。</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class DeepestLeavesSum &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">DeepestLeavesSum deepestLeavesSum &#x3D; new DeepestLeavesSum();</span><br><span class=\"line\">System.out.println(deepestLeavesSum.deepestLeavesSum(deepestLeavesSum.buildData()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public int deepestLeavesSum(TreeNode root) &#123;</span><br><span class=\"line\">return dfs(root, 1, getMaxDeep(root));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public TreeNode buildData() &#123;</span><br><span class=\"line\">TreeNode root &#x3D; new TreeNode(1);</span><br><span class=\"line\"></span><br><span class=\"line\">TreeNode l4 &#x3D; new TreeNode(4);</span><br><span class=\"line\">l4.left &#x3D; new TreeNode(7);</span><br><span class=\"line\"></span><br><span class=\"line\">TreeNode l2 &#x3D; new TreeNode(2);</span><br><span class=\"line\">l2.left &#x3D; l4;</span><br><span class=\"line\">l2.right &#x3D; new TreeNode(5);</span><br><span class=\"line\"></span><br><span class=\"line\">TreeNode r3 &#x3D; new TreeNode(3);</span><br><span class=\"line\">TreeNode r6 &#x3D; new TreeNode(6);</span><br><span class=\"line\">TreeNode r8 &#x3D; new TreeNode(8);</span><br><span class=\"line\">r3.right &#x3D; r6;</span><br><span class=\"line\">r6.right &#x3D; r8;</span><br><span class=\"line\"></span><br><span class=\"line\">root.left &#x3D; l2;</span><br><span class=\"line\">root.right &#x3D; r3;</span><br><span class=\"line\"></span><br><span class=\"line\">return root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public int dfs(TreeNode treeNode, int currentH, int h) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (currentH &#x3D;&#x3D; h) &#123;</span><br><span class=\"line\">return treeNode.val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public int getMaxDeep(TreeNode treeNode) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int left &#x3D; getMaxDeep(treeNode.left);</span><br><span class=\"line\">int right &#x3D; getMaxDeep(treeNode.right);</span><br><span class=\"line\">return Math.max(left, right) + 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/deepest-leaves-sum/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/deepest-leaves-sum/</a></p>\n<p>给你一棵二叉树，请你返回层数最深的叶子节点的和。</p>\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/12/28/1483_ex1.png\" alt=\"1483_ex1.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：root &#x3D; [1,2,3,4,5,null,6,7,null,null,null,null,8]</span><br><span class=\"line\">输出：15</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p>看了一遍递归，但是还是没思路😑最后参考的。。。</p>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200126211053.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class DeepestLeavesSum &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">DeepestLeavesSum deepestLeavesSum &#x3D; new DeepestLeavesSum();</span><br><span class=\"line\">System.out.println(deepestLeavesSum.deepestLeavesSum(deepestLeavesSum.buildData()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public int deepestLeavesSum(TreeNode root) &#123;</span><br><span class=\"line\">return dfs(root, 1, getMaxDeep(root));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public TreeNode buildData() &#123;</span><br><span class=\"line\">TreeNode root &#x3D; new TreeNode(1);</span><br><span class=\"line\"></span><br><span class=\"line\">TreeNode l4 &#x3D; new TreeNode(4);</span><br><span class=\"line\">l4.left &#x3D; new TreeNode(7);</span><br><span class=\"line\"></span><br><span class=\"line\">TreeNode l2 &#x3D; new TreeNode(2);</span><br><span class=\"line\">l2.left &#x3D; l4;</span><br><span class=\"line\">l2.right &#x3D; new TreeNode(5);</span><br><span class=\"line\"></span><br><span class=\"line\">TreeNode r3 &#x3D; new TreeNode(3);</span><br><span class=\"line\">TreeNode r6 &#x3D; new TreeNode(6);</span><br><span class=\"line\">TreeNode r8 &#x3D; new TreeNode(8);</span><br><span class=\"line\">r3.right &#x3D; r6;</span><br><span class=\"line\">r6.right &#x3D; r8;</span><br><span class=\"line\"></span><br><span class=\"line\">root.left &#x3D; l2;</span><br><span class=\"line\">root.right &#x3D; r3;</span><br><span class=\"line\"></span><br><span class=\"line\">return root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public int dfs(TreeNode treeNode, int currentH, int h) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (currentH &#x3D;&#x3D; h) &#123;</span><br><span class=\"line\">return treeNode.val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public int getMaxDeep(TreeNode treeNode) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int left &#x3D; getMaxDeep(treeNode.left);</span><br><span class=\"line\">int right &#x3D; getMaxDeep(treeNode.right);</span><br><span class=\"line\">return Math.max(left, right) + 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"xpath","date":"2020-02-13T23:07:43.000Z","_content":"\n\n### 取前几个\n\nposition()<=n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[position()<=2]\n```\n\n### 取最后一个\n\nlast()\n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()]\n```\n\n类似\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()-1]\n//dl[@class=\"collateral-tabs\"]//dd[last()-2]\n```\n\n### and\n\n```\n<script type=\"text/javascript\">\nvar defaultPageData = {\"page\":{\"country\":\"CN\",\"language\":\"EN\",\"designer\":\"\",\"section\":\"handbags\",\"categories\":[\"handbags\",\"newarrivals\"],\"type\":\"product detail\"},\"products\":[],\"site\":{\"name\":\"saks.com\",\"is_mobile\":\"false\",\"is_production\":\"true\"},\"visitor\":{\"account_id\":\"\",\"currency_code\":\"CNY\",\"email_address\":\"\",\"logged_in\":\"false\",\"loyalty_id\":\"\",\"personalization_id\":\"\",\"session_id\":\"1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh\"}};\nvar visitorData = defaultPageData.visitor || { currency_code : ''};\n\ndefaultPageData.visitor = {\naccount_id: getCookie('AccountId') || '',\ncurrency_code: getCookie('E4X_CURRENCY') || visitorData.currency_code,\nemail_address: getCookie('UserName') || '',\nlogged_in: getCookie('AccountId') ? 'logged in' : 'logged out',\nloyalty_id: getCookie('Loyalty_id') || '',\npersonalization_id: getCookie('saksAnonymousId') || '',\nsession_id: getCookie('sessionID') || '',\nmd5_email_address: getCookie('md5_email_address') || '',\nsha256_email_address: getCookie('sha256_email_address') || ''\n};\n</script>\n```\n\n\n定位到当前的 script\n\n```\n//script[@type=\"text/javascript\" and contains(.,'var defaultPageData =')]\n\n转为 xpath:\nresponse.xpath('//script[@type=\"text/javascript\" and contains(.,\"var defaultPageData =\")]').extract()\n```\n\n\n\n","source":"_posts/xpath.md","raw":"---\ntitle: xpath\ntags: ['scrapy']\ndate: 2020-02-14 07:07:43\n---\n\n\n### 取前几个\n\nposition()<=n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[position()<=2]\n```\n\n### 取最后一个\n\nlast()\n\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()]\n```\n\n类似\n\n```\n//dl[@class=\"collateral-tabs\"]//dd[last()-1]\n//dl[@class=\"collateral-tabs\"]//dd[last()-2]\n```\n\n### and\n\n```\n<script type=\"text/javascript\">\nvar defaultPageData = {\"page\":{\"country\":\"CN\",\"language\":\"EN\",\"designer\":\"\",\"section\":\"handbags\",\"categories\":[\"handbags\",\"newarrivals\"],\"type\":\"product detail\"},\"products\":[],\"site\":{\"name\":\"saks.com\",\"is_mobile\":\"false\",\"is_production\":\"true\"},\"visitor\":{\"account_id\":\"\",\"currency_code\":\"CNY\",\"email_address\":\"\",\"logged_in\":\"false\",\"loyalty_id\":\"\",\"personalization_id\":\"\",\"session_id\":\"1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh\"}};\nvar visitorData = defaultPageData.visitor || { currency_code : ''};\n\ndefaultPageData.visitor = {\naccount_id: getCookie('AccountId') || '',\ncurrency_code: getCookie('E4X_CURRENCY') || visitorData.currency_code,\nemail_address: getCookie('UserName') || '',\nlogged_in: getCookie('AccountId') ? 'logged in' : 'logged out',\nloyalty_id: getCookie('Loyalty_id') || '',\npersonalization_id: getCookie('saksAnonymousId') || '',\nsession_id: getCookie('sessionID') || '',\nmd5_email_address: getCookie('md5_email_address') || '',\nsha256_email_address: getCookie('sha256_email_address') || ''\n};\n</script>\n```\n\n\n定位到当前的 script\n\n```\n//script[@type=\"text/javascript\" and contains(.,'var defaultPageData =')]\n\n转为 xpath:\nresponse.xpath('//script[@type=\"text/javascript\" and contains(.,\"var defaultPageData =\")]').extract()\n```\n\n\n\n","slug":"xpath","published":1,"updated":"2020-07-11T17:03:39.078Z","_id":"ckchuci20000dq1sl2qgi22px","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"取前几个\"><a href=\"#取前几个\" class=\"headerlink\" title=\"取前几个\"></a>取前几个</h3><p>position()&lt;=n</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[position()&lt;&#x3D;2]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取最后一个\"><a href=\"#取最后一个\" class=\"headerlink\" title=\"取最后一个\"></a>取最后一个</h3><p>last()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[last()]</span><br></pre></td></tr></table></figure>\n\n<p>类似</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[last()-1]</span><br><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[last()-2]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"and\"><a href=\"#and\" class=\"headerlink\" title=\"and\"></a>and</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class=\"line\">var defaultPageData &#x3D; &#123;&quot;page&quot;:&#123;&quot;country&quot;:&quot;CN&quot;,&quot;language&quot;:&quot;EN&quot;,&quot;designer&quot;:&quot;&quot;,&quot;section&quot;:&quot;handbags&quot;,&quot;categories&quot;:[&quot;handbags&quot;,&quot;newarrivals&quot;],&quot;type&quot;:&quot;product detail&quot;&#125;,&quot;products&quot;:[],&quot;site&quot;:&#123;&quot;name&quot;:&quot;saks.com&quot;,&quot;is_mobile&quot;:&quot;false&quot;,&quot;is_production&quot;:&quot;true&quot;&#125;,&quot;visitor&quot;:&#123;&quot;account_id&quot;:&quot;&quot;,&quot;currency_code&quot;:&quot;CNY&quot;,&quot;email_address&quot;:&quot;&quot;,&quot;logged_in&quot;:&quot;false&quot;,&quot;loyalty_id&quot;:&quot;&quot;,&quot;personalization_id&quot;:&quot;&quot;,&quot;session_id&quot;:&quot;1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh&quot;&#125;&#125;;</span><br><span class=\"line\">var visitorData &#x3D; defaultPageData.visitor || &#123; currency_code : &#39;&#39;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">defaultPageData.visitor &#x3D; &#123;</span><br><span class=\"line\">account_id: getCookie(&#39;AccountId&#39;) || &#39;&#39;,</span><br><span class=\"line\">currency_code: getCookie(&#39;E4X_CURRENCY&#39;) || visitorData.currency_code,</span><br><span class=\"line\">email_address: getCookie(&#39;UserName&#39;) || &#39;&#39;,</span><br><span class=\"line\">logged_in: getCookie(&#39;AccountId&#39;) ? &#39;logged in&#39; : &#39;logged out&#39;,</span><br><span class=\"line\">loyalty_id: getCookie(&#39;Loyalty_id&#39;) || &#39;&#39;,</span><br><span class=\"line\">personalization_id: getCookie(&#39;saksAnonymousId&#39;) || &#39;&#39;,</span><br><span class=\"line\">session_id: getCookie(&#39;sessionID&#39;) || &#39;&#39;,</span><br><span class=\"line\">md5_email_address: getCookie(&#39;md5_email_address&#39;) || &#39;&#39;,</span><br><span class=\"line\">sha256_email_address: getCookie(&#39;sha256_email_address&#39;) || &#39;&#39;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p>定位到当前的 script</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;script[@type&#x3D;&quot;text&#x2F;javascript&quot; and contains(.,&#39;var defaultPageData &#x3D;&#39;)]</span><br><span class=\"line\"></span><br><span class=\"line\">转为 xpath:</span><br><span class=\"line\">response.xpath(&#39;&#x2F;&#x2F;script[@type&#x3D;&quot;text&#x2F;javascript&quot; and contains(.,&quot;var defaultPageData &#x3D;&quot;)]&#39;).extract()</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<h3 id=\"取前几个\"><a href=\"#取前几个\" class=\"headerlink\" title=\"取前几个\"></a>取前几个</h3><p>position()&lt;=n</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[position()&lt;&#x3D;2]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取最后一个\"><a href=\"#取最后一个\" class=\"headerlink\" title=\"取最后一个\"></a>取最后一个</h3><p>last()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[last()]</span><br></pre></td></tr></table></figure>\n\n<p>类似</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[last()-1]</span><br><span class=\"line\">&#x2F;&#x2F;dl[@class&#x3D;&quot;collateral-tabs&quot;]&#x2F;&#x2F;dd[last()-2]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"and\"><a href=\"#and\" class=\"headerlink\" title=\"and\"></a>and</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class=\"line\">var defaultPageData &#x3D; &#123;&quot;page&quot;:&#123;&quot;country&quot;:&quot;CN&quot;,&quot;language&quot;:&quot;EN&quot;,&quot;designer&quot;:&quot;&quot;,&quot;section&quot;:&quot;handbags&quot;,&quot;categories&quot;:[&quot;handbags&quot;,&quot;newarrivals&quot;],&quot;type&quot;:&quot;product detail&quot;&#125;,&quot;products&quot;:[],&quot;site&quot;:&#123;&quot;name&quot;:&quot;saks.com&quot;,&quot;is_mobile&quot;:&quot;false&quot;,&quot;is_production&quot;:&quot;true&quot;&#125;,&quot;visitor&quot;:&#123;&quot;account_id&quot;:&quot;&quot;,&quot;currency_code&quot;:&quot;CNY&quot;,&quot;email_address&quot;:&quot;&quot;,&quot;logged_in&quot;:&quot;false&quot;,&quot;loyalty_id&quot;:&quot;&quot;,&quot;personalization_id&quot;:&quot;&quot;,&quot;session_id&quot;:&quot;1582602692332npPo069Ct-CuwJ1UDfsMFbHsp51u4xaVonbVTxEtyHNpF4tcTwZskHAh&quot;&#125;&#125;;</span><br><span class=\"line\">var visitorData &#x3D; defaultPageData.visitor || &#123; currency_code : &#39;&#39;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">defaultPageData.visitor &#x3D; &#123;</span><br><span class=\"line\">account_id: getCookie(&#39;AccountId&#39;) || &#39;&#39;,</span><br><span class=\"line\">currency_code: getCookie(&#39;E4X_CURRENCY&#39;) || visitorData.currency_code,</span><br><span class=\"line\">email_address: getCookie(&#39;UserName&#39;) || &#39;&#39;,</span><br><span class=\"line\">logged_in: getCookie(&#39;AccountId&#39;) ? &#39;logged in&#39; : &#39;logged out&#39;,</span><br><span class=\"line\">loyalty_id: getCookie(&#39;Loyalty_id&#39;) || &#39;&#39;,</span><br><span class=\"line\">personalization_id: getCookie(&#39;saksAnonymousId&#39;) || &#39;&#39;,</span><br><span class=\"line\">session_id: getCookie(&#39;sessionID&#39;) || &#39;&#39;,</span><br><span class=\"line\">md5_email_address: getCookie(&#39;md5_email_address&#39;) || &#39;&#39;,</span><br><span class=\"line\">sha256_email_address: getCookie(&#39;sha256_email_address&#39;) || &#39;&#39;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p>定位到当前的 script</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;script[@type&#x3D;&quot;text&#x2F;javascript&quot; and contains(.,&#39;var defaultPageData &#x3D;&#39;)]</span><br><span class=\"line\"></span><br><span class=\"line\">转为 xpath:</span><br><span class=\"line\">response.xpath(&#39;&#x2F;&#x2F;script[@type&#x3D;&quot;text&#x2F;javascript&quot; and contains(.,&quot;var defaultPageData &#x3D;&quot;)]&#39;).extract()</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"vim","date":"2020-02-25T16:45:19.000Z","_content":"\n> vim 常用命令\n\n\n### 替换\n\n```\n# 替换当前行所有 a 为 b\n:s/a/b/g\n\n\n# 替换所有 a 为 b\n:%s/a/b/g\n```\n\n\n\n\n","source":"_posts/vim.md","raw":"---\ntitle: vim\ntags: ['linux']\ndate: 2020-02-26 00:45:19\n---\n\n> vim 常用命令\n\n\n### 替换\n\n```\n# 替换当前行所有 a 为 b\n:s/a/b/g\n\n\n# 替换所有 a 为 b\n:%s/a/b/g\n```\n\n\n\n\n","slug":"vim","published":1,"updated":"2020-07-11T17:03:39.079Z","_id":"ckchuci21000fq1slem777p6s","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>vim 常用命令</p>\n</blockquote>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 替换当前行所有 a 为 b</span><br><span class=\"line\">:s&#x2F;a&#x2F;b&#x2F;g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 替换所有 a 为 b</span><br><span class=\"line\">:%s&#x2F;a&#x2F;b&#x2F;g</span><br></pre></td></tr></table></figure>\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<blockquote>\n<p>vim 常用命令</p>\n</blockquote>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 替换当前行所有 a 为 b</span><br><span class=\"line\">:s&#x2F;a&#x2F;b&#x2F;g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 替换所有 a 为 b</span><br><span class=\"line\">:%s&#x2F;a&#x2F;b&#x2F;g</span><br></pre></td></tr></table></figure>\n\n\n\n\n"},{"title":"解压缩编码列表","date":"2020-01-23T04:49:14.000Z","_content":"\nhttps://leetcode-cn.com/problems/decompress-run-length-encoded-list/\n\n给你一个以行程长度编码压缩的整数列表 nums 。\n\n考虑每相邻两个元素 [a, b] = [nums[2*i], nums[2*i+1]] （其中 i >= 0 ），每一对都表示解压后有 a 个值为 b 的元素。\n\n请你返回解压后的列表。\n\n\n\n示例：\n\n输入：nums = [1,2,3,4]\n输出：[2,4,4,4]\n\n\n提示：\n\n2 <= nums.length <= 100\nnums.length % 2 == 0\n1 <= nums[i] <= 100\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/decompress-run-length-encoded-list\n\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n```\npublic int[] decompressRLElist(int[] nums) {\nint length = nums.length;\nint resultLen = 0;\nfor (int i = 0; i < length; i = i + 2) {\nresultLen = resultLen + nums[i];\n}\nint[] results = new int[resultLen];\nint index = 0;\nfor (int i = 0; i < length; i = i + 2) {\nfor (int j = 0; j < nums[i]; j++) {\nresults[index++] = nums[i + 1];\n}\n}\nreturn results;\n}\n```\n\n### summary\n\n总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。\n\n例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]\n\n如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。\n\n\n\n\n","source":"_posts/解压缩编码列表.md","raw":"---\ntitle: 解压缩编码列表\ntags: ['leetcode']\ndate: 2020-01-23 12:49:14\n---\n\nhttps://leetcode-cn.com/problems/decompress-run-length-encoded-list/\n\n给你一个以行程长度编码压缩的整数列表 nums 。\n\n考虑每相邻两个元素 [a, b] = [nums[2*i], nums[2*i+1]] （其中 i >= 0 ），每一对都表示解压后有 a 个值为 b 的元素。\n\n请你返回解压后的列表。\n\n\n\n示例：\n\n输入：nums = [1,2,3,4]\n输出：[2,4,4,4]\n\n\n提示：\n\n2 <= nums.length <= 100\nnums.length % 2 == 0\n1 <= nums[i] <= 100\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/decompress-run-length-encoded-list\n\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n```\npublic int[] decompressRLElist(int[] nums) {\nint length = nums.length;\nint resultLen = 0;\nfor (int i = 0; i < length; i = i + 2) {\nresultLen = resultLen + nums[i];\n}\nint[] results = new int[resultLen];\nint index = 0;\nfor (int i = 0; i < length; i = i + 2) {\nfor (int j = 0; j < nums[i]; j++) {\nresults[index++] = nums[i + 1];\n}\n}\nreturn results;\n}\n```\n\n### summary\n\n总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。\n\n例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]\n\n如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。\n\n\n\n\n","slug":"解压缩编码列表","published":1,"updated":"2020-07-11T17:11:05.759Z","_id":"ckchuci22000hq1sl3jgb1dqj","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list/</a></p>\n<p>给你一个以行程长度编码压缩的整数列表 nums 。</p>\n<p>考虑每相邻两个元素 [a, b] = [nums[2<em>i], nums[2</em>i+1]] （其中 i &gt;= 0 ），每一对都表示解压后有 a 个值为 b 的元素。</p>\n<p>请你返回解压后的列表。</p>\n<p>示例：</p>\n<p>输入：nums = [1,2,3,4]<br>输出：[2,4,4,4]</p>\n<p>提示：</p>\n<p>2 &lt;= nums.length &lt;= 100<br>nums.length % 2 == 0<br>1 &lt;= nums[i] &lt;= 100</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list</a></p>\n<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int[] decompressRLElist(int[] nums) &#123;</span><br><span class=\"line\">int length &#x3D; nums.length;</span><br><span class=\"line\">int resultLen &#x3D; 0;</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; length; i &#x3D; i + 2) &#123;</span><br><span class=\"line\">resultLen &#x3D; resultLen + nums[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int[] results &#x3D; new int[resultLen];</span><br><span class=\"line\">int index &#x3D; 0;</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; length; i &#x3D; i + 2) &#123;</span><br><span class=\"line\">for (int j &#x3D; 0; j &lt; nums[i]; j++) &#123;</span><br><span class=\"line\">results[index++] &#x3D; nums[i + 1];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return results;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"summary\"><a href=\"#summary\" class=\"headerlink\" title=\"summary\"></a>summary</h3><p>总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。</p>\n<p>例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]</p>\n<p>如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list/</a></p>\n<p>给你一个以行程长度编码压缩的整数列表 nums 。</p>\n<p>考虑每相邻两个元素 [a, b] = [nums[2<em>i], nums[2</em>i+1]] （其中 i &gt;= 0 ），每一对都表示解压后有 a 个值为 b 的元素。</p>\n<p>请你返回解压后的列表。</p>\n<p>示例：</p>\n<p>输入：nums = [1,2,3,4]<br>输出：[2,4,4,4]</p>\n<p>提示：</p>\n<p>2 &lt;= nums.length &lt;= 100<br>nums.length % 2 == 0<br>1 &lt;= nums[i] &lt;= 100</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/decompress-run-length-encoded-list\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/decompress-run-length-encoded-list</a></p>\n<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int[] decompressRLElist(int[] nums) &#123;</span><br><span class=\"line\">int length &#x3D; nums.length;</span><br><span class=\"line\">int resultLen &#x3D; 0;</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; length; i &#x3D; i + 2) &#123;</span><br><span class=\"line\">resultLen &#x3D; resultLen + nums[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int[] results &#x3D; new int[resultLen];</span><br><span class=\"line\">int index &#x3D; 0;</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; length; i &#x3D; i + 2) &#123;</span><br><span class=\"line\">for (int j &#x3D; 0; j &lt; nums[i]; j++) &#123;</span><br><span class=\"line\">results[index++] &#x3D; nums[i + 1];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return results;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"summary\"><a href=\"#summary\" class=\"headerlink\" title=\"summary\"></a>summary</h3><p>总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。</p>\n<p>例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]</p>\n<p>如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。</p>\n"},{"title":"递归","date":"2020-01-26T02:52:05.000Z","_content":"\n> 在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。\n\n\n1. 优点\n\n比较直观\n\n2. 缺点\n\n方法调用是栈操作，嵌太多，会栈溢出。\n\n### 阶乘\n\n\n```\npublic int fun1(int n) {\nif (n == 1) {\nreturn 1;\n}\nreturn n * fun1(n - 1);\n}\n```\n\n### 获取二叉树的最大深度\n\n- TreeNode\n\n```\npublic class TreeNode {\n\npublic int val;\npublic TreeNode left;\npublic TreeNode right;\n\npublic TreeNode(int x) {\nval = x;\n}\n}\n```\n\n- 获取树的最大深度\n\n```\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n```\n\n- 获取指定深度的和\n\n```\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n```\n\n\n\n\n\n\n\n","source":"_posts/递归.md","raw":"---\ntitle: 递归\ntags: ['递归', '二叉树', '阶乘', 'java']\ndate: 2020-01-26 10:52:05\n---\n\n> 在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。\n\n\n1. 优点\n\n比较直观\n\n2. 缺点\n\n方法调用是栈操作，嵌太多，会栈溢出。\n\n### 阶乘\n\n\n```\npublic int fun1(int n) {\nif (n == 1) {\nreturn 1;\n}\nreturn n * fun1(n - 1);\n}\n```\n\n### 获取二叉树的最大深度\n\n- TreeNode\n\n```\npublic class TreeNode {\n\npublic int val;\npublic TreeNode left;\npublic TreeNode right;\n\npublic TreeNode(int x) {\nval = x;\n}\n}\n```\n\n- 获取树的最大深度\n\n```\npublic int getMaxDeep(TreeNode treeNode) {\nif (treeNode == null) {\nreturn 0;\n}\nint left = getMaxDeep(treeNode.left);\nint right = getMaxDeep(treeNode.right);\nreturn Math.max(left, right) + 1;\n}\n```\n\n- 获取指定深度的和\n\n```\npublic int dfs(TreeNode treeNode, int currentH, int h) {\nif (treeNode == null) {\nreturn 0;\n}\nif (currentH == h) {\nreturn treeNode.val;\n}\nreturn dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);\n}\n\n```\n\n\n\n\n\n\n\n","slug":"递归","published":1,"updated":"2020-07-11T17:11:05.760Z","_id":"ckchuci23000jq1slhu240o4y","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。</p>\n</blockquote>\n<ol>\n<li>优点</li>\n</ol>\n<p>比较直观</p>\n<ol start=\"2\">\n<li>缺点</li>\n</ol>\n<p>方法调用是栈操作，嵌太多，会栈溢出。</p>\n<h3 id=\"阶乘\"><a href=\"#阶乘\" class=\"headerlink\" title=\"阶乘\"></a>阶乘</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int fun1(int n) &#123;</span><br><span class=\"line\">if (n &#x3D;&#x3D; 1) &#123;</span><br><span class=\"line\">return 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return n * fun1(n - 1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取二叉树的最大深度\"><a href=\"#获取二叉树的最大深度\" class=\"headerlink\" title=\"获取二叉树的最大深度\"></a>获取二叉树的最大深度</h3><ul>\n<li>TreeNode</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class TreeNode &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">public int val;</span><br><span class=\"line\">public TreeNode left;</span><br><span class=\"line\">public TreeNode right;</span><br><span class=\"line\"></span><br><span class=\"line\">public TreeNode(int x) &#123;</span><br><span class=\"line\">val &#x3D; x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>获取树的最大深度</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int getMaxDeep(TreeNode treeNode) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int left &#x3D; getMaxDeep(treeNode.left);</span><br><span class=\"line\">int right &#x3D; getMaxDeep(treeNode.right);</span><br><span class=\"line\">return Math.max(left, right) + 1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>获取指定深度的和</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int dfs(TreeNode treeNode, int currentH, int h) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (currentH &#x3D;&#x3D; h) &#123;</span><br><span class=\"line\">return treeNode.val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<blockquote>\n<p>在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。</p>\n</blockquote>\n<ol>\n<li>优点</li>\n</ol>\n<p>比较直观</p>\n<ol start=\"2\">\n<li>缺点</li>\n</ol>\n<p>方法调用是栈操作，嵌太多，会栈溢出。</p>\n<h3 id=\"阶乘\"><a href=\"#阶乘\" class=\"headerlink\" title=\"阶乘\"></a>阶乘</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int fun1(int n) &#123;</span><br><span class=\"line\">if (n &#x3D;&#x3D; 1) &#123;</span><br><span class=\"line\">return 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return n * fun1(n - 1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取二叉树的最大深度\"><a href=\"#获取二叉树的最大深度\" class=\"headerlink\" title=\"获取二叉树的最大深度\"></a>获取二叉树的最大深度</h3><ul>\n<li>TreeNode</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class TreeNode &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">public int val;</span><br><span class=\"line\">public TreeNode left;</span><br><span class=\"line\">public TreeNode right;</span><br><span class=\"line\"></span><br><span class=\"line\">public TreeNode(int x) &#123;</span><br><span class=\"line\">val &#x3D; x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>获取树的最大深度</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int getMaxDeep(TreeNode treeNode) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int left &#x3D; getMaxDeep(treeNode.left);</span><br><span class=\"line\">int right &#x3D; getMaxDeep(treeNode.right);</span><br><span class=\"line\">return Math.max(left, right) + 1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>获取指定深度的和</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int dfs(TreeNode treeNode, int currentH, int h) &#123;</span><br><span class=\"line\">if (treeNode &#x3D;&#x3D; null) &#123;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (currentH &#x3D;&#x3D; h) &#123;</span><br><span class=\"line\">return treeNode.val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n"},{"title":"TinyURL 的加密与解密","date":"2020-01-27T02:20:39.000Z","_content":"\nhttps://leetcode-cn.com/problems/encode-and-decode-tinyurl/\n\nTinyURL是一种URL简化服务， 比如：当你输入一个URL https://leetcode.com/problems/design-tinyurl 时，它将返回一个简化的URL http://tinyurl.com/4e9iAk.\n\n要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/encode-and-decode-tinyurl\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png)\n\n- 简单 hashMap  计数\n\n```\npublic class TinyURL {\n\npublic static void main(String[] args) {\nTinyURL tinyURL = new TinyURL();\nString longUrl = \"https://leetcode.com/problems/design-tinyurl\";\n//http://tinyurl.com/4e9iAk.\nString shortUrl = tinyURL.encode(longUrl);\nSystem.out.println(shortUrl);\nSystem.out.println(tinyURL.decode(shortUrl));\n}\n\nMap<Integer, String> hashMap = new HashMap<>();\nint i = 0;\n\n// Encodes a URL to a shortened URL.\npublic String encode(String longUrl) {\nhashMap.put(i, longUrl);\nreturn \"http://tinyurl.com/\" + i++;\n}\n\n// Decodes a shortened URL to its original URL.\npublic String decode(String shortUrl) {\nreturn hashMap.get(Integer.valueOf(shortUrl.replace(\"http://tinyurl.com/\", \"\")));\n}\n}\n```\n\n\n\n\n","source":"_posts/TinyURL 的加密与解密.md","raw":"---\ntitle: TinyURL 的加密与解密\ntags: ['leetcode']\ndate: 2020-01-27 10:20:39\n---\n\nhttps://leetcode-cn.com/problems/encode-and-decode-tinyurl/\n\nTinyURL是一种URL简化服务， 比如：当你输入一个URL https://leetcode.com/problems/design-tinyurl 时，它将返回一个简化的URL http://tinyurl.com/4e9iAk.\n\n要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/encode-and-decode-tinyurl\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n### java\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png)\n\n- 简单 hashMap  计数\n\n```\npublic class TinyURL {\n\npublic static void main(String[] args) {\nTinyURL tinyURL = new TinyURL();\nString longUrl = \"https://leetcode.com/problems/design-tinyurl\";\n//http://tinyurl.com/4e9iAk.\nString shortUrl = tinyURL.encode(longUrl);\nSystem.out.println(shortUrl);\nSystem.out.println(tinyURL.decode(shortUrl));\n}\n\nMap<Integer, String> hashMap = new HashMap<>();\nint i = 0;\n\n// Encodes a URL to a shortened URL.\npublic String encode(String longUrl) {\nhashMap.put(i, longUrl);\nreturn \"http://tinyurl.com/\" + i++;\n}\n\n// Decodes a shortened URL to its original URL.\npublic String decode(String shortUrl) {\nreturn hashMap.get(Integer.valueOf(shortUrl.replace(\"http://tinyurl.com/\", \"\")));\n}\n}\n```\n\n\n\n\n","slug":"TinyURL 的加密与解密","published":1,"updated":"2020-07-11T17:03:39.060Z","_id":"ckchuci2c000lq1sl3pq2c5ng","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl/</a></p>\n<p>TinyURL是一种URL简化服务， 比如：当你输入一个URL <a href=\"https://leetcode.com/problems/design-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode.com/problems/design-tinyurl</a> 时，它将返回一个简化的URL <a href=\"http://tinyurl.com/4e9iAk\" target=\"_blank\" rel=\"noopener\">http://tinyurl.com/4e9iAk</a>.</p>\n<p>要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png\" alt=\"\"></p>\n<ul>\n<li>简单 hashMap  计数</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class TinyURL &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">TinyURL tinyURL &#x3D; new TinyURL();</span><br><span class=\"line\">String longUrl &#x3D; &quot;https:&#x2F;&#x2F;leetcode.com&#x2F;problems&#x2F;design-tinyurl&quot;;</span><br><span class=\"line\">&#x2F;&#x2F;http:&#x2F;&#x2F;tinyurl.com&#x2F;4e9iAk.</span><br><span class=\"line\">String shortUrl &#x3D; tinyURL.encode(longUrl);</span><br><span class=\"line\">System.out.println(shortUrl);</span><br><span class=\"line\">System.out.println(tinyURL.decode(shortUrl));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Map&lt;Integer, String&gt; hashMap &#x3D; new HashMap&lt;&gt;();</span><br><span class=\"line\">int i &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Encodes a URL to a shortened URL.</span><br><span class=\"line\">public String encode(String longUrl) &#123;</span><br><span class=\"line\">hashMap.put(i, longUrl);</span><br><span class=\"line\">return &quot;http:&#x2F;&#x2F;tinyurl.com&#x2F;&quot; + i++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Decodes a shortened URL to its original URL.</span><br><span class=\"line\">public String decode(String shortUrl) &#123;</span><br><span class=\"line\">return hashMap.get(Integer.valueOf(shortUrl.replace(&quot;http:&#x2F;&#x2F;tinyurl.com&#x2F;&quot;, &quot;&quot;)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl/</a></p>\n<p>TinyURL是一种URL简化服务， 比如：当你输入一个URL <a href=\"https://leetcode.com/problems/design-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode.com/problems/design-tinyurl</a> 时，它将返回一个简化的URL <a href=\"http://tinyurl.com/4e9iAk\" target=\"_blank\" rel=\"noopener\">http://tinyurl.com/4e9iAk</a>.</p>\n<p>要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/encode-and-decode-tinyurl\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/encode-and-decode-tinyurl</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200127200727.png\" alt=\"\"></p>\n<ul>\n<li>简单 hashMap  计数</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class TinyURL &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">TinyURL tinyURL &#x3D; new TinyURL();</span><br><span class=\"line\">String longUrl &#x3D; &quot;https:&#x2F;&#x2F;leetcode.com&#x2F;problems&#x2F;design-tinyurl&quot;;</span><br><span class=\"line\">&#x2F;&#x2F;http:&#x2F;&#x2F;tinyurl.com&#x2F;4e9iAk.</span><br><span class=\"line\">String shortUrl &#x3D; tinyURL.encode(longUrl);</span><br><span class=\"line\">System.out.println(shortUrl);</span><br><span class=\"line\">System.out.println(tinyURL.decode(shortUrl));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Map&lt;Integer, String&gt; hashMap &#x3D; new HashMap&lt;&gt;();</span><br><span class=\"line\">int i &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Encodes a URL to a shortened URL.</span><br><span class=\"line\">public String encode(String longUrl) &#123;</span><br><span class=\"line\">hashMap.put(i, longUrl);</span><br><span class=\"line\">return &quot;http:&#x2F;&#x2F;tinyurl.com&#x2F;&quot; + i++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Decodes a shortened URL to its original URL.</span><br><span class=\"line\">public String decode(String shortUrl) &#123;</span><br><span class=\"line\">return hashMap.get(Integer.valueOf(shortUrl.replace(&quot;http:&#x2F;&#x2F;tinyurl.com&#x2F;&quot;, &quot;&quot;)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n"},{"title":"宝石与石头","date":"2020-01-24T01:15:45.000Z","_content":"\nhttps://leetcode-cn.com/problems/jewels-and-stones/\n\n给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。\n\nJ 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此\"a\"和\"A\"是不同类型的石头。\n\n示例 1:\n\n输入: J = \"aA\", S = \"aAAbbbb\"\n输出: 3\n示例 2:\n\n输入: J = \"z\", S = \"ZZ\"\n输出: 0\n注意:\n\nS 和 J 最多含有50个字母。\nJ 中的字符不重复。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/jewels-and-stones\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png)\n\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<String> jewelsSet = new HashSet<>(J.length());\nchar[] jewelsArray = J.toCharArray();\nfor (int i = 0; i < jewelsArray.length; i++) {\njewelsSet.add(String.valueOf(jewelsArray[i]));\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (jewelsSet.contains(String.valueOf(c))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n呵呵，肯定是浪费为   String.valueOf 方法的转换上了\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png)\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<Character> jewelsSet = new HashSet<>(J.length());\nfor (int i = 0; i < J.length(); i++) {\njewelsSet.add(J.charAt(i));\n}\nint count = 0;\nfor (int i = 0; i < S.length(); i++) {\nif (jewelsSet.contains(S.charAt(i))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n转为 char 类型操作，好像也没省多少空间。。。\n\n\n- 第三次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png)\n\n\n```\npublic int numJewelsInStones3(String J, String S) {\n// A~Z : 65~90  a~z:97~122\nint[] ints = new int[58];\nfor (char c : J.toCharArray()) {\nints[c - 65] = 1;\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (ints[c - 65] == 1) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n占坑法。参考的。\n\n\n\n\n\n\n","source":"_posts/宝石与石头.md","raw":"---\ntitle: 宝石与石头\ntags: ['占坑法', 'leetcode']\ndate: 2020-01-24 09:15:45\n---\n\nhttps://leetcode-cn.com/problems/jewels-and-stones/\n\n给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。\n\nJ 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此\"a\"和\"A\"是不同类型的石头。\n\n示例 1:\n\n输入: J = \"aA\", S = \"aAAbbbb\"\n输出: 3\n示例 2:\n\n输入: J = \"z\", S = \"ZZ\"\n输出: 0\n注意:\n\nS 和 J 最多含有50个字母。\nJ 中的字符不重复。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/jewels-and-stones\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### java\n\n\n- 第一次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png)\n\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<String> jewelsSet = new HashSet<>(J.length());\nchar[] jewelsArray = J.toCharArray();\nfor (int i = 0; i < jewelsArray.length; i++) {\njewelsSet.add(String.valueOf(jewelsArray[i]));\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (jewelsSet.contains(String.valueOf(c))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n呵呵，肯定是浪费为   String.valueOf 方法的转换上了\n\n\n- 第二次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png)\n\n```\npublic int numJewelsInStones(String J, String S) {\nSet<Character> jewelsSet = new HashSet<>(J.length());\nfor (int i = 0; i < J.length(); i++) {\njewelsSet.add(J.charAt(i));\n}\nint count = 0;\nfor (int i = 0; i < S.length(); i++) {\nif (jewelsSet.contains(S.charAt(i))) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n转为 char 类型操作，好像也没省多少空间。。。\n\n\n- 第三次\n\n![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png)\n\n\n```\npublic int numJewelsInStones3(String J, String S) {\n// A~Z : 65~90  a~z:97~122\nint[] ints = new int[58];\nfor (char c : J.toCharArray()) {\nints[c - 65] = 1;\n}\nint count = 0;\nfor (char c : S.toCharArray()) {\nif (ints[c - 65] == 1) {\ncount++;\n}\n}\nreturn count;\n}\n```\n\n\n占坑法。参考的。\n\n\n\n\n\n\n","slug":"宝石与石头","published":1,"updated":"2020-07-11T17:11:05.742Z","_id":"ckchuci2x005dq1sl9o6mcf7o","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://leetcode-cn.com/problems/jewels-and-stones/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones/</a></p>\n<p>给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。</p>\n<p>J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此”a”和”A”是不同类型的石头。</p>\n<p>示例 1:</p>\n<p>输入: J = “aA”, S = “aAAbbbb”<br>输出: 3<br>示例 2:</p>\n<p>输入: J = “z”, S = “ZZ”<br>输出: 0<br>注意:</p>\n<p>S 和 J 最多含有50个字母。<br>J 中的字符不重复。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/jewels-and-stones\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int numJewelsInStones(String J, String S) &#123;</span><br><span class=\"line\">Set&lt;String&gt; jewelsSet &#x3D; new HashSet&lt;&gt;(J.length());</span><br><span class=\"line\">char[] jewelsArray &#x3D; J.toCharArray();</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; jewelsArray.length; i++) &#123;</span><br><span class=\"line\">jewelsSet.add(String.valueOf(jewelsArray[i]));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (char c : S.toCharArray()) &#123;</span><br><span class=\"line\">if (jewelsSet.contains(String.valueOf(c))) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>呵呵，肯定是浪费为   String.valueOf 方法的转换上了</p>\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int numJewelsInStones(String J, String S) &#123;</span><br><span class=\"line\">Set&lt;Character&gt; jewelsSet &#x3D; new HashSet&lt;&gt;(J.length());</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; J.length(); i++) &#123;</span><br><span class=\"line\">jewelsSet.add(J.charAt(i));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; S.length(); i++) &#123;</span><br><span class=\"line\">if (jewelsSet.contains(S.charAt(i))) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>转为 char 类型操作，好像也没省多少空间。。。</p>\n<ul>\n<li>第三次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int numJewelsInStones3(String J, String S) &#123;</span><br><span class=\"line\">&#x2F;&#x2F; A~Z : 65~90  a~z:97~122</span><br><span class=\"line\">int[] ints &#x3D; new int[58];</span><br><span class=\"line\">for (char c : J.toCharArray()) &#123;</span><br><span class=\"line\">ints[c - 65] &#x3D; 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (char c : S.toCharArray()) &#123;</span><br><span class=\"line\">if (ints[c - 65] &#x3D;&#x3D; 1) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>占坑法。参考的。</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<p><a href=\"https://leetcode-cn.com/problems/jewels-and-stones/\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones/</a></p>\n<p>给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。</p>\n<p>J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此”a”和”A”是不同类型的石头。</p>\n<p>示例 1:</p>\n<p>输入: J = “aA”, S = “aAAbbbb”<br>输出: 3<br>示例 2:</p>\n<p>输入: J = “z”, S = “ZZ”<br>输出: 0<br>注意:</p>\n<p>S 和 J 最多含有50个字母。<br>J 中的字符不重复。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/jewels-and-stones\" target=\"_blank\" rel=\"noopener\">https://leetcode-cn.com/problems/jewels-and-stones</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><ul>\n<li>第一次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int numJewelsInStones(String J, String S) &#123;</span><br><span class=\"line\">Set&lt;String&gt; jewelsSet &#x3D; new HashSet&lt;&gt;(J.length());</span><br><span class=\"line\">char[] jewelsArray &#x3D; J.toCharArray();</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; jewelsArray.length; i++) &#123;</span><br><span class=\"line\">jewelsSet.add(String.valueOf(jewelsArray[i]));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (char c : S.toCharArray()) &#123;</span><br><span class=\"line\">if (jewelsSet.contains(String.valueOf(c))) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>呵呵，肯定是浪费为   String.valueOf 方法的转换上了</p>\n<ul>\n<li>第二次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int numJewelsInStones(String J, String S) &#123;</span><br><span class=\"line\">Set&lt;Character&gt; jewelsSet &#x3D; new HashSet&lt;&gt;(J.length());</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; J.length(); i++) &#123;</span><br><span class=\"line\">jewelsSet.add(J.charAt(i));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; S.length(); i++) &#123;</span><br><span class=\"line\">if (jewelsSet.contains(S.charAt(i))) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>转为 char 类型操作，好像也没省多少空间。。。</p>\n<ul>\n<li>第三次</li>\n</ul>\n<p><img src=\"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int numJewelsInStones3(String J, String S) &#123;</span><br><span class=\"line\">&#x2F;&#x2F; A~Z : 65~90  a~z:97~122</span><br><span class=\"line\">int[] ints &#x3D; new int[58];</span><br><span class=\"line\">for (char c : J.toCharArray()) &#123;</span><br><span class=\"line\">ints[c - 65] &#x3D; 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int count &#x3D; 0;</span><br><span class=\"line\">for (char c : S.toCharArray()) &#123;</span><br><span class=\"line\">if (ints[c - 65] &#x3D;&#x3D; 1) &#123;</span><br><span class=\"line\">count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>占坑法。参考的。</p>\n"},{"title":"finereport","date":"2020-02-22T01:26:08.000Z","_content":"\n---\n吐槽\n\n[支持的数据库](https://help.finereport.com/doc-view-2458.html#3)\n\n> mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本\n\n```\nbrew install mysql@5.7\nbrew services start mysql@5.7\n```\n\n接 [FineReport \\\\| beer](https://www.hexianwei.com/2019/01/06/FineReport-10.0/) ，继续写~~~\n\n\n---\n本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！\n\n### url 动态传参\n\n\n引入原话：\n\n> 网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询\n\n\n其实就是 url 动态传参数，传递到模板。\n\n---\n未解决。没找到解决方案。\n\n\n\n\n","source":"_posts/finereport.md","raw":"---\ntitle: finereport\ntags: ['tools']\ndate: 2020-02-22 09:26:08\n---\n\n---\n吐槽\n\n[支持的数据库](https://help.finereport.com/doc-view-2458.html#3)\n\n> mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本\n\n```\nbrew install mysql@5.7\nbrew services start mysql@5.7\n```\n\n接 [FineReport \\\\| beer](https://www.hexianwei.com/2019/01/06/FineReport-10.0/) ，继续写~~~\n\n\n---\n本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！\n\n### url 动态传参\n\n\n引入原话：\n\n> 网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询\n\n\n其实就是 url 动态传参数，传递到模板。\n\n---\n未解决。没找到解决方案。\n\n\n\n\n","slug":"finereport","published":1,"updated":"2020-07-11T17:03:39.062Z","_id":"ckchuci2y005eq1slcoyc6nm5","comments":1,"layout":"post","photos":[],"link":"","content":"<hr>\n<p>吐槽</p>\n<p><a href=\"https://help.finereport.com/doc-view-2458.html#3\" target=\"_blank\" rel=\"noopener\">支持的数据库</a></p>\n<blockquote>\n<p>mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mysql@5.7</span><br><span class=\"line\">brew services start mysql@5.7</span><br></pre></td></tr></table></figure>\n\n<p>接 <a href=\"https://www.hexianwei.com/2019/01/06/FineReport-10.0/\" target=\"_blank\" rel=\"noopener\">FineReport \\| beer</a> ，继续写<del>~</del></p>\n<hr>\n<p>本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！</p>\n<h3 id=\"url-动态传参\"><a href=\"#url-动态传参\" class=\"headerlink\" title=\"url 动态传参\"></a>url 动态传参</h3><p>引入原话：</p>\n<blockquote>\n<p>网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询</p>\n</blockquote>\n<p>其实就是 url 动态传参数，传递到模板。</p>\n<hr>\n<p>未解决。没找到解决方案。</p>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<hr>\n<p>吐槽</p>\n<p><a href=\"https://help.finereport.com/doc-view-2458.html#3\" target=\"_blank\" rel=\"noopener\">支持的数据库</a></p>\n<blockquote>\n<p>mysql 居然只支持到 5.7 🙄。Mac 默认是 8.x，需要下载指定版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mysql@5.7</span><br><span class=\"line\">brew services start mysql@5.7</span><br></pre></td></tr></table></figure>\n\n<p>接 <a href=\"https://www.hexianwei.com/2019/01/06/FineReport-10.0/\" target=\"_blank\" rel=\"noopener\">FineReport \\| beer</a> ，继续写<del>~</del></p>\n<hr>\n<p>本 blog 记录一些网友提问的功能，其实很多官方的已经很完善了。我也会同时标注！</p>\n<h3 id=\"url-动态传参\"><a href=\"#url-动态传参\" class=\"headerlink\" title=\"url 动态传参\"></a>url 动态传参</h3><p>引入原话：</p>\n<blockquote>\n<p>网友A: 就是报表先用帆软的设计器做出来。我现在想把这些报表集成到公司自己开发的系统里面。就是集成到项目里。但是报表查询的数据、我想根据不同的人登陆系统、查看不同的数据、实现动态过滤查询</p>\n</blockquote>\n<p>其实就是 url 动态传参数，传递到模板。</p>\n<hr>\n<p>未解决。没找到解决方案。</p>\n"},{"title":"jenkins","date":"2020-02-25T17:12:55.000Z","_content":"\n> 记录简单搭建\n\n\n### install\n\n[Debian Repository for Jenkins](https://pkg.jenkins.io/debian/)\n\n\n[安装Jenkins](https://jenkins.io/zh/doc/book/installing/)\n\n\n\n### start\n\n```\nservice jenkins start\n\n\n默认端口为 8080\n\n可修改配置文件：\n\n/etc/default/jenkins\n```\n\n### config\n\n默认上面的 port = 8081\n\n访问： localhost:8081\n\n1. copy 管理员密码\n2.\n\n","source":"_posts/jenkins.md","raw":"---\ntitle: jenkins\ntags: ['java']\ndate: 2020-02-26 01:12:55\n---\n\n> 记录简单搭建\n\n\n### install\n\n[Debian Repository for Jenkins](https://pkg.jenkins.io/debian/)\n\n\n[安装Jenkins](https://jenkins.io/zh/doc/book/installing/)\n\n\n\n### start\n\n```\nservice jenkins start\n\n\n默认端口为 8080\n\n可修改配置文件：\n\n/etc/default/jenkins\n```\n\n### config\n\n默认上面的 port = 8081\n\n访问： localhost:8081\n\n1. copy 管理员密码\n2.\n\n","slug":"jenkins","published":1,"updated":"2020-07-11T17:03:39.066Z","_id":"ckchuci39005gq1sl86vadv14","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>记录简单搭建</p>\n</blockquote>\n<h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><p><a href=\"https://pkg.jenkins.io/debian/\" target=\"_blank\" rel=\"noopener\">Debian Repository for Jenkins</a></p>\n<p><a href=\"https://jenkins.io/zh/doc/book/installing/\" target=\"_blank\" rel=\"noopener\">安装Jenkins</a></p>\n<h3 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service jenkins start</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">默认端口为 8080</span><br><span class=\"line\"></span><br><span class=\"line\">可修改配置文件：</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;etc&#x2F;default&#x2F;jenkins</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config\"></a>config</h3><p>默认上面的 port = 8081</p>\n<p>访问： localhost:8081</p>\n<ol>\n<li>copy 管理员密码</li>\n<li></li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200711235140.png","name":"Beer","introduction":"My shadow","url":"https://www.hexianwei.com/","title":"Ping beer"}]}},"excerpt":"","more":"<blockquote>\n<p>记录简单搭建</p>\n</blockquote>\n<h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><p><a href=\"https://pkg.jenkins.io/debian/\" target=\"_blank\" rel=\"noopener\">Debian Repository for Jenkins</a></p>\n<p><a href=\"https://jenkins.io/zh/doc/book/installing/\" target=\"_blank\" rel=\"noopener\">安装Jenkins</a></p>\n<h3 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service jenkins start</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">默认端口为 8080</span><br><span class=\"line\"></span><br><span class=\"line\">可修改配置文件：</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;etc&#x2F;default&#x2F;jenkins</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config\"></a>config</h3><p>默认上面的 port = 8081</p>\n<p>访问： localhost:8081</p>\n<ol>\n<li>copy 管理员密码</li>\n<li></li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckchuci1c0000q1sl1bxo6l1f","tag_id":"ckchsar3b000nqwsl1a6t72k1","_id":"ckchuci1h0002q1sl85teg8pc"},{"post_id":"ckchuci1f0001q1sl6tvs8802","tag_id":"ckchsar2v0003qwsl2v1uflb6","_id":"ckchuci1i0004q1sl2c085uev"},{"post_id":"ckchuci1h0003q1slfj7yb7x0","tag_id":"ckchsar33000bqwsl3yu0g49y","_id":"ckchuci1x0006q1sl2of0gaue"},{"post_id":"ckchuci1i0005q1slbzvi8wul","tag_id":"ckchsar33000bqwsl3yu0g49y","_id":"ckchuci2l002cq1sl4usg9fsb"},{"post_id":"ckchuci1x0007q1sl6fmq6ca0","tag_id":"ckchsar3b000nqwsl1a6t72k1","_id":"ckchuci2l002dq1sl1l7qe3n1"},{"post_id":"ckchuci1y0009q1sl69peg12t","tag_id":"ckchsar34000fqwsl0hmu6apo","_id":"ckchuci2l002eq1sl705i41pj"},{"post_id":"ckchuci1z000bq1slaq279yqb","tag_id":"ckchsar33000bqwsl3yu0g49y","_id":"ckchuci2l002fq1sl21gfg9h5"},{"post_id":"ckchuci20000dq1sl2qgi22px","tag_id":"ckchsar3l0019qwsl6tgb0arb","_id":"ckchuci2l002gq1sl95ve1e9n"},{"post_id":"ckchuci21000fq1slem777p6s","tag_id":"ckchsar3l0016qwsl1nx55y6k","_id":"ckchuci2l002hq1sl1ygu9j3o"},{"post_id":"ckchuci22000hq1sl3jgb1dqj","tag_id":"ckchsar33000bqwsl3yu0g49y","_id":"ckchuci2l002iq1sl0ilufedb"},{"post_id":"ckchuci23000jq1slhu240o4y","tag_id":"ckchsar5o007uqwsl4y3eb38k","_id":"ckchuci2o003qq1sleyjyaxqn"},{"post_id":"ckchuci23000jq1slhu240o4y","tag_id":"ckchsar5q007xqwsl06qkamwi","_id":"ckchuci2o003rq1sle97ggemw"},{"post_id":"ckchuci23000jq1slhu240o4y","tag_id":"ckchsar3b000nqwsl1a6t72k1","_id":"ckchuci2v005bq1sl7gwgfmro"},{"post_id":"ckchuci2c000lq1sl3pq2c5ng","tag_id":"ckchsar33000bqwsl3yu0g49y","_id":"ckchuci2v005cq1sldtw97kwp"},{"post_id":"ckchuci2x005dq1sl9o6mcf7o","tag_id":"ckchsar33000bqwsl3yu0g49y","_id":"ckchuci39005fq1sl9se09347"},{"post_id":"ckchuci2y005eq1slcoyc6nm5","tag_id":"ckchsar34000fqwsl0hmu6apo","_id":"ckchuci3f007pq1sl860b5fk6"},{"post_id":"ckchuci39005gq1sl86vadv14","tag_id":"ckchsar3b000nqwsl1a6t72k1","_id":"ckchuci3f007qq1sl1n688qrx"},{"post_id":"ckchuci2x005dq1sl9o6mcf7o","tag_id":"ckchsar3m001cqwsl319b9ydk","_id":"ckchukjzo007rq1sldjvr7vkf"},{"post_id":"ckchuci23000jq1slhu240o4y","tag_id":"ckchsar5q0080qwslalhsgmen","_id":"ckchukjzw007sq1slhs8sccb6"}],"Tag":[{"name":"book","_id":"ckchsar2v0003qwsl2v1uflb6"},{"name":"sql","_id":"ckchsar300007qwslhosk5lxo"},{"name":"leetcode","_id":"ckchsar33000bqwsl3yu0g49y"},{"name":"tools","_id":"ckchsar34000fqwsl0hmu6apo"},{"name":"java","_id":"ckchsar3b000nqwsl1a6t72k1"},{"name":"postgresql","_id":"ckchsar3j000zqwslbrhmc28g"},{"name":"]","_id":"ckchsar3j0011qwsl4wnw91v6"},{"name":"content: ","_id":"ckchsar3j0012qwsle73n7b48"},{"name":"# postgresql","_id":"ckchsar3k0013qwsl4efg4gfp"},{"name":"linesHighlighted: []","_id":"ckchsar3k0014qwslan85crfp"},{"name":"isStarred: false","_id":"ckchsar3k0015qwsl6sl44tcr"},{"name":"linux","_id":"ckchsar3l0016qwsl1nx55y6k"},{"name":"scrapy","_id":"ckchsar3l0019qwsl6tgb0arb"},{"name":"占坑法","_id":"ckchsar3m001cqwsl319b9ydk"},{"name":"# 宝石与石头","_id":"ckchsar3o001lqwslf19uhxmy"},{"name":"2020/1/24","_id":"ckchsar3o001mqwsla9p9172u"},{"name":"https://leetcode-cn.com/problems/jewels-and-stones/","_id":"ckchsar3o001nqwsl7iqqaxpr"},{"name":"给定字符串J\\xa0代表石头中宝石的类型，和字符串\\xa0S代表你拥有的石头。\\xa0S\\xa0中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。","_id":"ckchsar3p001oqwslea4xft7z"},{"name":"J\\xa0中的字母不重复，J\\xa0和\\xa0S中的所有字符都是字母。字母区分大小写，因此a和A是不同类型的石头。","_id":"ckchsar3p001pqwslcg9xc4nu"},{"name":"示例 1:","_id":"ckchsar3s001qqwsl2rrb5f4a"},{"name":"输入: J = aA, S = aAAbbbb","_id":"ckchsar3s001rqwsl89bs4ru5"},{"name":"输出: 3","_id":"ckchsar3s001sqwsl4zew078s"},{"name":"示例 2:","_id":"ckchsar3s001tqwsl0bc7f1sr"},{"name":"输入: J = z, S = ZZ","_id":"ckchsar3t001uqwsl6ak9g3te"},{"name":"输出: 0","_id":"ckchsar3t001vqwslghin18ac"},{"name":"注意:","_id":"ckchsar3t001wqwsl98e73jx3"},{"name":"S\\xa0和\\xa0J\\xa0最多含有50个字母。","_id":"ckchsar3t001xqwslbprcgoc5"},{"name":"J\\xa0中的字符不重复。","_id":"ckchsar3u001yqwsl9j8ecacw"},{"name":"来源：力扣（LeetCode）","_id":"ckchsar3u001zqwslezcnhte4"},{"name":"链接：https://leetcode-cn.com/problems/jewels-and-stones","_id":"ckchsar3u0020qwsle7196g9j"},{"name":"著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","_id":"ckchsar3v0021qwsl0uc66thc"},{"name":"### java","_id":"ckchsar3v0022qwsl9iele7rs"},{"name":"- 第一次","_id":"ckchsar3v0023qwslh686gdog"},{"name":"![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182356.png)","_id":"ckchsar3v0024qwsl95pu9sbw"},{"name":"```","_id":"ckchsar3w0025qwsl0mkw4fb4"},{"name":"public int numJewelsInStones(String J, String S) {","_id":"ckchsar3w0026qwsl0iuu275k"},{"name":"Set<String> jewelsSet = new HashSet<>(J.length());","_id":"ckchsar3w0027qwsl91i23zzu"},{"name":"char[] jewelsArray = J.toCharArray();","_id":"ckchsar3w0028qwsl4dahf58e"},{"name":"for (int i = 0; i < jewelsArray.length; i++) {","_id":"ckchsar3w0029qwsl10zh83fu"},{"name":"jewelsSet.add(String.valueOf(jewelsArray[i]));","_id":"ckchsar3x002aqwslhojfdftk"},{"name":"}","_id":"ckchsar3x002bqwslepryb42f"},{"name":"int count = 0;","_id":"ckchsar3x002cqwsl002odwta"},{"name":"for (char c : S.toCharArray()) {","_id":"ckchsar3x002dqwsl8bmp9bvn"},{"name":"if (jewelsSet.contains(String.valueOf(c))) {","_id":"ckchsar3y002eqwsl23bfggyt"},{"name":"count++;","_id":"ckchsar3z002fqwslax3917cp"},{"name":"return count;","_id":"ckchsar40002iqwslbt9470p9"},{"name":"呵呵，肯定是浪费为   String.valueOf 方法的转换上了","_id":"ckchsar41002lqwslc2vl4td1"},{"name":"- 第二次","_id":"ckchsar42002mqwsl2xwy2ids"},{"name":"![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124182927.png)","_id":"ckchsar42002nqwslbm0z62by"},{"name":"Set<Character> jewelsSet = new HashSet<>(J.length());","_id":"ckchsar43002qqwslakj05n1d"},{"name":"for (int i = 0; i < J.length(); i++) {","_id":"ckchsar43002rqwsl9clp1g74"},{"name":"jewelsSet.add(J.charAt(i));","_id":"ckchsar44002sqwsleylifyjr"},{"name":"for (int i = 0; i < S.length(); i++) {","_id":"ckchsar44002vqwslhdhx15og"},{"name":"if (jewelsSet.contains(S.charAt(i))) {","_id":"ckchsar46002wqwsletxp6hbn"},{"name":"转为 char 类型操作，好像也没省多少空间。。。","_id":"ckchsar4c0033qwslcqri2i2u"},{"name":"- 第三次","_id":"ckchsar4d0034qwsl0emg5len"},{"name":"![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200124191914.png)","_id":"ckchsar4d0035qwsl10h8ao8c"},{"name":"public int numJewelsInStones3(String J, String S) {","_id":"ckchsar4d0037qwsl4abt6iw8"},{"name":"// A~Z : 65~90  a~z:97~122","_id":"ckchsar4e0038qwslfd8ndi02"},{"name":"int[] ints = new int[58];","_id":"ckchsar4e0039qwsl6zlidkru"},{"name":"for (char c : J.toCharArray()) {","_id":"ckchsar4e003aqwsl5z3h09b1"},{"name":"ints[c - 65] = 1;","_id":"ckchsar4f003bqwsl31c65myl"},{"name":"if (ints[c - 65] == 1) {","_id":"ckchsar4g003fqwslcuwd6aay"},{"name":"占坑法。参考的。","_id":"ckchsar4i003mqwsl1lcg7epx"},{"name":"# 统计位数为偶数的数字","_id":"ckchsar4n003vqwsl93s0bc7f"},{"name":"https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/","_id":"ckchsar4n003yqwslb71zcm4b"},{"name":"给你一个整数数组\\xa0nums，请你返回其中位数为\\xa0偶数\\xa0的数字的个数。","_id":"ckchsar4o0041qwsl0a3ldnpp"},{"name":"示例 1：","_id":"ckchsar4o0044qwsl6h0iey27"},{"name":"输入：nums = [12,345,2,6,7896]","_id":"ckchsar4p0048qwsle9ky7qhb"},{"name":"输出：2","_id":"ckchsar50004bqwsl9h0d5iyr"},{"name":"解释：","_id":"ckchsar51004eqwslhyf90vjo"},{"name":"12 是 2 位数字（位数为偶数）","_id":"ckchsar51004hqwsl2jev1yca"},{"name":"345 是 3 位数字（位数为奇数）","_id":"ckchsar51004lqwslh0pl9ior"},{"name":"2 是 1 位数字（位数为奇数）","_id":"ckchsar52004oqwsldux5bopp"},{"name":"6 是 1 位数字 位数为奇数）","_id":"ckchsar53004rqwslc05883hd"},{"name":"7896 是 4 位数字（位数为偶数）","_id":"ckchsar53004uqwsl5gb30wq9"},{"name":"因此只有 12 和 7896 是位数为偶数的数字","_id":"ckchsar53004yqwsle9u0b4ox"},{"name":"示例 2：","_id":"ckchsar540051qwslckzp518h"},{"name":"输入：nums = [555,901,482,1771]","_id":"ckchsar550054qwslblisey57"},{"name":"输出：1","_id":"ckchsar550057qwsl09oq4ntu"},{"name":"只有 1771 是位数为偶数的数字。","_id":"ckchsar56005eqwsl1nl990ej"},{"name":"提示：","_id":"ckchsar57005hqwsl1vmfau98"},{"name":"1 <= nums.length <= 500","_id":"ckchsar57005kqwsleq88ggh1"},{"name":"1 <= nums[i] <= 10^5","_id":"ckchsar58005nqwslcld1gb4j"},{"name":"链接：https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits","_id":"ckchsar58005uqwsl7w4oej2u"},{"name":"![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150215.png)","_id":"ckchsar5a0066qwsl7qeja6ti"},{"name":"public int findNumbers(int[] nums) {","_id":"ckchsar5b006cqwslgeoicfei"},{"name":"int result = 0;","_id":"ckchsar5c006fqwsl1cl4dgak"},{"name":"for (int num : nums) {","_id":"ckchsar5c006jqwsl1lii6uzr"},{"name":"int count = 1;","_id":"ckchsar5c006mqwsl68d5h2rk"},{"name":"while (true) {","_id":"ckchsar5d006pqwsl7k2sbq8r"},{"name":"int x = num / 10;","_id":"ckchsar5d006sqwsl82q4a49l"},{"name":"if (x != 0) {","_id":"ckchsar5e006wqwsl3rvvg3z0"},{"name":"num = x;","_id":"ckchsar5e006zqwsl5rs35ach"},{"name":"} else {","_id":"ckchsar5g0071qwslc4evespr"},{"name":"break;","_id":"ckchsar5g0072qwsl2krzcmhy"},{"name":"if (count % 2 == 0) {","_id":"ckchsar5h0075qwsl1ymxdy11"},{"name":"result++;","_id":"ckchsar5h0076qwsl2sh8fdrd"},{"name":"return result;","_id":"ckchsar5i0079qwsleo789wag"},{"name":"![](https://beer-1256523277.cos.ap-shanghai.myqcloud.com/blog/20200125150752.png)","_id":"ckchsar5j007dqwsleooy3fr9"},{"name":"if (String.valueOf(num).length() % 2 == 0) {","_id":"ckchsar5l007iqwsl67zdc25a"},{"name":"### 总结","_id":"ckchsar5n007pqwsl3ijpf058"},{"name":"1. 判断一个数有多少位数","_id":"ckchsar5n007qqwslf8ip47tn"},{"name":"2. 判断一个数是奇数还是偶数","_id":"ckchsar5o007rqwsl3sra3bkt"},{"name":"递归","_id":"ckchsar5o007uqwsl4y3eb38k"},{"name":"二叉树","_id":"ckchsar5q007xqwsl06qkamwi"},{"name":"阶乘","_id":"ckchsar5q0080qwslalhsgmen"},{"name":"# 递归","_id":"ckchsar5s0089qwslhl9mawge"},{"name":"> 在函数内部，可以调用其他函数。如果调用的是自己，则是递归函数。","_id":"ckchsar5s008dqwsl4gdn3qdi"},{"name":"1. 优点","_id":"ckchsar5t008gqwsl0nug77sb"},{"name":"比较直观","_id":"ckchsar5t008jqwsl3fga3voi"},{"name":"2. 缺点","_id":"ckchsar5t008mqwsldz0qh0tv"},{"name":"方法调用是栈操作，嵌太多，会栈溢出。","_id":"ckchsar5u008qqwsl48yw2n1v"},{"name":"### 阶乘","_id":"ckchsar5u008tqwsl6535bds5"},{"name":"public int fun1(int n) {","_id":"ckchsar5v008zqwsl0bab3pb4"},{"name":"if (n == 1) {","_id":"ckchsar5v0092qwsl7pqm76z5"},{"name":"return 1;","_id":"ckchsar5v0096qwsl8krcdezg"},{"name":"return n * fun1(n - 1);","_id":"ckchsar5w009cqwsl4bttde2j"},{"name":"### 获取二叉树的最大深度","_id":"ckchsar5y009lqwsl49nr35km"},{"name":"- TreeNode","_id":"ckchsar5y009oqwslfx6t5ciy"},{"name":"public class TreeNode {","_id":"ckchsar5z009vqwsldanzdll2"},{"name":"public int val;","_id":"ckchsar5z009yqwsl6lmb2pgb"},{"name":"public TreeNode left;","_id":"ckchsar6000a1qwsleur77vt7"},{"name":"public TreeNode right;","_id":"ckchsar6000a4qwsl77yd706p"},{"name":"public TreeNode(int x) {","_id":"ckchsar6200a8qwslcfhq6ash"},{"name":"val = x;","_id":"ckchsar6200abqwsl27ldhvr8"},{"name":"- 获取树的最大深度","_id":"ckchsar6600anqwsl3k1icf42"},{"name":"public int getMaxDeep(TreeNode treeNode) {","_id":"ckchsar6700aqqwsl99505bfz"},{"name":"if (treeNode == null) {","_id":"ckchsar6b00arqwsld3hbeblg"},{"name":"return 0;","_id":"ckchsar6b00asqwsl9k5y9tjy"},{"name":"int left = getMaxDeep(treeNode.left);","_id":"ckchsar6c00auqwslakjc45m3"},{"name":"int right = getMaxDeep(treeNode.right);","_id":"ckchsar6c00avqwsl5p492ynj"},{"name":"return Math.max(left, right) + 1;","_id":"ckchsar6d00awqwslemrmfa11"},{"name":"- 获取指定深度的和","_id":"ckchsar6e00azqwsl19ajcd36"},{"name":"public int dfs(TreeNode treeNode, int currentH, int h) {","_id":"ckchsar6f00b1qwsl660zbduv"},{"name":"if (currentH == h) {","_id":"ckchsar6g00b5qwsl2utxb67z"},{"name":"return treeNode.val;","_id":"ckchsar6k00b6qwslfc7a4xal"},{"name":"return dfs(treeNode.left, currentH + 1, h) + dfs(treeNode.right, currentH + 1, h);","_id":"ckchsar6l00b8qwsl1rhac25q"},{"name":"# 解压缩编码列表","_id":"ckchsar6s00bjqwsler1w3jv7"},{"name":"2020/1/23","_id":"ckchsar6s00bmqwsl9o146xmy"},{"name":"https://leetcode-cn.com/problems/decompress-run-length-encoded-list/","_id":"ckchsar6t00bpqwsl4f549vfw"},{"name":"给你一个以行程长度编码压缩的整数列表\\xa0nums\\xa0。","_id":"ckchsar6t00bsqwsl12g6a1f2"},{"name":"考虑每相邻两个元素 [a, b] = [nums[2*i], nums[2*i+1]]\\xa0（其中\\xa0i >= 0\\xa0），每一对都表示解压后有 a\\xa0个值为\\xa0b\\xa0的元素。","_id":"ckchsar6u00bwqwslagp37fo7"},{"name":"请你返回解压后的列表。","_id":"ckchsar6u00bzqwsl22p7cb8t"},{"name":"示例：","_id":"ckchsar6u00c2qwsl0hdg8ies"},{"name":"输入：nums = [1,2,3,4]","_id":"ckchsar6v00c5qwsl46690zi1"},{"name":"输出：[2,4,4,4]","_id":"ckchsar6v00c9qwsl1l4y2fyy"},{"name":"2 <= nums.length <= 100","_id":"ckchsar6w00cfqwslctmu911s"},{"name":"nums.length % 2 == 0","_id":"ckchsar6w00ciqwsla5yu4bt8"},{"name":"1 <= nums[i] <= 100","_id":"ckchsar6w00clqwsl8rfl76f0"},{"name":"链接：https://leetcode-cn.com/problems/decompress-run-length-encoded-list","_id":"ckchsar6y00csqwslesj4bvhq"},{"name":"public int[] decompressRLElist(int[] nums) {","_id":"ckchsar6z00d4qwsl3gvgc01m"},{"name":"int length = nums.length;","_id":"ckchsar7000d7qwsl9ard1w90"},{"name":"int resultLen = 0;","_id":"ckchsar7000daqwsl78cphkk7"},{"name":"for (int i = 0; i < length; i = i + 2) {","_id":"ckchsar7000deqwslgc2h60se"},{"name":"resultLen = resultLen + nums[i];","_id":"ckchsar7100dhqwslbx7k90z0"},{"name":"int[] results = new int[resultLen];","_id":"ckchsar7200dnqwsle7la73n8"},{"name":"int index = 0;","_id":"ckchsar7200dqqwsl5nf0c0hb"},{"name":"for (int j = 0; j < nums[i]; j++) {","_id":"ckchsar7300dsqwsl7hlugjho"},{"name":"results[index++] = nums[i + 1];","_id":"ckchsar7300dtqwsleim75vph"},{"name":"return results;","_id":"ckchsar7400dwqwsl6oxn8wno"},{"name":"### summary","_id":"ckchsar7500dzqwslatex7dcu"},{"name":"总结题目意思就是：数组是满足条件 ：[a, b] = [nums[2*i] ，解压之后 是  a 个 b。","_id":"ckchsar7500e0qwsl2wb20ql4"},{"name":"例如：[a, b] = [6，7]，则加压之后是 [7, 7 ,7 ,7 ,7 ,7 ,7]","_id":"ckchsar7500e1qwslbxqbbxu1"},{"name":"如果是 nums = [1,2,3,4]，则分割为 [a, b] 格式处理。","_id":"ckchsar7600e2qwslcu5heipx"}]}}